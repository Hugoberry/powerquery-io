{
  "functions": [
    {
      "Name": "Access.Database",
      "Documentation": {
        "Documentation.Name": "Access.Database",
        "Documentation.Description": "Devolve unha representación estrutural dunha base de datos de Access.",
        "Documentation.LongDescription": "Devolve unha representación estrutural dunha base de datos de Access, <code>database</code>. Pode especificarse un parámetro de rexistro opcional, <code>options</code>, para controlar as seguintes opcións:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; false).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...], por exemplo.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "database": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AmazonAthena.Databases",
      "Documentation": {
        "Documentation.Name": "Amazon Athena",
        "Documentation.LongDescription": "This function sends basic authentication info"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "role": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AnalysisServices.Databases",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Databases",
        "Documentation.Description": "Devolve as bases de datos de Analysis Services nun computador servidor particular.",
        "Documentation.LongDescription": "Devolve bases de datos nunha instancia de Analysis Services, <code>server</code>. Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>TypedMeasureColumns</code> : Un valor l&#243;xico que indica se os tipos especificados no modelo tabular ou multidimensional se usar&#225;n para os tipos das columnas de medida engadidas. Cando se establece en false, o tipo &quot;number&quot; usarase para todas as columnas de medida. O valor predefinido para esta opci&#243;n &#233; false.</li>\r\n<li><code>Culture</code> : Un nome de referencia cultural que especifica a referencia cultural dos datos. Este corresp&#243;ndese coa propiedade de cadea de conexi&#243;n &quot;Locale Identifier&quot;.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido depende do controlador.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>SubQueries</code> : Un n&#250;mero (0, 1 ou 2) que establece o valor da propiedade &quot;SubQueries&quot; na cadea de conexi&#243;n. Isto controla o comportamento de membros calculados en subselecci&#243;ns ou subcubos. (O valor predefinido &#233; 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Asana.Tables",
      "Documentation": {
        "Documentation.Name": "Asana",
        "Documentation.LongDescription": "Returns a table with Asana task data"
      },
      "ReturnType": "table",
      "Parameters": {
        "link": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Contents",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type",
        "viewAtDate": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AssembleViews.Feed",
      "Documentation": {
        "Documentation.Name": "Assemble Views",
        "Documentation.LongDescription": "Access views created within Assemble Insight"
      },
      "ReturnType": "table",
      "Parameters": {
        "resourceUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AtScale.Cubes",
      "Documentation": {
        "Documentation.Name": "Cubos AtScale",
        "Documentation.Caption": "AtScale",
        "Documentation.Description": "Datos de cubo de importación ou DirectQuery de AtScale.",
        "Documentation.LongDescription": "\r\nDevolve datos de cubo de AtScale no servidor <code>server</code>. Pode especificarse un parámetro de rexistro opcional, <code>options</code>, para controlar as seguintes opcións:\r\n<ul>\r\n        <li><code>TypedMeasureColumns</code>: un valor lóxico que indica se os tipos especificados no modelo multidimensional ou tabular se usarán para os tipos das columnas de medidas engadidas. Cando se configura como false, usarase o tipo \"number\" para todas as columnas de medidas. O valor predefinido para esta opción é false.</li>\r\n        <li><code>CommandTimeout</code>: unha duración (en segundos) que controla canto tempo se permite executar a consulta do lado do servidor ata que se cancele. O valor predefinido depende do controlador. </li>\r\n        <li><code>ConnectionTimeout</code>: unha duración (en segundos) que controla canto tempo esperar antes de abandonar unha tentativa para realizar unha conexión co servidor. O valor predeterminado depende do controlador. </li>\r\n\r\n</ul>\r\nO parámetro de rexistro expecifícase como [opción1 = valor1, opción2 = valor2...].",
        "Documentation.Examples": {
          "Description": "Enumera os datos de cubo dun cubo AtScale.",
          "Code": "AtScale.Cubes(\"https://contoso.atscale.com:10502/xmla/...\")"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Contents",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AutodeskConstructionCloud.Feed",
      "Documentation": {
        "Documentation.Name": "Autodesk Construction Cloud",
        "Documentation.LongDescription": null
      },
      "ReturnType": "table",
      "Parameters": {
        "region": "Text.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDataExplorer.Contents",
      "Documentation": {
        "Documentation.Description": "Importa datos desde Azure Datos Explorer (Kusto)",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "AzureDataExplorer.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Importa datos da instancia de Azure Data Explorer (Kusto).",
        "Documentation.Examples": [
          {
            "Description": "Devolve información dunha táboa de eventos de tormenta",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "Unha táboa con Storm Events da base de datos \"Samples\" no clúster \"help\"."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.AccountContents",
      "Documentation": {
        "Documentation.Description": "Introduza o URL do seu servizo de Azure DevOps Analytics.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Devolve o contido descargado do URL do servizo de Azure DevOps Analytics como un valor binario. A función usa credenciais distintas para organizacións diferentes."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureDevOpsServer.Feed",
      "Documentation": {
        "Documentation.Description": "Fonte de Azure DevOps Services",
        "Documentation.DisplayName": "Fonte de Azure DevOps Services",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Devolve unha táboa de fontes OData proporcionada por Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Tables",
      "Documentation": {
        "Documentation.Caption": "",
        "Documentation.Description": "Escribe o URL do extremo da API de REST de Azure Enterprise asociado coa inscrición",
        "Documentation.DisplayName": "",
        "Documentation.LongDescription": "Devolve unha lista de informes e meses dispoñibles da API de Azure Enterprise",
        "Documentation.Name": "Importar datos de Azure Enterprise",
        "Documentation.Examples": [
          {
            "Description": "Usar a función AzureEnterprise.Tables e navegar a un valor particular para obter os resultados.",
            "Code": "let\r\n    Source = AzureEnterprise.Tables(\"http://ea.azure.com/rest/12345\"),\r\n    Contents = Source{[Key=\"Contents\"]}[Data]\r\nin\r\n    Contents",
            "Result": "Táboa"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureResourceGraph.Query",
      "Documentation": {
        "Documentation.Name": "Azure Resource Graph",
        "Documentation.LongDescription": "Vexa consultas de mostraxe de inicio en https://learn.microsoft.com/azure/governance/resource-graph/samples/starter?tabs=azure-cli.",
        "Documentation.Examples": [
          {
            "Description": "Devolver unha táboa cos resultados da consulta dos \"recursos\" da consulta do usuario",
            "Code": "AzureResourceGraph.Query(\"resources\")",
            "processedResult": "#table({\"\"Column1\"\"}, {{\"\"result\"\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "scope": "text",
        "subscription": "text",
        "managementGroup": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Enumere as táboas dunha instancia de Azure Spark.",
        "Documentation.LongDescription": "Enumere as táboas dunha instancia de Azure Spark.",
        "Documentation.Examples": [
          {
            "Description": "Enumere as táboas dunha instancia de Azure Spark.",
            "Code": "AzureSpark.Tables(\"contoso.azurehdinsight.net\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Blobs",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Blobs",
        "Documentation.Description": "Devolve unha táboa de navegación que inclúe os contedores atopados na conta especificada dunha caixa forte de almacenamento Azure.",
        "Documentation.LongDescription": "Devolve unha táboa de navegación que inclúe unha fila para cada contedor do URL da conta, <code>account</code>, dun almacén de Azure Storage. Cada fila contén unha ligazón aos BLOB do contedor. Pódese especificar <code>options</code> para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>BlockSize</code> : N&#250;mero de bytes que se van ler antes de esperar o consumidor de datos. O valor predefinido &#233; 4 MB.</li>\r\n<li><code>RequestSize</code> : N&#250;mero de bytes que se van tentar ler nunha solicitude HTTP &#250;nica no servidor. O valor predefinido &#233; 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : A opci&#243;n ConcurrentRequests admite unha descarga m&#225;is r&#225;pida de datos mediante a especificaci&#243;n do n&#250;mero de solicitudes que se van realizar simultaneamente, en detrimento do uso da memoria. A memoria necesaria &#233; (ConcurrentRequest * RequestSize). O valor predefinido &#233; 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLake",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLake",
        "Documentation.Description": "Devolve unha táboa de navegación que contén os documentos atopados no contedor especificado e os seus subcartafoles de Azure Data Lake Storage.",
        "Documentation.LongDescription": "Devolve unha táboa de navegación que contén os documentos atopados no contedor especificado e os seus subcartafoles no URL da conta, <code>endpoint</code>, dun sistema de ficheiros de Azure Data Lake Storage. Pódese especificar <code>options</code> para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>BlockSize</code> : N&#250;mero de bytes que se van ler antes de esperar o consumidor de datos. O valor predefinido &#233; 4 MB.</li>\r\n<li><code>RequestSize</code> : N&#250;mero de bytes que se van tentar ler nunha solicitude HTTP &#250;nica no servidor. O valor predefinido &#233; 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : A opci&#243;n ConcurrentRequests admite unha descarga m&#225;is r&#225;pida de datos mediante a especificaci&#243;n do n&#250;mero de solicitudes que se van realizar simultaneamente, en detrimento do uso da memoria. A memoria necesaria &#233; (ConcurrentRequest * RequestSize). O valor predefinido &#233; 16.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha l&#243;xica (true/false) que controla se os ficheiros se devolven nunha visualizaci&#243;n de directorio de &#225;rbore ou nunha lista simple. O valor predefinido &#233; false.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "endpoint": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.Tables",
      "Documentation": {
        "Documentation.Name": "AzureStorage.Tables",
        "Documentation.Description": "Devolve unha táboa de navegación que contén as táboas localizadas na conta especificada dunha caixa forte de almacenamento de Azure.",
        "Documentation.LongDescription": "Devolve unha táboa de navegación que contén unha fila por cada táboa atopada no URL da conta, <code>account</code>, dun almacén de Azure Storage. Cada fila contén unha ligazón á táboa de Azure. É posible que se forneza un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>Timeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar unha solicitude ao servidor. O valor predefinido &#233; espec&#237;fico da orixe.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Time Series Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureTrino.Contents",
      "Documentation": {
        "Documentation.Name": "Azure HDInsight en AKS Trino"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BI360.Contents",
      "Documentation": {
        "Documentation.Name": "Solver",
        "Documentation.FieldDescription": "Navigation table",
        "Documentation.LongDescription": "Retrieves a Navigation Table populated with the enabled tables for a given token"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BIConnector.Contents",
      "Documentation": {
        "Documentation.Description": "Enter connection information",
        "Documentation.DisplayName": "BI Connector",
        "Documentation.Name": "BI Connector",
        "Documentation.Caption": "BI Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsnname": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BQL.Query",
      "Documentation": {
        "Documentation.Name": "Bloomberg Data and Analytics  v1.1.3",
        "Documentation.Description": "Used for retrieving Bloomberg data"
      },
      "ReturnType": "table",
      "Parameters": {
        "BQLQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cdm.Contents",
      "Documentation": {
        "Documentation.Name": "Cdm.Contents",
        "Documentation.Description": "Cdm.Contents",
        "Documentation.LongDescription": "Esta función non está dispoñible porque require .NET 4.5.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Entities",
      "Documentation": {
        "Documentation.Name": "Common Data Service (herdado)",
        "Documentation.Caption": "Common Data Service (herdado)",
        "Documentation.LongDescription": "Conecta coa instancia de Common Data Service (Dynamics 365 e PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.KnowledgeModels",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Celonis.Navigation",
      "Documentation": {
        "Documentation.Name": "Celonis EMS"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cognite.Contents",
      "Documentation": {
        "Documentation.Name": "Cognite Data Fusion (CDF)",
        "Documentation.LongDescription": "Cognite Data Fusion (CDF)"
      },
      "ReturnType": "table",
      "Parameters": {
        "project": "text",
        "environment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "CosmosDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v2"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Csv.Document",
      "Documentation": {
        "Documentation.Name": "Csv.Document",
        "Documentation.Description": "Devolve o contido do documento CSV como unha táboa.",
        "Documentation.LongDescription": "Devolve o contido do documento CSV como táboa.\r\n    <ul>\r\n      <li>\r\n        <code>columns</code> pode ser nulo, o número de columnas, unha lista de nomes de columna, un tipo de táboa ou un rexistro de opcións.\r\n      </li>\r\n      <li>\r\n        <code>delimiter</code> pode ser un só carácter, unha lista de caracteres ou o valor <code>\"\"</code>, que indica que as filas deben dividirse por caracteres de espazo en branco consecutivos. Valor predeterminado: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        Consulte <code>ExtraValues.Type</code> para obter os valores admitidos de <code>extraValues</code>.\r\n      </li>\r\n       <li>\r\n        <code>encoding</code> especifica o tipo de codificación de texto.\r\n      </li>\r\n    </ul>\r\n\r\n    Se se especifica un rexistro para <code>columns</code> (e <code>delimiter</code>, <code>extraValues</code>e <code>encoding</code> son nulos), pódense proporcionar os seguintes campos de rexistro:\r\n    <ul>\r\n      <li>\r\n        <code>Delimiter</code>: delimitador de columna. Valor predeterminado: <code>\",\"</code>.\r\n      </li>\r\n      <li>\r\n        <code>Columns</code>: pode ser nulo, o número de columnas, unha lista de nomes de columna ou un tipo de táboa. Se o número de columnas é menor que o número atopado na entrada, omitiranse as columnas adicionais. Se o número de columnas é maior que o número atopado na entrada, as columnas adicionais serán nulas. Cando non se especifica, o número de columnas vén determinado polo que se topa na entrada.\r\n      </li>\r\n      <li>\r\n        <code>Encoding</code>: codificación de texto do ficheiro. Valor predeterminado: 65001 (UTF-8).\r\n      </li>\r\n      <li>\r\n         <code>CsvStyle</code>: especifica como se controlan as comiñas.\r\n        <ul>\r\n          <li>\r\n            <code>CsvStyle.QuoteAfterDelimiter</code> (valor predeterminado): as comiñas dun campo só son significativas inmediatamente despois do delimitador.\r\n          </li>\r\n          <li>\r\n            <code>CsvStyle.QuoteAlways</code>: as comiñas dun campo sempre son significativas, independentemente de onde aparezan.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n            <code>QuoteStyle</code>: especifica como se controlan os saltos de liña entre comiñas.\r\n        <ul>\r\n          <li>\r\n            <code>QuoteStyle.Csv</code> (valor predeterminado): os saltos de liña entre comiñas trátanse como parte dos datos, non coma a fin da fila actual.\r\n          </li>\r\n          <li>\r\n            <code>QuoteStyle.None</code>: todos os saltos de liña se tratan como a fin da fila actual, incluso cando se producen dentro dun valor entre comiñas.\r\n          </li>\r\n        </ul>\r\n     </li>\r\n    </ul>\r\n..",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Procesar texto CSV con cabeceiras de columna",
            "Code": "let\r\n    csv = Text.Combine({\"OrderID,Item\", \"1,Fishing rod\", \"2,1 lb. worms\"}, \"#(cr)#(lf)\")\r\nin\r\n    Table.PromoteHeaders(Csv.Document(csv))",
            "Result": "Table.FromRecords({\r\n    [OrderID = \"1\", Item = \"Fishing rod\"],\r\n    [OrderID = \"2\", Item = \"1 lb. worms\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "any",
        "columns": "any",
        "delimiter": "any",
        "extraValues": "number",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Dimensions",
      "Documentation": {
        "Documentation.Name": "Cube.Dimensions",
        "Documentation.Description": "Devolve unha táboa que contén o conxunto de dimensións dispoñibles.",
        "Documentation.LongDescription": "Devolve unha táboa que contén o conxunto de dimensións dispoñibles dentro de <code>cube</code>. Cada dimensión é unha táboa que contén un conxunto de atributos de dimensión. Os atributos de dimensión represéntanse como columnas na táboa de dimensións. As dimensións poden expandirse no cubo mediante Cube.AddAndExpandDimensionColumn. ",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.DisplayFolders",
      "Documentation": {
        "Documentation.Name": "Cube.DisplayFolders",
        "Documentation.Description": "Devolve unha árbore aniñada de táboas que representan a xerarquía de cartafoles dos obxectos (por exemplo, dimensións e medidas).",
        "Documentation.LongDescription": "Devolve unha árbore aniñada de táboas que representan a xerarquía do cartafol dos obxectos (por exemplo, dimensións e medidas) dispoñible para usar en <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.MeasureProperties",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperties",
        "Documentation.Description": "Devolve unha táboa que contén o conxunto de propiedades de medidas dispoñibles que se expanden no cubo.",
        "Documentation.LongDescription": "Devolve unha táboa que contén o conxunto de propiedades dispoñibles para as medidas que se expanden no cubo.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Measures",
      "Documentation": {
        "Documentation.Name": "Cube.Measures",
        "Documentation.Description": "Devolve unha táboa que contén o conxunto de medidas dispoñibles.",
        "Documentation.LongDescription": "Devolve unha táboa que contén o conxunto de medidas dispoñibles dentro de <code>cube</code>.\r\n    Cada medida represéntase como unha función. As medidas poden aplicarse ao cubo mediante Cube.AddMeasureColumn.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Parameters",
      "Documentation": {
        "Documentation.Name": "Cube.Parameters",
        "Documentation.Description": "Devolve unha táboa co conxunto de parámetros que se pode aplicar ao cubo.",
        "Documentation.LongDescription": "Devolve unha táboa co conxunto de parámetros que se pode aplicar a <code>cube</code>. Cada parámetro é unha función que se pode invocar para obter <code>cube</code> co parámetro e os seus argumentos aplicados.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.Properties",
      "Documentation": {
        "Documentation.Name": "Cube.Properties",
        "Documentation.Description": "Devolve unha táboa que contén o conxunto de propiedades dispoñibles para as dimensións que se expanden no cubo.",
        "Documentation.LongDescription": "Devolve unha táboa que contén o conxunto de propiedades dispoñibles para as dimensións que se expanden no cubo.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DCWInsights.Feed",
      "Documentation": {
        "Documentation.Name": "DCW - Integrations Platform Insights",
        "Documentation.LongDescription": "Use the DCW Integrations Platform OData API to build powerful reports and dashboards. Consult the API documentation to get the various endpoints available as well as  how to obtain to your JWT key."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Indica o URL da conta de Azure Data Lake Storage Gen1.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila para cada cartafol e ficheiro que se encontra en <code>url</code> desde Azure Data Lake Storage Gen1. Cada fila contén propiedades do cartafol ou ficheiro e unha ligazón ao seu contido."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DataLake.Files",
      "Documentation": {
        "Documentation.Name": "Azure Data Lake Storage Gen1",
        "Documentation.Description": "Indica o URL da conta de Azure Data Lake Storage.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila para cada ficheiro que se encontra en <code>url</code>, desde Azure Data Lake Storage Gen1. Cada fila contén propiedades do ficheiro e unha ligazón ao seu contido."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaSharing.Contents",
      "Documentation": {
        "Documentation.Name": "Delta Sharing"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Denodo.Contents",
      "Documentation": {
        "Documentation.Name": "Denodo Connector",
        "Documentation.LongDescription": "The Denodo Connector allows you to connect to Denodo's VDP server from PowerBI"
      },
      "ReturnType": "table",
      "Parameters": {
        "DSN": "text",
        "debug": "logical",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DirectQueryCapabilities.From",
      "Documentation": {
        "Documentation.Name": "DirectQueryCapabilities.From",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DocumentDB.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Cosmos DB v1",
        "Documentation.Caption": "Azure Cosmos DB (SQL API)",
        "Documentation.Description": "Escriba o URL dunha conta de Azure Cosmos DB.",
        "Documentation.LongDescription": "Devolve unha táboa de bases de datos de Azure Cosmos DB en <code>url</code>. Se se especifica <code>database</code>, no seu lugar devolverase unha táboa de coleccións. Ademais, se se especifica o campo <code>Query</code> no rexistro de <code>options</code>, devolveranse os resultados da consulta que se está a executar na base de datos ou colección especificadas."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "collection": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dremio.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost. This uses the default encrypted connection.",
            "Code": "Dremio.Databases(\"localhost:31010\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.Databases",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets in the specified project on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource. This function is maintained for backward compatibility with previous connector versions of Dremio Cloud.",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, on Dremio Cloud.",
            "Code": "DremioCloud.Databases(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")",
            "Result": "A table listing the datasets in project, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServer",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServer(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV330",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV330(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV360",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV360(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DremioCloud.DatabasesByServerV370",
      "Documentation": {
        "Documentation.Name": "Dremio Cloud",
        "Documentation.LongDescription": "Returns a table listing the datasets on the specified server on Dremio Cloud. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on a server on Dremio Cloud.",
            "Code": "DremioCloud.DatabasesByServerV370(\"sql.dremio.cloud:443\")",
            "Result": "A table listing the datasets on a server."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "projectId": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "encryption": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Dynamics365BusinessCentralOnPremises.Contents",
      "Documentation": {
        "Documentation.Description": "Introduza o URL do seu extremo de servizo OData de Dynamics 365 Business Central (local).",
        "Documentation.DisplayName": "Dynamics 365 Business Central (local)",
        "Documentation.Caption": "Dynamics365BusinessCentralOnPremises.Contents",
        "Documentation.Name": "Dynamics 365 Business Central (local)",
        "Documentation.LongDescription": "Devolve unha táboa con datos relevantes de Dynamics 365 Business Central (local). "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DynamicsNav.Contents",
      "Documentation": {
        "Documentation.Description": "Introduce o URL do teu extremo de servizo OData de Dynamics NAV.",
        "Documentation.DisplayName": "Dynamics NAV",
        "Documentation.Caption": "DynamicsNavision.Contents",
        "Documentation.Name": "Dynamics NAV",
        "Documentation.LongDescription": "Devolve unha táboa con datos relevantes de Dynamics NAV. "
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "company": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EQuIS.Contents",
      "Documentation": {
        "Documentation.Name": "EQuIS"
      },
      "ReturnType": "table",
      "Parameters": {
        "baseUri": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Essbase.Cubes",
      "Documentation": {
        "Documentation.Name": "Essbase.Cubes",
        "Documentation.Description": "Devolve os cubos nunha instancia de Essbase agrupada por un servidor Essbase.",
        "Documentation.LongDescription": "Devolve unha táboa de cubos agrupados por un servidor Essbase desde unha instancia de Essbase no servidor APS <code>url</code>. Pode especificarse un rexistro opcional, <code>options</code>, para controlar as seguintes opcións:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.Workbook",
      "Documentation": {
        "Documentation.Name": "Excel.Workbook",
        "Documentation.Description": "Devolve o contido do libro de Excel.",
        "Documentation.LongDescription": "Devolve o contido do libro de Excel.\r\n    <ul>\r\n     <li> <code>useHeaders</code> pode ser nulo, un valor lóxico (verdadeiro/falso) que indica se a primeira fila de cada táboa devolta se debe tratar como unha cabeceira ou un rexistro de opcións. Valor predefinido: falso.</li>\r\n     <li> <code>delayTypes</code> pode ser nulo ou un valor lóxico (verdadeiro/falso) que indica se as columnas de cada táboa devolta se deben deixar sen tipo. Valor predefinido: falso.</li>\r\n    </ul>\r\n\r\n    Se se especificou un rexistro para <code>useHeaders</code> (e <code>delayTypes</code> é nulo), poden fornecerse os seguintes campos do rexistro:\r\n    <ul>\r\n     <li> <code>UseHeaders</code>: pode ser nulo ou un valor lóxico (verdadeiro/falso) que indica se a primeira fila de cada táboa devolta se debe tratar como unha cabeceira. Valor predefinido: falso.</li>\r\n     <li> <code>DelayTypes</code>: pode ser nulo ou un valor lóxico (verdadeiro/falso) que indica se as columnas de cada táboa devolta se deben deixar sen tipo. Valor predefinido: falso.</li>\r\n     <li> <code>InferSheetDimensions</code>: pode ser nulo ou un valor lóxico (verdadeiro/falso) que indica se a área dunha folla de cálculo que conteña datos se debe deducir mediante a lectura da propia folla de cálculo en lugar da lectura dos metadatos de dimensión do ficheiro. Isto pode resultar útil en casos nos que os metadatos de dimensión son incorrectos. Teña en conta que esta opción só se admite para ficheiros XML abertos de Excel, non para ficheiros de Excel herdados. Valor predefinido: falso.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Devolve os contidos de Folla1 dun libro de Excel.",
            "Code": "Excel.Workbook(File.Contents(\"C:\\Book1.xlsx\"), null, true){[Item=\"Sheet1\"]}[Data]",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"ID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 3, Column2 = \"Pam\", Column3 = \"543-7890\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "workbook": "binary",
        "useHeaders": "any",
        "delayTypes": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Fhir.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "searchQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Contents",
      "Documentation": {
        "Documentation.Name": "Folder.Contents",
        "Documentation.Description": "Devolve unha táboa co contido e as propiedades dos ficheiros e cartafoles localizados no cartafol especificado.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila por cada cartafol e ficheiro localizado no cartafol <code>path</code>. Cada fila contén propiedades do cartafol ou do ficheiro e unha ligazón ao seu contido. Agora, o parámetro <code>options</code> só está pensado para uso interno.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Folder.Files",
      "Documentation": {
        "Documentation.Name": "Folder.Files",
        "Documentation.Description": "Devolve unha táboa co contido e as propiedades dos ficheiros localizados no cartafol e subcartafoles especificados.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila por cada ficheiro localizado no cartafol <code>path</code> e nos seus subcartafoles. Cada fila contén propiedades do ficheiro e unha ligazón ao seu contido. Agora, o parámetro <code>options</code> só está pensado para uso interno.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Foundry.Contents",
      "Documentation": {
        "Documentation.Name": "Foundry",
        "Documentation.LongDescription": "Connect to Palantir Foundry datasets.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "BaseUri": "text",
        "datasetRid": "text",
        "branch": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleBigQueryAad.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery (Azure AD)",
        "Documentation.Caption": "Google BigQuery (Azure AD)",
        "Documentation.Description": "Importar datos dunha base de datos de Google BigQuery mediante Azure AD",
        "Documentation.LongDescription": "\r\n      Devolve unha táboa que enumera os proxectos dispoñibles en Google BigQuery mediante Azure AD para <code>Billing Project ID</code>. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: duración que controla o tempo de espera antes de abandonar un intento de establecer unha conexión co servidor. O valor predefinido é o valor de tempo de espera da conexión de ODBC</li>\r\n        <li><code>CommandTimeout</code>: duración que controla durante canto tempo pode executarse a consulta no servidor antes de cancelarse.</li>\r\n        <li><code>UseStorageApi</code>: especifica se se vai usar a API de almacenamento de BigQuery para conxuntos de resultados de gran tamaño. O valor predefinido é true para usar a API de almacenamento. Configúreo en false para non usar a API de almacenamento</li>\r\n        <li><code>AudienceUri</code>: é o URI do público, que o controlador ODBC pode usar para as súas solicitudes de intercambio de tokens. Este campo debe ser un URI totalmente cualificado (é dicir, //iam.googleapis.com/locations/global/workforcePools/${pool_id}/providers/azuread), onde pool_id é un nome único global para identificar o grupo de persoa</li>\r\n      </ul>\r\n    O parámetro de rexistro especifícase así: [optión1 = value1, optión2 = value2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Enumerar os proxectos dispoñibles en Google BigQuery mediante Azure AD",
            "Code": "GoogleBigQueryAad.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "billingProject": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "GoogleSheets.Contents",
      "Documentation": {
        "Documentation.Name": "Follas de cálculo de Google",
        "Documentation.Caption": "Follas de cálculo de Google",
        "Documentation.Description": "Importa datos de GoogleSheets",
        "Documentation.LongDescription": "Importa datos de GoogleSheets"
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Containers",
      "Documentation": {
        "Documentation.Name": "HdInsight.Containers",
        "Documentation.Description": "Devolve unha táboa de navegación que inclúe os contedores atopados na conta especificada dunha caixa forte de almacenamento Azure.",
        "Documentation.LongDescription": "Devolve unha táboa de navegación que inclúe unha fila para cada contedor do URL da conta, <code>account</code>, dunha caixa forte de almacenamento de Azure. Cada fila contén unha ligazón aos BLOB contedores.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HdInsight.Contents",
      "Documentation": {
        "Documentation.Name": "HdInsight.Contents",
        "Documentation.Description": "Devolve unha táboa de navegación que inclúe os contedores atopados na conta especificada dunha caixa forte de almacenamento Azure.",
        "Documentation.LongDescription": "Devolve unha táboa de navegación que inclúe unha fila para cada contedor do URL da conta, <code>account</code>, dunha caixa forte de almacenamento de Azure. Cada fila contén unha ligazón aos BLOB contedores.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Contents",
      "Documentation": {
        "Documentation.Name": "Hdfs.Contents",
        "Documentation.Description": "Devolve unha táboa co contido e as propiedades dos ficheiros e dos cartafoles localizados no cartafol especificado dun sistema de ficheiros Hadoop.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila por cada cartafol e ficheiro localizado no enderezo URL do cartafol, <code>url</code>, dun sistema de ficheiros Hadoop. Cada fila contén propiedades do cartafol ou do ficheiro e unha ligazón ao seu contido.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Hdfs.Files",
      "Documentation": {
        "Documentation.Name": "Hdfs.Files",
        "Documentation.Description": "Devolve unha táboa co contido e as propiedades dos ficheiros e dos cartafoles localizados no cartafol e os subcartafoles especificados dun sistema de ficheiros Hadoop.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila por cada ficheiro localizado no enderezo URL do cartafol, <code>url</code>, e nos subcartafoles dun sistema de ficheiros Hadoop. Cada fila contén propiedades do ficheiro e unha ligazón ao seu contido.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.Feed",
      "Documentation": {
        "Documentation.Name": "Hexagon PPM Smart® API",
        "Documentation.LongDescription": "Returns a table from a Hexagon PPM Smart® API OData feed.",
        "Documentation.Examples": [
          {
            "Description": "Returns an OData service document in table form from a Hexagon PPM Smart® API OData feed.",
            "Code": "HexagonSmartApi.Feed(\"https://example.com/SampleService/V1\")",
            "Result": "#table({\"Name\"}, {{\"Data\"}, {\"Signature\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "headers": "text",
        "odataFeedVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Impala.Database",
      "Documentation": {
        "Documentation.Name": "Impala",
        "Documentation.Caption": "Impala",
        "Documentation.Description": "Importa datos dun clúster de Impala",
        "Documentation.LongDescription": "Importa datos dun clúster de Impala <code>server</code>. Se non se especificou ningún porto, o porto predefinido que se usará será 21050.",
        "Documentation.Examples": [
          {
            "Description": "Enumera as táboas nun clúster de Impala.",
            "Code": "Impala.Database(\"localhost:21050\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "InformationGrid.Contents",
      "Documentation": {
        "Documentation.Name": "Information Grid BI Services",
        "Documentation.LongDescription": "Retrieves information from authorised BI services available on the given server",
        "Documentation.Examples": [
          {
            "Description": "Returns a Navigation Table listing the available Information Grid BI services",
            "Code": "InformationGrid.Contents(\"192.168.1.123\", false)",
            "Result": "(Navigation table listing available BI services)"
          },
          {
            "Description": "Returns information from a specific named Information Grid BI service using HTTP",
            "Code": "InformationGrid.Contents(\"igserver.somedomain.com\", true){[Service=\"service-name\"]}[Data]",
            "Result": "(Data retrieved for the named BI service)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Intune.Contents",
      "Documentation": {
        "Documentation.Name": "Intune Data Warehouse",
        "Documentation.LongDescription": "Intune Data Warehouse"
      },
      "ReturnType": "table",
      "Parameters": {
        "maxHistoryDays": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kognitwin.Contents",
      "Documentation": {
        "Documentation.Name": "Kognitwin v1.1"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Contents",
      "Documentation": {
        "Documentation.Description": "Importa datos desde Azure Datos Explorer (Kusto).",
        "Documentation.DisplayName": "Azure Data Explorer (Kusto)",
        "Documentation.Caption": "Kusto.Contents",
        "Documentation.Name": "Azure Data Explorer (Kusto)",
        "Documentation.LongDescription": "Importa datos da instancia de Azure Data Explorer (Kusto).",
        "Documentation.Examples": [
          {
            "Description": "Devolve información dunha táboa de eventos de tormenta",
            "Code": "Kusto.Contents(\"help\", \"Samples\", \"StormEvents\", [])",
            "Result": "Unha táboa con Storm Events da base de datos \"Samples\" no clúster \"help\"."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "cluster": "text",
        "database": "text",
        "tableOrQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "LinkedIn.SalesNavigator",
      "Documentation": {
        "Documentation.Name": "Navegador de vendas de LinkedIn",
        "Documentation.LongDescription": "Navegador de vendas de LinkedIn",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "selectContracts": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "List.ConformToPageReader",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Collection",
      "Documentation": {
        "Documentation.Description": "Devolve unha táboa con datos dun extremo de MailChimp.",
        "Documentation.DisplayName": "MailChimp.Collection",
        "Documentation.Caption": "MailChimp.Collection",
        "Documentation.Name": "MailChimp.Collection",
        "Documentation.LongDescription": "Realiza unha chamada á API de MailChimp e devolve o conxunto de datos resultante como unha táboa. Navega automaticamente por todos os resultados. Pódese usar o parámetro entityName opcional para extremos da API onde o extremo de raíz e o entityName principal non coincidan na resposta JSON.",
        "Documentation.Examples": [
          {
            "Description": "Extrae unha táboa de datos do extremo de listas da API de MailChimp.",
            "Code": "MailChimp.Collection(\"lists\")",
            "Result": "Unha táboa con datos de lista."
          },
          {
            "Description": "Extrae unha táboa de datos do extremo de cartafoles de campaña da API de MailChimp.",
            "Code": "MailChimp.Collection(\"campaign-folders\", \"folders\")",
            "Result": "Unha táboa con datos de cartafoles de campaña."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text",
        "entityName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MailChimp.Instance",
      "Documentation": {
        "Documentation.Description": "Devolve resultados de resposta sen formato dun extremo da API de MailChimp.",
        "Documentation.DisplayName": "MailChimp.Instance",
        "Documentation.Caption": "MailChimp.Instance",
        "Documentation.Name": "MailChimp.Instance",
        "Documentation.LongDescription": "Realiza unha chamada á API de MailChimp e devolve a resposta sen formato.",
        "Documentation.Examples": [
          {
            "Description": "Devolve datos sen formato do extremo da API de MailChimp dos detalles de clic/informes dunha campaña.",
            "Code": "MailChimp.Instance(\"reports/{campaign_id}/click-details\")",
            "Result": "Datos dos detalles de clic sen formato da campaña."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MariaDB.Contents",
      "Documentation": {
        "Documentation.Name": "MariaDB data source",
        "Documentation.LongDescription": "<p>Returns a navigation table.</p>\r\n        <ul>\r\n        <li>Without a <code>databasename</code>, returns a table of databases on the specified MariaDB server <code>servername</code>.\r\n        <li>With a <code>databasename</code>, returns or a table of tables and views from the specified MariaDB database <code>databasename</code> on the server <code>servername</code>.\r\n        </ul>\r\n        \r\n        <p><code>databasename</code> can be provided in either of the input parameters:</p>\r\n        <ul>\r\n        <li>In the <b>MariaDB Data Source</b> string after a semicolon. This approach allows using database-specific credentials. See details below.\r\n        <li>As the optional <b>Database</b> parameter. This approach allows using same credentials for all databases on the specified server <code>servername</code>.\r\n        </ul>\r\n        <p>The <b>MariaDB Data Source</b> string uniquely identifies a data source in Power BI and allows using different credentials for each data source.\r\n        Credentials for a data source are configured in Power BI <i>Data source settings</i> screen. \r\n        MariaDB Power BI connector supports Basic authentication per server or per database.\r\n        E.g. it is possible to connect with different credentials to databases residing on the same MariaDB server.</p>\r\n        \r\n        <p><code>CreateNavigationProperties</code> is a parameter for Odbc.DataSource.</p>\r\n        <p>A logical value that sets whether to generate navigation properties on the returned tables. Navigation properties are based on foreign key relationships reported by the driver. These properties show up as “virtual” columns that can be expanded in the query editor, creating the appropriate join.</p>\r\n        <p>If calculating foreign key dependencies is an expensive operation for your driver, you may want to set this value to false.</p>\r\n        <p>Default: TRUE</p>",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of MariaDB tables and views functions from the MariaDB database <code>databasename</code> on server <code>servername</code>.",
            "Code": "MariaDB.Contents(\"servername\", \"databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server using the default port 3306 to connect. Equivalent to <code>MariaDB.Contents(\"servername:3306\")</code>.",
            "Code": "MariaDB.Contents(\"servername\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of databases on the specified MariaDB server <code>servername</code> using the provided port number <code>portnumber</code> to connect.",
            "Code": "MariaDB.Contents(\"servername:portnumber\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"mysql\", null, #table(...), \"Database\"},\r\n       {\"flights\", null, #table(...), \"Database\"}\r\n       })"
          },
          {
            "Description": "Returns a table of MariaDB tables and views from the MariaDB database <code>databasename</code> on server <code>servername</code>. \r\n            The result is similar to <code>MariaDB.Contents(\"servername\", \"databasename\")</code>, but the string <code>servername;databasename</code> identifies a unique data source and allows using dedicated credentials for the database <code>databasename</code>.",
            "Code": "MariaDB.Contents(\"servername;databasename\")",
            "Result": "#table({\"Name\", \"Description\", \"Data\", \"Kind\"}, {\r\n       {\"airlines\", null, #table(...), \"Table\"},\r\n       {\"airports\", null, #table(...), \"Table\"},\r\n       {\"flights\", null, #table(...), \"Table\"}\r\n       })"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "MariaDB Data Source": "text",
        "database": "text",
        "CreateNavigationProperties": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.Contents",
      "Documentation": {
        "Documentation.Name": "MicroStrategy for Power BI ver. 2.4.5"
      },
      "ReturnType": "table",
      "Parameters": {
        "libraryUrl": "Uri.Type",
        "authMode": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Contents",
      "Documentation": {
        "Documentation.Description": "Fornece funcións de consultas avanzadas.",
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.Name": "MicrosoftAzureConsumptionInsights.Contents",
        "Documentation.LongDescription": "Fornece funcións de consultas avanzadas.",
        "Documentation.Examples": [
          {
            "Description": "Supoñendo que hoxe é 15/06/2017, obtén os datos de resumos para os días comprendidos entre o 01/05/2017 e o 15/06/2017",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A función devolverá datos resumidos de entre o 01/05/2017 e o 15/06/2017"
          },
          {
            "Description": "Supoñendo que hoxe é 15/06/2017, obtén os datos de resumos para abril de 2017",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A función devolverá datos de entre o 01/04/2017 e o 30/04/2017"
          },
          {
            "Description": "Supoñendo que hoxe é 15/06/2017, obtén os datos de resumos desde abril de 2017 ata agora",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A función devolverá datos de entre o 01/04/2017 e o 15/06/2017"
          },
          {
            "Description": "Supoñendo que hoxe é 15/06/2017, obtén os datos de resumos desde o decembro pasado ata este febreiro",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-6\", endBillingDataWindow = \"-3\", dataType = \"Summaries\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)\r\n      in     \r\n          result\r\n    ",
            "Result": "A función devolverá datos de entre o 01/12/2016 e o 28/02/2017"
          },
          {
            "Description": "Supoñendo que hoxe é 15/06/2017, obtén os cargos do Marketplace dos últimos 18 meses.",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-18\", endBillingDataWindow = \"0\", dataType = \"MarketplaceCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A función devolverá datos de entre o 01/12/2015 e o 15/06/2017"
          },
          {
            "Description": "Supoñendo que hoxe é 15/06/2017, obtén os cargos detallados para maio e xuño de 2017",
            "Code": "\r\n      let    \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-1\", endBillingDataWindow = \"0\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)   \r\n      in     \r\n          result\r\n    ",
            "Result": "A función devolverá datos de entre o 01/05/2017 e o 15/06/2017"
          },
          {
            "Description": "Supoñendo que hoxe é 03/07/2017, obtéñense os cargos detallados para xullo de 2016.",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-12\", endBillingDataWindow = \"-11\", dataType = \"DetailCharges\" ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "A función devolverá datos de entre o 01/07/2016 e o 31/07/2016."
          },
          {
            "Description": "Supoñendo que hoxe é 13/07/2017, obtén os resumos do balance dos últimos 10 meses máis os 13 días deste mes",
            "Code": "\r\n      let  \r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ dataType = \"Summaries\", numberOfMonth = 10 ],\r\n          result = MicrosoftAzureConsumptionInsights.Contents(enrollmentNumber, optionalParameters)    \r\n      in     \r\n          result\r\n    ",
            "Result": "A función devolverá datos de entre o 01/09/2016 e o 13/07/2017"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Tables",
      "Documentation": {
        "Documentation.Caption": "Microsoft Azure Consumption Insights",
        "Documentation.Description": "Microsoft Azure Consumption Insights",
        "Documentation.DisplayName": "Microsoft Azure Consumption Insights",
        "Documentation.LongDescription": "Microsoft Azure Consumption Insights",
        "Documentation.Name": "Microsoft Azure Consumption Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftGraphSecurity.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Graph Security",
        "Documentation.Description": "Connector for the Microsoft Graph Security API",
        "Documentation.LongDescription": "The Microsoft Graph Security connector helps to connect different Microsoft \r\n\t\tand partner security products and services, to streamline security operations, and \r\n\t\timprove threat protection, detection, and response capabilities. Learn more about integrating with the Microsoft \r\n\t\tGraph Security API at \"https://aka.ms/graphsecuritydocs\". This connector will return the recent most 6000 rows \r\n\t\tof the result set. This constraint and the workaround to overcome this constraint is documented at \r\n\t\t\"https://aka.ms/graphsecurityapiconstraints\". You can either use the power query function ‘Specify custom Microsoft Graph Security URL to filter results’ or use the Power \r\n\t\tQuery Editor to provide the $filter query per the constraint workarounds to get data beyond the initial 6000 rows.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"v1.0\")"
          },
          {
            "Description": "Returns a table from the Microsoft Graph Security API.",
            "Code": "MicrosoftGraphSecurity.Contents(\"beta\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "version": "Text.Type",
        "options": "Record.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.DataSource",
      "Documentation": {
        "Documentation.Name": "Odbc.DataSource",
        "Documentation.Description": "Devolve unha táboa de táboas e visualizacións SQL da orixe de datos ODBC. ",
        "Documentation.LongDescription": "Devolve unha táboa de táboas e visualizacións SQL da orixe de datos ODBC especificada pola cadea de conexión <code>connectionString</code>. <code>connectionString</code> pode ser texto ou un rexistro de pares de valores de propiedade. Os valores de propiedade poden ser texto ou números. Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os campos seguintes:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar unha tentativa de conexi&#243;n co servidor. O valor predefinido &#233; de 15&#160;segundos.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Unha l&#243;xica (true/false) que determina se producir opci&#243;ns de cadea de conexi&#243;n compatibles con SQL Server para a autenticaci&#243;n de Windows. O valor predefinido &#233; true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Volve ás vistas e táboas SQL desde a cadea de conexión proporcionada.",
            "Code": "Odbc.DataSource(\"dsn=your_dsn\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OleDb.DataSource",
      "Documentation": {
        "Documentation.Name": "OleDb.DataSource",
        "Documentation.Description": "Devolve unha táboa de visualizacións e táboas SQL da orixe de datos de OLE DB.",
        "Documentation.LongDescription": "Devolve unha táboa de visualizacións e táboas SQL da orixe de datos de OLE DB especificada na cadea de conexión <code>connectionString</code>. <code>connectionString</code> pode ser texto ou un rexistro de pares de valores de propiedade. Os valores de propiedade poden ser texto ou números. Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>HierarchicalNavigation</code> : Un valor l&#243;xico (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; true).</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Unha l&#243;xica (true/false) que determina se producir opci&#243;ns de cadea de conexi&#243;n compatibles con SQL Server para a autenticaci&#243;n de Windows. O valor predefinido &#233; true.</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], por exemplo.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Oracle.Database",
      "Documentation": {
        "Documentation.Name": "Oracle.Database",
        "Documentation.Description": "Devolve unha táboa de táboas e vistas SQL dunha base de datos Oracle Database.",
        "Documentation.LongDescription": "Devolve unha táboa de táboas e visualizacións SQL dunha base de datos Oracle Database no servidor <code>server</code>. O porto pódese especificar opcionalmente co servidor, separado con dous puntos. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], por exemplo.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Paxata.Contents",
      "Documentation": {
        "Documentation.Name": "From Paxata"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Pdf.Tables",
      "Documentation": {
        "Documentation.Name": "Pdf.Tables",
        "Documentation.Description": "Devolve todas as táboas atopadas nun ficheiro PDF.",
        "Documentation.LongDescription": "Devolve as táboas de <code>pdf</code>. Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>Implementation</code> : Versi&#243;n do algoritmo que se usar&#225; ao identificar as t&#225;boas. As versi&#243;ns antigas s&#243; est&#225;n dispo&#241;ibles para a compatibilidade con versi&#243;ns anteriores co fin de evitar que as actualizaci&#243;ns do algoritmo quebren as consultas antigas. A versi&#243;n m&#225;is recente sempre debe ofrecer os mellores resultados. Os valores v&#225;lidos son&quot;1.3&quot;, &quot;1.2&quot;, “1.1” ou nulo.</li>\r\n<li><code>StartPage</code> : Especifica a primeira p&#225;xina no intervalo de p&#225;xinas que se examinar&#225;. Valor predefinido: 1.</li>\r\n<li><code>EndPage</code> : Especifica a &#250;ltima p&#225;xina do intervalo de p&#225;xinas que se vai examinar. Valor predefinido: a &#250;ltima p&#225;xina do documento.</li>\r\n<li><code>MultiPageTables</code> : Controla se t&#225;boas similares en p&#225;xinas consecutivas se combinar&#225;n automaticamente nunha soa t&#225;boa. Valor predefinido: true.</li>\r\n<li><code>EnforceBorderLines</code> : Controla se as li&#241;as de bordos se aplican sempre como l&#237;mites da cela (cando &#233; true) ou s&#243; como unha pista de moitas para determinar os l&#237;mites da cela (cando &#233; false). Valor predefinido: false.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Acceso ao datos",
        "Documentation.Examples": [
          {
            "Description": "Devolve as táboas de sample.pdf.",
            "Code": "Pdf.Tables(File.Contents(\"c:\\sample.pdf\"))",
            "Result": "#table({\"Name\", \"Kind\", \"Data\"}, ...)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "pdf": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewOKR.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview OKR account.",
        "Documentation.DisplayName": "Planview OKR",
        "Documentation.Caption": "Planview OKR.Contents",
        "Documentation.Name": "Planview OKR",
        "Documentation.LongDescription": "Returns a table with relevant Planview OKR data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "PlanviewProjectplace.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview ProjectPlace account.",
        "Documentation.DisplayName": "Planview ProjectPlace",
        "Documentation.Caption": "PlanviewProjectplace.Contents",
        "Documentation.Name": "Planview ProjectPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview ProjectPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Profisee.Tables",
      "Documentation": {
        "Documentation.Name": "Profisee",
        "Documentation.LongDescription": "Navigation Table returning Profisee entities.",
        "Documentation.Examples": [
          {
            "Description": "Returns a navigational table containing all profisee entities that contains data for each entity.",
            "Code": "Profisee.Tables(\"https://12345.com/profisee\")",
            "Result": "#table({\"Name\", \"Data\", \"ItemKind\", \"ItemName\"}, {{\"ABCCode\", \"Table\", \"Table\", \"Table\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Projectplace.Feed",
      "Documentation": {
        "Documentation.Description": "Especifique o URL da súa conta de Planview Projectplace.",
        "Documentation.DisplayName": "Planview Projectplace",
        "Documentation.Caption": "Projectplace.Feed",
        "Documentation.Name": "Planview Projectplace",
        "Documentation.LongDescription": "Devolve unha táboa con datos pertinentes de Planview Projectplace."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Python.Execute",
      "Documentation": {
        "Documentation.Name": "Python.Execute",
        "Documentation.Caption": "(Ρŷťħбń ŝċŕΐρт)",
        "Documentation.Description": "(Єжέĉúţëş Рýťħоⁿ ŝčгïρŧ áńď гĕтųřņš δαţä ƒŕªmε§)",
        "Documentation.Examples": {
          "Description": "(Єжέĉúţëş Рýťħоⁿ ŝčгïρŧ áńď гĕтųřņš δαţä ƒŕªmε§)",
          "Code": "Python.Execute(\"a = pandas.DataFrame(dataset[dataset.columns[0]])\", [dataset=#\"Source\"])"
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBase.Contents",
      "Documentation": {
        "Documentation.Name": "Quick Base Connector",
        "Documentation.LongDescription": "Quick Base Connector"
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Query",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "query": "text",
        "schema": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QuickBooks.Report",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "urlFragment": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "R.Execute",
      "Documentation": {
        "Documentation.Name": "R.Execute",
        "Documentation.Caption": "(Г ѕćřιφţ)",
        "Documentation.Description": null,
        "Documentation.Examples": {
          "Description": null,
          "Code": null
        }
      },
      "ReturnType": "table",
      "Parameters": {
        "script": "text",
        "arguments": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToTable",
      "Documentation": {
        "Documentation.Name": "Record.ToTable",
        "Documentation.Description": "Devolve unha táboa na que cada fila é un nome de campo e o valor do rexistro de entrada.",
        "Documentation.LongDescription": "Devolve unha táboa que contén as columnas <code>Name</code> e <code>Value</code> cunha fila por cada campo de <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Devolver a táboa do rexistro.",
            "Code": "Record.ToTable([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "Table.FromRecords({\r\n    [Name = \"OrderID\", Value = 1],\r\n    [Name = \"CustomerID\", Value = 1],\r\n    [Name = \"Item\", Value = \"Fishing rod\"],\r\n    [Name = \"Price\", Value = 100]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SapHana.Database",
      "Documentation": {
        "Documentation.Name": "SapHana.Database",
        "Documentation.Description": "Devolve paquetes nunha base de datos SAP HANA.",
        "Documentation.LongDescription": "Devolve unha táboa de paquetes multidimensionais a partir da base de datos SAP HANA <code>server</code>. Pode especificarse un parámetro de rexistro opcional, <code>options</code>, para controlar as seguintes opcións:\r\n    <ul>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>Distribution</code> : Unha SapHanaDistribution que establece o valor da propiedade &quot;Distribution&quot; na cadea de conexi&#243;n. O encami&#241;amento de instruci&#243;ns &#233; o m&#233;todo empregado para avaliar o nodo de servidor axeitado dun sistema distribu&#237;do antes da execuci&#243;n da instruci&#243;n. O valor predefinido &#233; SapHanaDistribution.All.</li>\r\n<li><code>Implementation</code> : Especifica a implantaci&#243;n do conector SAP HANA que se usar&#225;.</li>\r\n<li><code>EnableColumnBinding</code> : Vincula as variables &#225;s columnas dun conxunto de resultados de SAP HANA ao obter datos. Pode mellorar o rendemento a costa dunha utilizaci&#243;n lixeiramente maior da memoria. O valor predefinido &#233; falso.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar unha tentativa de conexi&#243;n co servidor. O valor predefinido &#233; de 15&#160;segundos.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Contents",
      "Documentation": {
        "Documentation.Name": "SharePoint.Contents",
        "Documentation.Description": "Devolve unha táboa co contido dun sitio SharePoint.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila por cada cartafol e documento localizado no sitio de SharePoint especificado, <code>url</code>. Cada fila contén propiedades do cartafol ou do ficheiro e unha ligazón ao seu contido. Pode especificarse <code>options</code> para controlar as seguintes opcións:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Un n&#250;mero (14 ou 15) ou o texto &quot;Auto&quot; que especifica a versi&#243;n da API de SharePoint que se debe usar para este sitio. Cando non se especifica, &#250;sase a versi&#243;n 14 da API. Cando se especifica Auto, a versi&#243;n do servidor det&#233;ctase automaticamente se &#233; posible; se non, establ&#233;cese na versi&#243;n predefinida 14. Os sitios de SharePoint que non est&#225;n en ingl&#233;s requiren polo menos a versi&#243;n 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Files",
      "Documentation": {
        "Documentation.Name": "SharePoint.Files",
        "Documentation.Description": "Devolve unha táboa que contén documentos dun sitio SharePoint.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila por cada documento localizado no sitio de SharePoint especificado, <code>url</code>, e subcartafoles. Cada fila contén propiedades do cartafol ou do ficheiro e unha ligazón ao seu contido. Pode especificarse <code>options</code> para controlar as seguintes opcións:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Un n&#250;mero (14 ou 15) ou o texto &quot;Auto&quot; que especifica a versi&#243;n da API de SharePoint que se debe usar para este sitio. Cando non se especifica, &#250;sase a versi&#243;n 14 da API. Cando se especifica Auto, a versi&#243;n do servidor det&#233;ctase automaticamente se &#233; posible; se non, establ&#233;cese na versi&#243;n predefinida 14. Os sitios de SharePoint que non est&#225;n en ingl&#233;s requiren polo menos a versi&#243;n 15.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SharePoint.Tables",
      "Documentation": {
        "Documentation.Name": "SharePoint.Tables",
        "Documentation.Description": "Devolve unha táboa co contido dunha lista de SharePoint.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila por cada elemento de lista localizado na lista de SharePoint especificada, <code>url</code>. Cada fila contén propiedades da lista. Pode especificarse <code>options</code> para controlar as seguintes opcións:\r\n    <ul>\r\n<li><code>ApiVersion</code> : Un n&#250;mero (14 ou 15) ou o texto &quot;Auto&quot; que especifica a versi&#243;n da API de SharePoint que se debe usar para este sitio. Cando non se especifica, &#250;sase a versi&#243;n 14 da API. Cando se especifica Auto, a versi&#243;n do servidor det&#233;ctase automaticamente se &#233; posible; se non, establ&#233;cese na versi&#243;n predefinida 14. Os sitios de SharePoint que non est&#225;n en ingl&#233;s requiren polo menos a versi&#243;n 15.</li>\r\n<li><code>Implementation</code> : Opcional. Especifica a versi&#243;n que hai que usar do conector de SharePoint. Os valores aceptados son “2.0” ou nulo. Se o valor &#233; “2.0”, usarase a implantaci&#243;n 2.0 do conector de SharePoint. Se o valor &#233; nulo, &#250;sase o despregamento orixinal do conector de SharePoint.</li>\r\n<li><code>ViewMode</code> : Opcional. Esta opci&#243;n s&#243; &#233; v&#225;lida para a implantaci&#243;n 2.0. Os valores aceptados son “Todos&quot; e &quot;Predefinidos&quot;. Se non se especifica ning&#250;n valor, o valor establ&#233;cese en &quot;Todos&quot;. Cando se especifica &quot;Todos&quot;, a vista incl&#250;e todas as columnas creadas polo usuario e definidas polo sistema. Cando se especifique &quot;Default&quot;, a vista coincidir&#225; co que o usuario ve ao mirar a lista en li&#241;a na que vexa o usuario configurado como Predefinido na s&#250;a configuraci&#243;n. Se o usuario edita a s&#250;a vista predefinida para engadir ou eliminar as columnas creadas polo usuario ou definidas polo sistema, ou ben creando unha nova vista e configur&#225;ndoa como predeterminada, estes cambios propagaranse a trav&#233;s do conector.</li>\r\n<li><code>DisableAppendNoteColumns</code> : Evita que o conector use un extremo separado para as columnas de notas.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Soda.Feed",
      "Documentation": {
        "Documentation.Name": "Soda.Feed",
        "Documentation.Description": "Devolve unha táboa do contido do enderezo URL especificado co formato segundo a API de SODA 2.0.",
        "Documentation.LongDescription": "Devolve unha táboa do contido do enderezo URL <code>url</code> especificado co formato segundo a API de SODA 2.0. O enderezo URL debe apuntar a unha orixe compatible con SODA válida que finalice cunha extensión .CSV.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.GetList",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost.GetList",
        "Documentation.Caption": "SparkPost.GetList",
        "Documentation.Name": "SparkPost.GetList",
        "Documentation.LongDescription": "Non se pode usar esta función para chamar aos extremos de \"Listas\" fornecidos pola API SparkPost v1. Cando faga chamadas á API SparkPost con esta función, teña en conta que a API SparkPost ten un límite de taxa de API estrito. Se o servidor de SparkPost devolve un código de estado 429, significa que acadou o límite de taxa e terá que agardar uns intres antes de realizar máis chamadas.",
        "Documentation.Examples": [
          {
            "Description": "Devolve unha táboa cunha soa columna enchida con datos dun dos extremos \"Listas\" da API SparkPost v1 (consulte a documentación de SparkPost para obter máis información).",
            "Code": "Source = SparkPost.GetList(\"metrics/campaigns\")",
            "Result": "Json.Document"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "path": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SparkPost.NavTable",
      "Documentation": {
        "Documentation.DisplayName": "SparkPost",
        "Documentation.Caption": "SparkPost",
        "Documentation.Name": "SparkPost",
        "Documentation.LongDescription": "Recupere as táboas integradas expostas polo conector de SparkPost con datos acumulados durante o número de días especificado polo usuario. Cando actualice estas táboas ou faga chamadas á API SparkPost mediante este conector, teña en conta que a API SparkPost ten un límite de taxa de API estrito. Se o servidor SparkPost devolve un código de estado 429, significa que acadou o límite de taxa e terá que agardar uns intres antes de realizar máis chamadas. Cando escolla un valor para o parámetro Número de días, teña en conta que a API só almacena 6 meses de datos."
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Spigit.Contents",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview IdeaPlace account.",
        "Documentation.DisplayName": "Planview IdeaPlace",
        "Documentation.Caption": "Spigit.Contents",
        "Documentation.Name": "Planview IdeaPlace",
        "Documentation.LongDescription": "Returns a table with relevant Planview IdeaPlace data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ODataURL": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Sql.Databases",
      "Documentation": {
        "Documentation.Name": "Sql.Databases",
        "Documentation.Description": "Devolve unha táboa de bases de datos nun SQL Server.",
        "Documentation.LongDescription": "Devolve unha táboa de bases de datos do servidor SQL especificado, <code>server</code>. Pode especificarse un parámetro de rexistro opcional, <code>options</code>, para controlar as seguintes opcións:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Un n&#250;mero que establece o valor da cl&#225;usula de consulta &quot;maxdop&quot; na consulta SQL xerada.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n<li><code>MultiSubnetFailover</code> : Unha funci&#243;n l&#243;xica (true/false) que establece o valor da propiedade &quot;MultiSubnetFailover&quot; na cadea de conexi&#243;n (o valor predefinido &#233; false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Valor l&#243;xico (verdadeiro/falso) que, se &#233; verdadeiro, tenta dobrar conversi&#243;ns de tipo que poder&#237;an producir un erro e provocar que toda a consulta falle. Non se recomenda para uso xeral.</li>\r\n<li><code>ContextInfo</code> : Un valor binario que se usa para configurar CONTEXT_INFO antes de executar cada comando.</li>\r\n<li><code>OmitSRID</code> : Valor l&#243;xico (verdadeiro/falso) que, se &#233; verdadeiro, omite o SRID ao producir Well-Known Text a partir de tipos de xeometr&#237;a e xeograf&#237;a.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Un valor l&#243;xico (verdadeiro/falso) que, se &#233; verdadeiro, permite a delegaci&#243;n de consultas en todas as bases de datos no mesmo servidor. O valor predefinido &#233; falso.</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] por exemplo.\r\n    <br>\r\n    Non admite a configuración dunha consulta SQL para que se execute no servidor. No seu lugar debe usarse <code>Sql.Database</code> para executar unha consulta SQL.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Stripe.Contents",
      "Documentation": {
        "Documentation.Name": "Stripe.Contents",
        "Documentation.DisplayName": "Stripe.Contents",
        "Documentation.Caption": "Stripe.Contents",
        "Documentation.Description": "Realiza unha chamada á API de Stripe, coa opción de limitar o número de chamadas que se realizan á API.",
        "Documentation.LongDescription": "Realiza unha chamada á API de Stripe en https://api.stripe.com/v1/<code>method</code>, co rexistro opcional <code>query</code> aprobado como parámetros adicionais e <code>pageLimit</code> opcional como límite no número de solicitudes de API. Devólvense os datos máis recentes primeiro. Se non se especifica <code>pageLimit</code>, devólvense todos os datos. Está a usarse a versión 2015-10-16 de Stripe.",
        "Documentation.Examples": [
          {
            "Description": "Devolve todos os datos dos custos.",
            "Code": "Stripe.Contents(\"charges\")",
            "Result": "Unha táboa con todos os datos dos custos da conta de Stripe actual"
          },
          {
            "Description": "Devolve unha páxina de datos dos custos",
            "Code": "Stripe.Contents(\"charges\", [], 1)",
            "Result": "Unha táboa cos datos dos custos máis recentes da conta de Stripe actual"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "query": "record",
        "pageLimit": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SumTotal.ODataFeed",
      "Documentation": {
        "Documentation.Name": "SumTotal BI Connector",
        "Documentation.LongDescription": "SumTotal's Custom connector connects to SumTotal's external facing OData API service to pull data from data warehousing database . Filter expand, slice and create customer visuals and reports based on data returned from the OData feed",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with specified entity data",
            "Code": "SumTotal.ODataFeed('https://host.sumtotalystems.com/?rowVersionId=0')",
            "Result": " Source{[Name='{OData Entity chosen}']}[Data]"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Buffer",
      "Documentation": {
        "Documentation.Name": "Table.Buffer",
        "Documentation.Description": "Almacena no búfer unha táboa na memoria, illándoa de modificacións externas durante a avaliación.",
        "Documentation.LongDescription": "Almacena no búfer da memoria unha táboa, illándoa dos cambios externos durante a avaliación.\r\n    O almacenamento en búfer é superficial. Forza a avaliación de calquera valor de cela de escalado, pero deixa os valores de non escalado (rexistros, listas, táboas, etc.) tal cal.\r\n    <br>\r\n    <br>\r\n    Teña en conta que usar esta función podería facer ou non que as consultas se executen máis rápido. Nalgúns casos, pode facer que as consultas se executen máis lentamente debido ao custo \r\n    engadido de ler todos os datos e almacenalas na memoria, así como o feito de que o almacenamento en búfer evita a delegación de descarga. Se non precisa que os datos se\r\n    almacenen no búfer e tan só quere evitar o pregamento cara a niveis inferiores, use <code>Table.StopFolding</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Carga todas as filas dunha táboa SQL na memoria, polo que calquera operación de descarga non poderá consultar o servidor SQL.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    BufferMyTable = Table.Buffer(dbo_MyTable)\r\nin\r\n    BufferMyTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Combine",
      "Documentation": {
        "Documentation.Name": "Table.Combine",
        "Documentation.Description": "Devolve unha táboa que é o resultado de combinar unha lista de táboas.",
        "Documentation.LongDescription": "Devolve unha táboa, resultado da unión dunha lista de táboas, <code>tables</code>. A táboa resultante terá unha estrutura de tipos de fila definida por <code>columns</code> ou por unha unión dos tipos de entrada, se non se especifica <code>columns</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Combinar as tres táboas xuntas.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]}),\r\n    Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Una tres táboas con estruturas distintas.",
            "Code": "Table.Combine({\r\n    Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n    Table.FromRecords({[Cell = \"543-7890\"]})\r\n})",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Phone = \"123-4567\", Fax = null, Cell = null],\r\n    [Name = null, Phone = \"838-7171\", Fax = \"987-6543\", Cell = null],\r\n    [Name = null, Phone = null, Fax = null, Cell = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Una dúas táboas e un proxecto no tipo determinado.",
            "Code": "Table.Combine(\r\n    {\r\n        Table.FromRecords({[Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        Table.FromRecords({[Fax = \"987-6543\", Phone = \"838-7171\"]}),\r\n        Table.FromRecords({[Cell = \"543-7890\"]})\r\n    },\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = null, Name = \"Bob\"],\r\n    [CustomerID = null, Name = null],\r\n    [CustomerID = null, Name = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.DemoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.DemoteHeaders",
        "Documentation.Description": "Baixa de nivel as cabeceiras de columna á primeira fila de valores.",
        "Documentation.LongDescription": "Baixa de nivel as cabeceiras de columna (p. ex., nomes de columna) á primeira fila de valores. Os nomes de columna predefinidos son \"Column1\", \"Column2\", etc.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Baixar de nivel a primeira fila de valores da táboa.",
            "Code": "Table.DemoteHeaders(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = \"Phone\"],\r\n    [Column1 = 1, Column2 = \"Bob\", Column3 = \"123-4567\"],\r\n    [Column1 = 2, Column2 = \"Jim\", Column3 = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Distinct",
      "Documentation": {
        "Documentation.Name": "Table.Distinct",
        "Documentation.Description": "Elimina filas duplicadas da táboa.",
        "Documentation.LongDescription": "Elimina as filas duplicadas da táboa.\r\n    Un parámetro opcional, <code>equationCriteria</code>, especifica que columnas da táboa se proban para a duplicación. Se <code>equationCriteria</code> non se especifica, probáranse todas as columnas.<br>\r\n    <br>\r\n    Debido a que Power Query ás veces descarga determinadas operacións nas orixes de datos do backend (coñecidas como \"dobramento\"), e ás veces tamén optimiza as consultas \r\n    saltando operacións que non son estritamente necesarias, en xeral, non hai garantía de que duplicado específico se conservará.\r\n    Por exemplo, non pode asumir que a primeira fila cun conxunto único de valores de columna permanecerá e eliminaranse as filas máis abaixo na táboa.\r\n    Se queres que a eliminación de duplicados se comporte de forma previsible, primeiro almacena a táboa mediante <code>Table.Buffer</code>.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Eliminar as filas duplicadas da táboa.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"b\"],\r\n        [a = \"A\", b = \"a\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"B\", b = \"b\"]\r\n})"
          },
          {
            "Description": "Eliminar as filas duplicadas da columna [b] na táboa <code>({[a = \"A\", b = \"a\"], [a = \"B\", b = \"a\"], [a = \"A\", b = \"b\"]})</code>.",
            "Code": "Table.Distinct(\r\n    Table.FromRecords({\r\n        [a = \"A\", b = \"a\"],\r\n        [a = \"B\", b = \"a\"],\r\n        [a = \"A\", b = \"b\"]\r\n    }),\r\n    \"b\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"A\", b = \"a\"],\r\n    [a = \"A\", b = \"b\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromColumns",
      "Documentation": {
        "Documentation.Name": "Table.FromColumns",
        "Documentation.Description": "Crea unha columna da lista de columnas e os valores especificados.",
        "Documentation.LongDescription": "Crea unha táboa de tipo <code>columns</code> dunha lista <code>lists</code> que contén listas aniñadas con valores e nomes de columna.\r\n    Se algunhas columnas teñen máis valores que outras, os valores que faltan encheranse co valor predefinido, \"nulo\", se as columnas poden ter valores nulos.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Devolver unha táboa dunha lista de nomes de clientes dunha lista. Cada valor do elemento da lista de clientes convértese nun valor de fila, e cada lista convértese nunha columna.",
            "Code": "Table.FromColumns({\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n})",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2, Column3 = 3],\r\n    [Column1 = \"Bob\", Column2 = \"Jim\", Column3 = \"Paul\"],\r\n    [Column1 = \"123-4567\", Column2 = \"987-6543\", Column3 = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Crear unha táboa a partir dunha lista de columnas indicada e unha lista de nomes de columna.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"},\r\n        {3, \"Paul\", \"543-7890\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = 2, Phone = 3],\r\n    [CustomerID = \"Bob\", Name = \"Jim\", Phone = \"Paul\"],\r\n    [CustomerID = \"123-4567\", Name = \"987-6543\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Crear unha táboa cun número diferente de columnas por fila. O valor da fila que falta é nulo.",
            "Code": "Table.FromColumns(\r\n    {\r\n        {1, 2, 3},\r\n        {4, 5},\r\n        {6, 7, 8, 9}\r\n    },\r\n    {\"column1\", \"column2\", \"column3\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [column1 = 1, column2 = 4, column3 = 6],\r\n    [column1 = 2, column2 = 5, column3 = 7],\r\n    [column1 = 3, column2 = null, column3 = 8],\r\n    [column1 = null, column2 = null, column3 = 9]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "lists": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromList",
      "Documentation": {
        "Documentation.Name": "Table.FromList",
        "Documentation.Description": "Converte unha lista nunha táboa aplicando a función de división especificada para cada elemento da lista.",
        "Documentation.LongDescription": "Converte unha lista, <code>list</code>, nunha táboa aplicando a función de división opcional, <code>splitter</code>, para cada elemento da lista. Por defecto, a lista asúmese como unha lista de valores de texto dividida por comas. O <code>columns</code> opcional pode ser o número de columnas, unha lista de columnas ou un TableType. Tamén se poden especificar os opcionais <code>default</code> e <code>extraValues</code>.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Cree unha táboa a partir dunha lista co divisor predefinido.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    null,\r\n    {\"Letter\", \"Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Letter = \"a\", #\"Example Word\" = \"apple\"],\r\n    [Letter = \"b\", #\"Example Word\" = \"ball\"],\r\n    [Letter = \"c\", #\"Example Word\" = \"cookie\"],\r\n    [Letter = \"d\", #\"Example Word\" = \"door\"]\r\n})"
          },
          {
            "Description": "Cree unha táboa a partir dunha lista co divisor personalizado.",
            "Code": "Table.FromList(\r\n    {\"a,apple\", \"b,ball\", \"c,cookie\", \"d,door\"},\r\n    Splitter.SplitByNothing(),\r\n    {\"Letter and Example Word\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [#\"Letter and Example Word\" = \"a,apple\"],\r\n    [#\"Letter and Example Word\" = \"b,ball\"],\r\n    [#\"Letter and Example Word\" = \"c,cookie\"],\r\n    [#\"Letter and Example Word\" = \"d,door\"]\r\n})"
          },
          {
            "Description": "Cree unha táboa a partir dunha lista co divisor Record.FieldValues.",
            "Code": "Table.FromList(\r\n    {\r\n        [CustomerID = 1, Name = \"Bob\"],\r\n        [CustomerID = 2, Name = \"Jim\"]\r\n    },\r\n    Record.FieldValues,\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [CustomerID = 2, Name = \"Jim\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "list": "list",
        "splitter": "function",
        "columns": "any",
        "default": "any",
        "extraValues": "ExtraValues.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRecords",
      "Documentation": {
        "Documentation.Name": "Table.FromRecords",
        "Documentation.Description": "Converte unha lista de rexistros nunha táboa.",
        "Documentation.LongDescription": "Converte <code>records</code>, unha lista de rexistros, nunha táboa.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Crear unha táboa a partir dos rexistros, usando os nomes dos campos do rexistro como nomes de columna.",
            "Code": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Crear unha táboa a partir dos rexistros con tipos de columnas e seleccionar o número de columnas.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[CustomerID = 1, Name = \"Bob\"]},\r\n        type table[CustomerID = Number.Type, Name = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"CustomerID\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "records": "list",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromRows",
      "Documentation": {
        "Documentation.Name": "Table.FromRows",
        "Documentation.Description": "Crea unha táboa a partir dunha lista de valores de fila e columnas opcionais",
        "Documentation.LongDescription": "Crea unha táboa a partir da lista <code>rows</code> onde cada elemento da lista é unha lista interna que contén os valores de columnas para unha fila única. Pódese fornecer unha lista opcional de nomes de columnas, un tipo de táboa ou un número de columnas para <code>columns</code>.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Devolver unha táboa coa columna [CustomerID] cos valores {1, 2} e a columna [Name] cos valores {\"Bob\", \"Jim\"} e a columna [Phone] cos valores {\"123-4567\", \"987-6543\"}.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    {\"CustomerID\", \"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Devolver unha táboa coa columna [CustomerID] cos valores {1, 2} e a columna [Name] cos valores {\"Bob\", \"Jim\"} e a columna [Phone] cos valores {\"123-4567\", \"987-6543\"}, indo [CustomerID] é un tipo de número e [Name] e [Phone] son tipos de texto.",
            "Code": "Table.FromRows(\r\n    {\r\n        {1, \"Bob\", \"123-4567\"},\r\n        {2, \"Jim\", \"987-6543\"}\r\n    },\r\n    type table [CustomerID = number, Name = text, Phone = text]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "rows": "list",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FromValue",
      "Documentation": {
        "Documentation.Name": "Table.FromValue",
        "Documentation.Description": "Crea unha táboa cunha columna do(s) valor(es) fornecido(s).",
        "Documentation.LongDescription": "Crea unha táboa cunha columna que contén a lista de valores ou o valor fornecido, <code>value</code>. Pode especificarse un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n    <li> <code>DefaultColumnName</code>: o nome de columna que se usa ao construír a táboa a partir dunha lista ou valor escalar.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Crear unha táboa a partir do valor 1.",
            "Code": "Table.FromValue(1)",
            "Result": "Table.FromRecords({[Value = 1]})"
          },
          {
            "Description": "Crear unha táboa a partir da lista.",
            "Code": "Table.FromValue({1, \"Bob\", \"123-4567\"})",
            "Result": "Table.FromRecords({\r\n    [Value = 1],\r\n    [Value = \"Bob\"],\r\n    [Value = \"123-4567\"]\r\n})"
          },
          {
            "Description": "Crear unha táboa a partir do valor 1, cun nome de columna personalizado.",
            "Code": "Table.FromValue(1, [DefaultColumnName = \"MyValue\"])",
            "Result": "Table.FromRecords({[MyValue = 1]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PartitionValues",
      "Documentation": {
        "Documentation.Name": "Table.PartitionValues",
        "Documentation.Description": "Devolve información sobre o xeito no que está particionada a táboa.",
        "Documentation.LongDescription": "Devolve información sobre o xeito no que está particionada a táboa.  Devólvese unha táboa onde cada columna é unha columna de partición da táboa orixinal e cada fila corresponde a unha partición da táboa orixinal.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Profile",
      "Documentation": {
        "Documentation.Name": "Table.Profile",
        "Documentation.Description": "Devolve un perfil das columnas da táboa.",
        "Documentation.LongDescription": "<p>Devolve un perfil para as columnas en <code>table</code>.</p>\r\n<p>Cada columna devolve a seguinte información (en caso de ser aplicable):\r\n<ul>\r\n  <li>mínimo</li>\r\n  <li>máximo</li>\r\n  <li>media</li>\r\n  <li>desviación estándar</li>\r\n  <li>total</li>\r\n  <li>total nulo</li>\r\n  <li>total diferenciado</li>\r\n</ul>\r\n</p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "additionalAggregates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.PromoteHeaders",
      "Documentation": {
        "Documentation.Name": "Table.PromoteHeaders",
        "Documentation.Description": "Sube de nivel a primeira fila de valores como as novas cabeceiras de columna (p. ex., nomes de columna).",
        "Documentation.LongDescription": "Sube de nivel a primeira fila de valores como as novas cabeceiras de columna (p. ex., nomes de columna). Por defecto, só os valores de texto ou de número súbense de nivel ás cabeceiras. Opcións válidas:\r\n    <div>\r\n      <code>PromoteAllScalars</code>: se se configura en <code>true</code>, todos os valores escalares da primeira fila sobense de nivel ás cabeceiras con <code>Culture</code>, se se especifica (ou a configuración rexional do documento actual).\r\n    No caso dos valores que non se poden converter en texto, usarase un nome de columna predefinido.\r\n    </div>\r\n    <div>\r\n    <code>Culture</code>: un nome de cultura que especifica a cultura dos datos.\r\n    </div>\r\n  ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Suba de nivel a primeira fila de valores da táboa.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Column1 = \"CustomerID\", Column2 = \"Name\", Column3 = #date(1980, 1, 1)],\r\n        [Column1 = 1, Column2 = \"Bob\", Column3 = #date(1980, 1, 1)]\r\n    })\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Column3 = #date(1980, 1, 1)]})"
          },
          {
            "Description": "Suba de nivel todos os escalares da primeira fila da táboa a cabeceiras.",
            "Code": "Table.PromoteHeaders(\r\n    Table.FromRecords({\r\n        [Rank = 1, Name = \"Name\", Date = #date(1980, 1, 1)],\r\n        [Rank = 1, Name = \"Bob\", Date = #date(1980, 1, 1)]}\r\n    ),\r\n    [PromoteAllScalars = true, Culture = \"en-US\"]\r\n)",
            "Result": "Table.FromRecords({[1 = 1, Name = \"Bob\", #\"1/1/1980\" = #date(1980, 1, 1)]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveFirstN",
        "Documentation.Description": "Devolve unha táboa coas primeiras filas de conta ignoradas.",
        "Documentation.LongDescription": "Devolve unha táboa que non contén o primeiro número especificado de filas, <code>countOrCondition</code>, da táboa <code>table</code>.\r\n    O número de filas eliminadas depende do parámetro opcional <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Se <code>countOrCondition</code> se omite, só se elimina a primeira fila. </li>\r\n    <li> Se <code>countOrCondition</code> é un número, eliminarase ese número de filas (comezando polo principio). </li>\r\n    <li> Se <code>countOrCondition</code> é unha condición, eliminaranse as filas que cumpran a condición ata que unha fila non a cumpra.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Eliminar a primeira fila da táboa.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Eliminar as dúas primeiras filas da táboa.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Eliminar as primeiras filas onde [CustomerID] <=2 da táboa.",
            "Code": "Table.RemoveFirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] <= 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "Table.RemoveLastN",
        "Documentation.Description": "Devolve unha táboa coas últimas N filas eliminadas.",
        "Documentation.LongDescription": "Devolve unha táboa que non contén as últimas <code>countOrCondition</code> filas da táboa <code>table</code>.\r\n        O número de filas eliminadas depende do parámetro opcional <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Se <code>countOrCondition</code> se omite, só se elimina a última fila. </li>\r\n    <li> Se <code>countOrCondition</code> é un número, eliminarase ese número de filas (comezando pola parte inferior). </li>\r\n    <li> Se <code>countOrCondition</code> é unha condición, eliminaranse as filas que cumpran a condición ata que unha fila non a cumpra.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Eliminar a última fila da táboa.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Eliminar as últimas filas onde [CustomerID] > 2 da táboa.",
            "Code": "Table.RemoveLastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] >= 2\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RemoveRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRowsWithErrors",
        "Documentation.Description": "Devolve unha táboa coas filas eliminadas da táboa de entrada que conteñen un erro en polo menos unha das celas. Especifícase unha lista de columnas, entón só se inspeccionan á busca de erros as celas nas columnas especificadas.",
        "Documentation.LongDescription": "Devolve unha táboa coas filas eliminadas da táboa de entrada que conteñen un erro en polo menos unha das celas. Especifícase unha lista de columnas, entón só se inspeccionan á busca de erros as celas nas columnas especificadas.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Elimine un valor de erro da primeira fila.",
            "Code": "Table.RemoveRowsWithErrors(\r\n    Table.FromRecords({\r\n        [Column1 = ...],\r\n        [Column1 = 2],\r\n        [Column1 = 3]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 2],\r\n    [Column1 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ReverseRows",
      "Documentation": {
        "Documentation.Name": "Table.ReverseRows",
        "Documentation.Description": "Devolve unha táboa coas filas en orde inversa.",
        "Documentation.LongDescription": "Devolve unha táboa coas filas da <code>table</code> de entrada en orde inversa.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Inverter as filas na táboa.",
            "Code": "Table.ReverseRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Schema",
      "Documentation": {
        "Documentation.Name": "Table.Schema",
        "Documentation.Description": "Devolve unha táboa que contén unha descrición das columnas (p. ex. o esquema) da táboa especificada.",
        "Documentation.LongDescription": "<p>Devolve unha táboa na que se describen as columnas de <code>table</code>.</p>\r\n<p>En cada fila da táboa, descríbense as propiedades dunha columna de <code>table</code>:</p>\r\n<p><table>\r\n  <tr>\r\n    <td><b>Nome da columna</b></td>\r\n    <td><b>Descrición</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Nome</code></td>\r\n    <td>O nome da columna.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Posición</code></td>\r\n    <td>A posición segundo 0 da columna en <code>table</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>TypeName</code></td>\r\n    <td>O nome do tipo de columna.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Clase</code></td>\r\n    <td>A clase do tipo de columna.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsNullable</code></td>\r\n    <td>Se a columna pode conter valores <code>null</code> ou non.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecisionBase</code></td>\r\n    <td>A base numérica (p. ex., base-2, base-10) dos campos <code>NumericPrecision</code> e <code>NumericScale</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericPrecision</code></td>\r\n    <td>A precisión dunha columna numérica na base especificada por <code>NumericPrecisionBase</code>. Este é o número máximo de díxitos que pode representar un valor deste tipo (incluídos os díxitos fraccionais).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NumericScale</code></td>\r\n    <td>A escala dunha columna numérica na base especificada por <code>NumericPrecisionBase</code>. Este é o número de díxitos na parte fraccional dun valor deste tipo. Un valor de <code>0</code> indica unha escala fixa sen díxitos fraccionais. Un valor de <code>null</code> indica que non se coñece a escala (xa sexa porque é flotante ou porque non está definida).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>DateTimePrecision</code></td>\r\n    <td>O número máximo de díxitos fraccionais que se admiten na segunda porción dun valor de data ou hora.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>MaxLength</code></td>\r\n    <td>O número máximo de caracteres permitidos nunha columna de <code>texto</code> ou o número máximo de bytes permitidos nunha columna <code>binaria</code>.</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>IsVariableLength</code></td>\r\n    <td>Indica se esta columna pode variar en duración (ata <code>MaxLength</code>) ou se é de tamaño fixo.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeTypeName</code></td>\r\n    <td>O nome do tipo da columna no sistema de tipo nativo da orixe (p. ex., <code>nvarchar</code> para SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>NativeDefaultExpression</code></td>\r\n    <td>A expresión predefinida para un valor desta columna no idioma de expresión nativo da orixe (p. ex., <code>42</code> ou <code>newid()</code> para SQL Server).</td>\r\n  </tr>\r\n  <tr>\r\n    <td>&nbsp;</td>\r\n    <td>&nbsp;</td>\r\n  </tr>\r\n  <tr>\r\n    <td><code>Descrición</code></td>\r\n    <td>A descrición da columna.</td>\r\n  </tr>\r\n</table></p>",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SelectRowsWithErrors",
      "Documentation": {
        "Documentation.Name": "Table.SelectRowsWithErrors",
        "Documentation.Description": "Devolve unha táboa só coas filas da táboa de entrada que conteñen un erro en polo menos unha das celas. Especifícase unha lista de columnas, entón só se inspeccionan á busca de erros as celas nas columnas especificadas.",
        "Documentation.LongDescription": "Devolve unha táboa só coas filas da táboa de entrada que conteñen un erro en polo menos unha das celas. Especifícase unha lista de columnas, entón só se inspeccionan á busca de erros as celas nas columnas especificadas.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Seleccione nomes de clientes con erros na súas filas.",
            "Code": "Table.SelectRowsWithErrors(\r\n    Table.FromRecords({\r\n        [CustomerID = ..., Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)[Name]",
            "Result": "{\"Bob\"}"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Skip",
      "Documentation": {
        "Documentation.Name": "Table.Skip",
        "Documentation.Description": "Devolve unha táboa coas primeiras filas de conta ignoradas.",
        "Documentation.LongDescription": "Devolve unha táboa que non contén o primeiro número especificado de filas, <code>countOrCondition</code>, da táboa <code>table</code>.\r\n    O número de filas ignoradas depende do parámetro opcional <code>countOrCondition</code>.\r\n    <ul>\r\n    <li> Se <code>countOrCondition</code> se omite, só se ignora a primeira fila. </li>\r\n    <li> Se <code>countOrCondition</code> é un número, ignorarase ese número de filas (comezando polo principio). </li>\r\n    <li> Se <code>countOrCondition</code> é unha condición, ignoraranse as filas que cumpran a condición ata que unha fila non a cumpra.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Ignorar a primeira fila da táboa.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Ignorar as dúas primeiras filas da táboa.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Ignorar as primeiras filas da táboa onde [Price] > 25 da táboa.",
            "Code": "Table.Skip(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    each [Price] > 25\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.StopFolding",
      "Documentation": {
        "Documentation.Name": "Table.StopFolding",
        "Documentation.Description": "Evita a execución de operacións cara a niveis inferiores no código orixinal dos datos.",
        "Documentation.LongDescription": "Evita a execución de operacións cara a niveis inferiores no código orixinal dos datos de <code>table</code>.",
        "Documentation.Category": "Table.Other",
        "Documentation.Examples": [
          {
            "Description": "Obtén datos dunha táboa SQL de modo que evita a execución de operacións cara a niveis inferiores como consultas no servidor SQL Server.",
            "Code": "let\r\n    Source = Sql.Database(\"SomeSQLServer\", \"MyDb\"),\r\n    MyTable = Source{[Item=\"MyTable\"]}[Data],\r\n    MyLocalTable = Table.StopFolding(dbo_MyTable)\r\nin\r\n    MyLocalTable",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Transpose",
      "Documentation": {
        "Documentation.Name": "Table.Transpose",
        "Documentation.Description": "Converte as columnas en filas e as filas en columnas.",
        "Documentation.LongDescription": "Converte as columnas en filas e as filas en columnas.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Converte as filas da táboa de pares de nome-valor en columnas.",
            "Code": "Table.Transpose(\r\n    Table.FromRecords({\r\n        [Name = \"Full Name\", Value = \"Fred\"],\r\n        [Name = \"Age\", Value = 42],\r\n        [Name = \"Country\", Value = \"UK\"]\r\n    })\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = \"Full Name\", Column2 = \"Age\", Column3 = \"Country\"],\r\n    [Column1 = \"Fred\", Column2 = 42, Column3 = \"UK\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Tables.GetRelationships",
      "Documentation": {
        "Documentation.Name": "Tables.GetRelationships",
        "Documentation.Description": "Obtén as relacións existentes entre un conxunto de táboas.",
        "Documentation.LongDescription": "Obtén as relacións existentes entre un conxunto de táboas. Dáse por feito que o conxunto <code>tables</code> ten unha estrutura similar á dunha táboa de navegación. A columna definida por <code>dataColumn</code> contén as táboas de datos reais.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tables": "table",
        "dataColumn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Database",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Database",
        "Documentation.LongDescription": "Connects to TeamDesk database and let you select a table and a view to retrieve the data from.",
        "Documentation.Examples": [
          {
            "Description": "Connect to sample TeamDesk database",
            "Code": "TeamDesk.Database(\"https://www.teamdesk.net/secure/db/57692\")",
            "Result": "Navigation table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.Select",
      "Documentation": {
        "Documentation.Name": "TeamDesk.Select",
        "Documentation.LongDescription": "Retrieves the data from select columns in provided table. You can also apply an additional filter for results as well as change the order in which records are retrieved.",
        "Documentation.Examples": [
          {
            "Description": "Selects text and date columns",
            "Code": "TeamDesk.Select(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", { \"Starter\", \"Start Date\", \"Participants\" })",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "columns": "any",
        "filter": "text",
        "orderBy": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TeamDesk.SelectView",
      "Documentation": {
        "Documentation.Name": "TeamDesk.SelectView",
        "Documentation.LongDescription": "Retrieves the data from provided table and view. You can also apply an additional filter for results.",
        "Documentation.Examples": [
          {
            "Description": "Retrieve all meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          },
          {
            "Description": "Retrieve today's meetings from List All view",
            "Code": "TeamDesk.SelectView(\"https://www.teamdesk.net/secure/db/57692\", \"Meeting\", \"List All\", \"[Start Date] = Today()\")",
            "Result": "#table(\r\n\t{ \"Starter\", \"Start Date\", \"Participants\" },\r\n\t{\r\n\t\t{ \"\"Joe\"\", #date(2018, 10, 12), 10 },\r\n\t\t// ...\r\n\t}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "table": "text",
        "view": "text",
        "filter": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Teradata.Database",
      "Documentation": {
        "Documentation.Name": "Teradata.Database",
        "Documentation.Description": "Devolve unha táboa de táboas e vistas SQL dunha base de datos Teradata.",
        "Documentation.LongDescription": "Devolve unha táboa de táboas e visualizacións SQL dunha base de datos Teradata no servidor <code>server</code>. O porto pódese especificar opcionalmente co servidor, separado con dous puntos. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], por exemplo.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TibcoTdv.DataSource",
      "Documentation": {
        "Documentation.DisplayName": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Caption": "Power BI Connector for TIBCO(R) Data Virtualization",
        "Documentation.Name": "Power BI Connector for TIBCO(R) Data Virtualization"
      },
      "ReturnType": "table",
      "Parameters": {
        "dsn": "text",
        "advancedOptions": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "TimeSeriesInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Time Series Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Troux.Feed",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.Tables",
      "Documentation": {
        "Documentation.Description": "Introduza o número de meses de datos históricos de Twilio que quere recuperar.",
        "Documentation.DisplayName": "Twilio",
        "Documentation.Caption": "Twilio.Tables",
        "Documentation.Name": "Twilio",
        "Documentation.LongDescription": "Devolve unha táboa con datos relevantes de Twilio."
      },
      "ReturnType": "table",
      "Parameters": {
        "historyMonths": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableSchema",
      "Documentation": {
        "Documentation.Name": "Type.TableSchema",
        "Documentation.Description": "Devolve unha táboa que contén unha descrición das columnas (é dicir, o esquema) do tipo de táboa especificado.",
        "Documentation.LongDescription": "<p>Devolve unha táboa que describe as columnas de <code>tableType</code>.</p>\r\n<p>Consulta a documentación de <code>Table.Schema</code> para obter unha descrición da táboa resultante.</p>",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Usercube.Universes",
      "Documentation": {
        "Documentation.Name": "Usercube",
        "Documentation.LongDescription": "Provides data from a Usercube instance",
        "Documentation.Examples": [
          {
            "Description": "Returns the universe data defined in the Usercube database.",
            "Code": "Usercube.Universes(\"https://mycompany.usercube.com\")",
            "Result": "Navigation table containing Usercube's universes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "serverUrl": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Feed",
      "Documentation": {
        "Documentation.Description": "Fonte de Azure DevOps Services",
        "Documentation.DisplayName": "Fonte de Azure DevOps Services",
        "Documentation.Caption": "VSTS.Feed",
        "Documentation.Name": "VSTS.Feed",
        "Documentation.LongDescription": "Devolve unha táboa de fontes OData proporcionada por Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Traits",
      "Documentation": {
        "Documentation.Name": "Value.Traits",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Versions",
      "Documentation": {
        "Documentation.Name": "Value.Versions",
        "Documentation.Description": "Value.Versions",
        "Documentation.LongDescription": "Value.Versions",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Vena.Contents",
      "Documentation": {
        "Documentation.Name": "Vena 1.0.4",
        "Documentation.LongDescription": "Vena"
      },
      "ReturnType": "table",
      "Parameters": {
        "source": "text",
        "modelQuery": "text",
        "apiVersion": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VivaInsights.Data",
      "Documentation": {
        "Documentation.Name": "Conectar aos datos de Viva Insights",
        "Documentation.LongDescription": "Importe datos de atributos e métricas semanais de Workplace Analytics.",
        "Documentation.Examples": [
          {
            "Description": "Devolve unha táboa con atributos visibles e métricas por semana para cada empregado medido na partición.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Page",
      "Documentation": {
        "Documentation.Name": "Web.Page",
        "Documentation.Description": "Devolve o contido do documento HTML dividido nas súas estruturas constituíntes, así como unha representación do documento completo e seu texto despois de eliminar as etiquetas.",
        "Documentation.LongDescription": "Devolve o contido do documento HTML dividido nas súas estruturas constituíntes, así como unha representación do documento completo e seu texto despois de eliminar as etiquetas.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.KeyMetrics",
      "Documentation": {
        "Documentation.Description": "Devolve unha táboa con medidas chave de Webtrends.",
        "Documentation.DisplayName": "Webtrends.KeyMetrics",
        "Documentation.Caption": "Webtrends.KeyMetrics",
        "Documentation.Name": "Webtrends.KeyMetrics",
        "Documentation.LongDescription": "Realiza unha chamada ao extremo de Webtrends KeyMetrics e devolve todos os datos como unha táboa.",
        "Documentation.Examples": [
          {
            "Description": "Extrae unha táboa de medidas chave para o arrendatario 98765 nos últimos 30 días",
            "Code": "Webtrends.KeyMetrics(\"98765\")",
            "Result": "Unha táboa de medidas chave"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Webtrends.Tables",
      "Documentation": {
        "Documentation.Description": "Escribe o ID do perfil asociado coa túa conta de Webtrends.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Webtrends.Tables",
        "Documentation.Name": "Webtrends",
        "Documentation.LongDescription": "Devolve unha táboa con datos importantes de Webtrends."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Witivio.Contents",
      "Documentation": {
        "Documentation.Name": "Witivio 365 - Configuration",
        "Documentation.LongDescription": "Witivio 365 - Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "botId": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "WorkplaceAnalytics.Data",
      "Documentation": {
        "Documentation.Name": "Conectar aos datos de Viva Insights",
        "Documentation.LongDescription": "Importe datos de atributos e métricas semanais de Workplace Analytics.",
        "Documentation.Examples": [
          {
            "Description": "Devolve unha táboa con atributos visibles e métricas por semana para cada empregado medido na partición.",
            "Code": "VivaInsights.Data(\"5f142ea5-c08a-eb02-de68-41dccdefb141\")",
            "Result": "#table({\"Query1\"}, {{\"PersonId\"\"}, {\"PID\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scopeId": "text",
        "jobName": "text",
        "jobId": "text",
        "schemaType": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Document",
      "Documentation": {
        "Documentation.Name": "Xml.Document",
        "Documentation.Description": "Devolve o contido do documento XML como unha táboa xerárquica.",
        "Documentation.LongDescription": "Devolve o contido do documento XML como unha táboa xerárquica.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Xml.Tables",
      "Documentation": {
        "Documentation.Name": "Xml.Tables",
        "Documentation.Description": "Devolve o contido do documento XML como unha colección aniñada de táboas simplificadas.",
        "Documentation.LongDescription": "Devolve o contido do documento XML como unha colección aniñada de táboas simplificadas.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Recuperar os contidos dun ficheiro xml local.",
            "Code": "Xml.Tables(File.Contents(\"C:\\invoices.xml\"))",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "contents": "any",
        "options": "record",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Zendesk.Tables",
      "Documentation": {
        "Documentation.Description": "Introduce o URL da túa conta de Zendesk.",
        "Documentation.DisplayName": "Zendesk",
        "Documentation.Caption": "Zendesk.Tables",
        "Documentation.Name": "Zendesk",
        "Documentation.LongDescription": "Devolve unha táboa cos datos de Zendesk importantes."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AdoDotNet.DataSource",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.DataSource",
        "Documentation.Description": "Devolve a colección de esquemas dunha orixe de datos ADO.NET.",
        "Documentation.LongDescription": "Devolve a colección de esquemas da orixe de datos ADO.NET co nome de fornecedor <code>providerName</code> e a cadea de conexión <code>connectionString</code>. <code>connectionString</code> pode ser texto ou un rexistro de pares de valores de propiedade. Os valores de propiedade poden ser texto ou números. Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Unha l&#243;xica (true/false) que determina se producir opci&#243;ns de cadea de conexi&#243;n compatibles con SQL Server para a autenticaci&#243;n de Windows. O valor predefinido &#233; true.</li>\r\n<li><code>TypeMap</code></li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AmazonRedshift.Database",
      "Documentation": {
        "Documentation.Name": "Amazon Redshift",
        "Documentation.Caption": "Amazon Redshift (Beta)",
        "Documentation.Description": "Importa datos dunha base de datos de Amazon Redshift.",
        "Documentation.LongDescription": "Devolve unha táboa que enumera as táboas do <code>servidor</code> do clúster de Amazon Redshift na <code>base de datos</code> da base de datos. Pódese especificar un parámetro de rexistro opcional, <code>opcións</code>, para controlar as seguintes opcións:\r\n<ul>\r\n<li><code>Nome do fornecedor</code>: un valor de texto para usar como nome do fornecedor para a conexión. Isto úsase cando se usa a autenticación de Microsoft.</li>\r\n<li><code>Tamaño do lote</code>:O número de filas que se obteñen nunha única chamada ao servidor.</li>\r\n</ul>\r\n  ",
        "Documentation.Examples": [
          {
            "Description": null,
            "Code": "AmazonRedshift.Database(\"contoso.redshift.amazonaws.com:5439\", \"dev\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AnalysisServices.Database",
      "Documentation": {
        "Documentation.Name": "AnalysisServices.Database",
        "Documentation.Description": "Devolve unha táboa de cubos multidimensionais ou modelos tabulares da base de datos de Analysis Services.",
        "Documentation.LongDescription": "Devolve unha táboa de cubos multidimensionais ou modelos tabulares da base de datos de Analysis Services <code>database</code> no servidor <code>server</code>. Pode especificarse un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>Query</code> : Unha consulta MDX nativa usada para recuperar datos.</li>\r\n<li><code>TypedMeasureColumns</code> : Un valor l&#243;xico que indica se os tipos especificados no modelo tabular ou multidimensional se usar&#225;n para os tipos das columnas de medida engadidas. Cando se establece en false, o tipo &quot;number&quot; usarase para todas as columnas de medida. O valor predefinido para esta opci&#243;n &#233; false.</li>\r\n<li><code>Culture</code> : Un nome de referencia cultural que especifica a referencia cultural dos datos. Este corresp&#243;ndese coa propiedade de cadea de conexi&#243;n &quot;Locale Identifier&quot;.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido depende do controlador.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>SubQueries</code> : Un n&#250;mero (0, 1 ou 2) que establece o valor da propiedade &quot;SubQueries&quot; na cadea de conexi&#243;n. Isto controla o comportamento de membros calculados en subselecci&#243;ns ou subcubos. (O valor predefinido &#233; 2).</li>\r\n<li><code>Implementation</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Anaplan.Contents",
      "Documentation": {
        "Documentation.Name": "Anaplan Connection Configuration"
      },
      "ReturnType": "table",
      "Parameters": {
        "apiUrl": "text",
        "authUrl": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ApacheSpark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Devolve unha táboa que enumera as táboas do clúster Spark especificado.",
        "Documentation.LongDescription": "Devolve unha táboa que enumera as táboas do <code>host</code> do clúster Spark mediante o uso de <code>protocol</code>. Os protocolos válidos son:\r\nSparkProtocol.Standard, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Devolve unha táboa que enumera as táboas do clúster Spark especificado.",
            "Code": "Spark.Tables(\"http://example.com:10000/cliservice\", SparkProtocol.HTTP)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AutomationAnywhere.Feed",
      "Documentation": {
        "Documentation.Name": "Automation Anywhere - Login",
        "Documentation.LongDescription": "Automation Anywhere - Login"
      },
      "ReturnType": "table",
      "Parameters": {
        "CRVersion": "text",
        "CRHostName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDevOpsServer.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Indique os nomes da organización e do proxecto.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps Server (só Boards)",
        "Documentation.LongDescription": "Devolve unha táboa de visualizacións de Analytics proporcionada por Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "HDInsight Interactive Query",
        "Documentation.Caption": null,
        "Documentation.Description": "Importación de datos de HDInsight Interactive Query",
        "Documentation.LongDescription": "\r\nDevolve unha lista de táboas de HDInsight Interactive Query especificada na <code>base de datos</code> do <code>servidor</code> de HDInsight Interactive Query. Pode especificarse de forma opcional un número de porto co servidor, separado de dous puntos. Pode especificarse un parámetro <code>options</code> opcional para controlar as seguintes opcións:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: Unha duración que controla o tempo de espera antes de abandonar unha tentativa para establecer unha conexión co servidor. O valor predefinido é dependente do controlador.</li>\r\n        <li><code>CommandTimeout</code>: Unha duración que controla o tempo que ten permitido executarse a consulta do lado do servidor antes de cancelarse. O valor predefinido é dependente do controlador.</li>\r\n</ul>\r\nO parámetro <code>options</code> especifícase como [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cdm.MapToEntity",
      "Documentation": {
        "Documentation.Caption": "Cdm.MapToEntity",
        "Documentation.Description": "Devolve unha táboa coas columnas asignadas para os atributos dunha entidade en Common Data Model, incluídos os tipos de datos.",
        "Documentation.DisplayName": "Cdm.MapToEntity",
        "Documentation.LongDescription": "Devolve unha táboa coas columnas asignadas para os atributos dunha entidade en Common Data Model, incluídos os tipos de datos. As columnas da definición de entidade engadiranse se non están asignadas e todas as columnas sen asignar eliminaranse.",
        "Documentation.Name": "Cdm.MapToEntity"
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnDefinitions": "any",
        "defaultType": "type",
        "defaultCdmClass": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cherwell.SavedSearches",
      "Documentation": {
        "Documentation.Name": "Cherwell Data Connector v1.0",
        "Documentation.LongDescription": "Returns the results of a Saved Search from a Cherwell Service Management REST API (requires CSM version 10.2 or later)."
      },
      "ReturnType": "table",
      "Parameters": {
        "API URL": "text",
        "Client ID": "text",
        "Locale": "text",
        "Saved Search URL": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "CloudBluePSA.Feed",
      "Documentation": {
        "Documentation.Name": "CloudBluePSA",
        "Documentation.LongDescription": "This function will resolve the page limitation issue and will retrieve and combine all pages of data returned by the API endpoint in an efficient manner."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Text.Type",
        "filter": "Text.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ApplyParameter",
      "Documentation": {
        "Documentation.Name": "Cube.ApplyParameter",
        "Documentation.Description": "Devolve un cubo tras aplicarlle un parámetro.",
        "Documentation.LongDescription": "Devolve un cubo tras aplicarlle <code>parameter</code> con <code>arguments</code> a <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "parameter": "any",
        "arguments": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.CollapseAndRemoveColumns",
      "Documentation": {
        "Documentation.Name": "Cube.CollapseAndRemoveColumns",
        "Documentation.Description": "Modifica a granularidade dimensional do contexto de filtro do cubo mediante a contracción dos atributos asignados ás columnas especificadas.",
        "Documentation.LongDescription": "Modifica a granularidade dimensional do contexto de filtro do <code>cube</code> cubo mediante a contracción dos atributos asignados ás columnas especificadas <code>columnNames</code>. As columnas tamén se eliminan da vista tabular do cubo.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "columnNames": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.ReplaceDimensions",
      "Documentation": {
        "Documentation.Name": "Cube.ReplaceDimensions",
        "Documentation.Description": "Substitúe o conxunto de dimensións que devolveu Cube.Dimensions.",
        "Documentation.LongDescription": "Substitúe o conxunto de dimensións que devolve <code>Cube.Dimensions</code>.\r\n    Por exemplo, esta función pódese usar para engadir unha columna de ID a un atributo de dimensión, de xeito que a orixe de datos poida agruparse no ID e non no valor que se mostra.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensions": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.Transform",
      "Documentation": {
        "Documentation.Name": "Cube.Transform",
        "Documentation.Description": "Aplica unha lista de funcións de cubo.",
        "Documentation.LongDescription": "Aplica a lista de funcións de cubo, <code>transforms</code>, en <code>cube</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "transforms": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DB2.Database",
      "Documentation": {
        "Documentation.Name": "DB2.Database",
        "Documentation.Description": "Devolve unha táboa de táboas e vistas SQL dispoñibles nunha base de datos Db2.",
        "Documentation.LongDescription": "Devolve unha táboa de táboas e vistas SQL dispoñibles nunha base de datos Db2 no servidor <code>server</code> na instancia de base de datos co nome <code>database</code>. O porto pódese especificar opcionalmente co servidor, separado con dous puntos. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n<li><code>Implementation</code> : Especifica a implantaci&#243;n do fornecedor de bases de datos interno que se vai usar. Os valores v&#225;lidos son: &quot;IBM&quot; e &quot;Microsoft&quot;.</li>\r\n<li><code>BinaryCodePage</code> : N&#250;mero do CCSID (identificador codificado de conxunto de caracteres) para descodificar datos binarios de Db2 FOR BIT en cadeas de caracteres. Apl&#237;case a Implementation = &quot;Microsoft&quot;. Estableza 0 para desactivar a conversi&#243;n (valor predefinido). Estableza 1 para converter segundo a codificaci&#243;n da base de datos. Estableza outro n&#250;mero de CCSID para converter &#225; codificaci&#243;n da aplicaci&#243;n.</li>\r\n<li><code>PackageCollection</code> : Especifica un valor de cadea para a colecci&#243;n de paquetes (o valor predefinido &#233; &quot;NULLID&quot;) para permitir o uso de paquetes compartidos necesarios para procesar instruci&#243;ns SQL. Apl&#237;case a Implementation = &quot;Microsoft&quot;.</li>\r\n<li><code>UseDb2ConnectGateway</code> : Especifica se a conexi&#243;n se realiza a trav&#233;s dunha pasarela Db2 Connect. Apl&#237;case a Implementaci&#243;n = &quot;Microsoft&quot;.</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], por exemplo.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataVirtuality.Database",
      "Documentation": {
        "Documentation.Name": "Data Virtuality LDW",
        "Documentation.LongDescription": "Data Virtuality LDW",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAB0VBMVEUAAAD9VAD9VAD9VQD8UwD8UwD/UgD/YAD8VAD8UwD/VQD/TgD9VAD9VAD/WQD9VAD9VQD9VAD8VQD9VAD9VQD/WAD9VAD9VAD/QAD9VAD+VAD9UwD8VQD/WAD9UwD9VAD9VAD9VQD9VAD/UwD9VAD8VQD7UwD9UwD9VAD/ZgD/VQD7VQD+VQD+VAD9VAD8VAD9VAD8VQD9VAD+VAD+VAD9VAD8VQD8VAD9VAD9VQD+VAD9UwD9VAD+VQD/UgD8UwD/VQD/VQD9VAD9VAD/XQD/gAD9UwD9VAD9VQD9VAD9VAD8UwD+VAD9VQD/AAD9UwD8VAD/VQD9VAD9UwD9UwD9VAD9UwD/VQD+VAD9VAD/UgD/UQD8VAD9VAD9VAD/VQD9VQD9VAD8UwD9VAD9VAD9VAD8VQD9VAD9UwD/VQD9VAD9VAD9UwD8VQD9VAD+VAD9VAD8VAD9VAD9UwD+VAD8VQD8VAD8VAD/UgD8VAD9VQD8UwD/VQD9VAD9VAD9VAD/UgD9VAD9UwD+VQD9VAD9VAD8VAD7VAD/UwD/UAD/UwD/SQD/VQD8UwD9UwD9UwD8VQD8VAD9VAD/WwD7UwD/WgD/VQD9VAD9VAD9VAD////dQrB6AAAAmXRSTlMAfNjQX2I+CF5WBg3ngxTjzYZXhWkd99sEnrefUSBonYxs9jH9wUSN1wUkSL6z82TUXZK6sPTKSehvsZz1sjtZAwn53gsClptm/tVNtngBpcI2o4ri/Kghv20cFsn4iA917lPs6XlLdoQS7aTcxKC95cOVgbROYUwfxn5cMGpnmjjda7vR2sBDIhA0Bx5lkNZjUuoORxEt4X/Uy7aCAAAAAWJLR0SamN9nEgAAAAd0SU1FB+MGEhMlMY4ZZMwAAAHrSURBVDjLfVP3WxNBEB2kHEZKBCEUaTHSYiNUNYFESMjFEHoRTSyolNAUkKKogKHbUND5b93Zu1vvy346P9zMvPd2Zm93FiDJUs6lpsF/LB2ZZci4knneQv5CFgmyJT4nF9GqsOAi8ZgnCfIJvgRQUEiBrUgSFBNeAlDKC1wmqKy8ojJHCKoItytXHOSvgqW6ppZHdYagnq90XuOu9PoN1O2mKGGj9BYmW4MQuHSksanZxLcoQtCqIW0At/HOXb4Vt6dc49tTOrzgsyPec3k6u8AfAOhm7Zw+fW1QRQzdhzBiD4CfbTsC0MsK9PWbt4d9A4iDouHQMIPUkVGejIktqQ903jL+8BEB0dhjlj0x+KfPTEcb07CJIGsYfK4lL0z8ywlj2SRd8ZSdwgGYNviav0cxw4GCOPsVnLWKCnOI8wtcsKgj/a9Y8loIlhCXYYVdmPpGR3yrIcQpiLCWa+tLG6yn3QdFb7PfcbZuM8wHJfr+A34Eb1Tr3irq+ddN97O1vaNHLiFYkW75E30SQpBp4O5lPnq4u8fdviE44KOecDkV7dzVwyM3+W1R4vjzl80yClb5yjiAh3xAmm3/V8IL1/T39U0SfOcFYvTQ2I+1jUuCDeJPflB49DPtVOLhzKG9r39bg+3X70gS9gcfgQLGL9JAEQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOS0wNi0xOFQxOTowOTo0MSswMDowMHnJhwoAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTktMDYtMThUMTk6MDk6NDMrMDA6MDCfCy6fAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DataWorld.Dataset",
      "Documentation": {
        "Documentation.Name": "DataWorld.Dataset",
        "Documentation.LongDescription": "Recupera un conxunto de datos de Data.World"
      },
      "ReturnType": "table",
      "Parameters": {
        "owner": "text",
        "id": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Catalogs",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Contents",
      "Documentation": {
        "Documentation.Name": "Azure Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Catalogs",
      "Documentation": {
        "Documentation.Name": "Databricks"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV300",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV300(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Dremio.DatabasesV370",
      "Documentation": {
        "Documentation.Name": "Dremio Software",
        "Documentation.LongDescription": "Returns a table listing the datasets on Dremio Server. This will be the same list as shown in Power BI Navigator. See https://docs.microsoft.com/en-us/powerquery-m/odbc-datasource",
        "Documentation.Examples": [
          {
            "Description": "How to return the list of datasets on localhost with an encrypted connection.",
            "Code": "Dremio.DatabasesV370(\"localhost:31010\",\"Enabled\")",
            "Result": "A table listing the datasets on localhost."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encryption": "text",
        "engine": "text",
        "routingTag": "text",
        "routingQueue": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "EduFrame.Contents",
      "Documentation": {
        "Documentation.Name": "Eduframe"
      },
      "ReturnType": "table",
      "Parameters": {
        "domainSlug": "text",
        "personalInput": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Exasol.Database",
      "Documentation": {
        "Documentation.Name": "Exasol",
        "Documentation.LongDescription": "Exasol",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gMJCSYX4iwYHwAAA+tJREFUWMOll11oHUUUx3+73hA/qj4YqUZ9sPGxaz+wKoKCrpiRusGHUEWhBm2bUgNttWpBUVFRUWL9wD7c+gFiFK2gzSieSgc/QONDApKpPvjgB6WgKdZq1bbpTdaHzCbrzd3ZDR64D8s98/+f+Z8zZ85ARUtEkYiq5hzFVWGpJaJWAl3AyQKfaWBEKzlUKYAoBmsgis8ArgPaCjxD4EiQiLoWGAYWeWBfAwa0kmMLUOBR4JESzztD4DPggRLHPuCW0jTMSd8N3FOC+TTwZqiVpEAdGPI4h85nuVbSOog56TuBncCZHrwvgOew5mSYiEIrabiIrWdRG7A7EbV4XhBz5G0uXUs8OL8Am7HmEFFMmIFpJRPArcBhz+JLgHcSUe2zQWTkM/ayk99n67Hmm7y0s6aVfAf0lgBcAzzj/PMqbATWlqzdjDUf5lULms86EAD3As96gBrAHcBbWglE8eXAHuA8z5o3gLuARk4xak0KAKSJqDpwNdBT1D9cFe8Hxt136iG3wENY02hV3fM6nlbyJ7AJ+NkDehEw1LNXnY41XznVWtk/QD/WHGjVIecFkOVVKzno6mHKE8TSNOW9mT2atwvSthVrRnznu7D3ayWjwO0lhdWdiHrMBXE/kKtMnsea+uzOc7nPLCi7gJzPILDV4/oHsFYrGebS+BxSPgcmgNXAsSJyrwK5lKTA465lF9nZwIuJqE7GzW/AGmAd1njJSxVoUuNi10Iv9LjtDwJWDHdLoypuWIE4U+JHYKzEfWmasmohc8FCFNgOPFmyZoNWsqv9qrh24igp1kz9LwWy3SeirndXto/8pb8m0lcBThxlO7C+igpByTEkEdUJjALne3A+JaVX3yiHieJeYDcwCazCmvGmC6s8gBx5DfgIuMFD/iuwWisZI4qXAN8Cp7r/DgIR1vxeFERRK84+dzryoj4/BfRrJWPBsngxsC9HDnAB8D5R3O7mhQWl4G7gBeAUz+63aSWDwbJ4UTrNLjdPtLJB4D6sSSsVYSLqSjdU+sjrTiHSaW7ykAMMzN6sTSqELSq+wwF3eABHgSdyU7J2vyJrB14hiruaUxE2FV3gxqoVHrAjwBat5EBuJPsb2AL85FnXAQwRxWflgwibim6H6+M+69dKvpwbNUwWxA/AbZ4HDsAVwOv5dfkU9AEbSsgf1krebXFasmBG3Kjmsx6i+MEsiMCBrQQ+cFNOke1x6kzOI/5v7685JQdKru81WPNJmIg61x0TH/n37shNevdmDW7uewr4uuT63kEUdwWJqJtd3z7uaTZ1rWRf5XfhTH4vA7Z5HqenAcM14GNgbwns8cK8+49qX8kFlv4LfFV/DJ8HVEEAAAAASUVORK5CYII="
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "encrypted": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Github.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the GitHub repository owner and the repository name.",
        "Documentation.DisplayName": "GitHub",
        "Documentation.Caption": "GitHub.Tables",
        "Documentation.Name": "GitHub",
        "Documentation.LongDescription": "Returns a table with relevant GitHub data."
      },
      "ReturnType": "table",
      "Parameters": {
        "RepositoryOwner": "text",
        "Repository": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HdInsight.Files",
      "Documentation": {
        "Documentation.Name": "HdInsight.Files",
        "Documentation.Description": "Devolve unha táboa que contén as propiedades e contidos dos BLOB atopados no contedor especificado dunha caixa forte de almacenamento de Azure.",
        "Documentation.LongDescription": "Devolve unha táboa que contén unha fila para cada ficheiro de BLOB atopado no URL do contedor, <code>account</code>, dunha caixa forte de almacenamento de Azure. Cada fila contén propiedades do ficheiro e unha ligazón ao seu contido.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "account": "text",
        "containerName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ApplySelectList",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "serviceRoot": "text",
        "inputSelectListTarget": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Html.Table",
      "Documentation": {
        "Documentation.Name": "Html.Table",
        "Documentation.Description": "Devolve unha táboa que contén os resultados de executar os selectores de CSS especificados no HTML proporcionado.",
        "Documentation.LongDescription": "Devolve unha táboa cos resultados da execución dos selectores de CSS especificados no <code>html</code> que se forneceu. Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>RowSelector</code></li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accedendo ao datos",
        "Documentation.Examples": [
          {
            "Description": "Devolve unha táboa dun valor de texto HTML de exemplo.",
            "Code": "Html.Table(\"<div class=\"\"name\"\">Jo</div><span>Xestor</span>\", {{\"Name\", \".name\"}, {\"Title\", \"span\"}}, [RowSelector=\".name\"])",
            "Result": "#táboa({\"Name\", \"Title\"}, {{\"Jo\", \"Manager\"}})"
          },
          {
            "Description": "Extrae todos os href dun valor de texto HTML de exemplo.",
            "Code": "Html.Table(\"<a href=\"\"/test.html\"\">Test</a>\", {{\"Link\", \"a\", each [Attributes][href]}})",
            "Result": "#table({\"Link\"}, {{\"/test.html\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "html": "any",
        "columnNameSelectorPairs": "list",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Indexima.Database",
      "Documentation": {
        "Documentation.Name": "Indexima v1.7.5",
        "Documentation.LongDescription": "Connection to Indexima Data Hub"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number",
        "ODBCdriver": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Informix.Database",
      "Documentation": {
        "Documentation.Name": "Informix.Database",
        "Documentation.Description": "Devolve unha táboa de táboas e vistas SQL dispoñibles nunha base de datos Informix.",
        "Documentation.LongDescription": "Devolve unha táboa de táboas e visualizacións SQL dispoñibles nunha base de datos Informix no servidor <code>server</code> na instancia de base de datos co nome <code>database</code>. O porto pódese especificar opcionalmente co servidor, separado con dous puntos. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], por exemplo.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "JethroODBC.Database",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MarkLogicODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MarkLogic ODBC (v3.0.2)",
        "Documentation.LongDescription": "Returns the list of tables returned from the ODBC driver",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "port": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Leads",
      "Documentation": {
        "Documentation.Name": "Marketo.Leads",
        "Documentation.DisplayName": "Marketo.Leads",
        "Documentation.Caption": "Marketo.Leads",
        "Documentation.Description": "Devolve unha táboa cos detalles dos clientes potenciais.",
        "Documentation.LongDescription": "Realiza unha chamada ao extremo da API de REST de Marketo en <code>url</code>/rest/v1/leads.json. Devólvense todos os clientes potenciais da lista <code>leadIds</code>.",
        "Documentation.Examples": [
          {
            "Description": "Extrae os detalles de tres clientes potenciais.",
            "Code": "Marketo.Leads(\"https://100-AAA-999.mktorest.com/rest\", {50, 2343, 88498})",
            "Result": "Unha táboa con detalles dos clientes potenciais fornecidos."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "leadIds": "list",
        "options": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Marketo.Tables",
      "Documentation": {
        "Documentation.Description": "Introduza o URL do extremo da API de REST de Marketo asociada á conta.",
        "Documentation.DisplayName": "Marketo",
        "Documentation.Caption": "Marketo.Tables",
        "Documentation.Name": "Marketo",
        "Documentation.LongDescription": "Devolve unha táboa con datos relevantes de Marketo."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "QueryStart": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MongoDBAtlasODBC.Contents",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "MySQL.Database",
      "Documentation": {
        "Documentation.Name": "MySQL.Database",
        "Documentation.Description": "Devolve unha táboa de táboas, vistas e funcións escalares almacenadas SQL dispoñibles nunha base de datos MySQL.",
        "Documentation.LongDescription": "Devolve unha táboa de táboas, visualizacións e funcións escalares almacenadas de SQL dispoñibles nunha base de datos MySQL no servidor <code>server</code> da instancia de base de datos co nome <code>database</code>. O porto pódese especificar opcionalmente co servidor, separado con dous puntos. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>Encoding</code> : Un valor TextEncoding que especifica o conxunto de caracteres usado para codificar todas as consultas enviadas ao servidor (o valor predefinido &#233; nulo).</li>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>TreatTinyAsBoolean</code> : Unha funci&#243;n l&#243;xica (true/false) que determina se forzar columnas tinyint no servidor como valores l&#243;xicos. O valor predefinido &#233; true.</li>\r\n<li><code>OldGuids</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se as columnas char(36) (se &#233; false) ou binary(16) (se &#233; true) se tratar&#225;n como GUID. O valor predefinido &#233; false.</li>\r\n<li><code>ReturnSingleDatabase</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se devolver todas as t&#225;boas de todas as bases de datos (se &#233; false) ou se devolver t&#225;boas e visualizaci&#243;ns da base de datos especificada (se &#233; true). O valor predefinido &#233; false.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], por exemplo.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Netezza.Database",
      "Documentation": {
        "Documentation.Name": "IBM Netezza",
        "Documentation.Caption": "IBM Netezza",
        "Documentation.Description": "Importa datos dunha base de datos de IBM Netezza.",
        "Documentation.LongDescription": "\r\nDevolve unha táboa de funcións almacenadas, visualizacións e táboas de Netezza da base de datos do servidor de Netezza <code>database</code> no servidor <code>server</code>. Opcionalmente, pode especificarse o porto co servidor, separado por dous puntos. Tamén se pode especificar outro parámetro de rexistro opcional, <code>options</code>, para controlar as seguintes opcións:\r\n<ul>\r\n        <li><code>CreateNavigationProperties</code>: unha lóxica (true/false) que establece se se xeran propiedades de navegación nos valores devoltos (o valor predefinido é true)</li>\r\n        <li><code>HierarchicalNavigation</code>: unha lóxica (true/false) que establece se se mostran as táboas agrupadas polos seus nomes de esquema (o valor predefinido é false)</li>\r\n        <li><code>ConnectionTimeout</code>: unha duración que controla durante canto tempo se agarda ata que se abandona o intento de conectarse ao servidor. O valor predefinido depende do controlador.</li>\r\n        <li><code>CommandTimeout</code>: unha duración que controla durante canto tempo se permite executar a consulta do lado do servidor antes de cancelarse. O valor predefinido depende do controlador.</li>\r\n<li><code>NormalizeDatabaseName</code>: unha lóxica (true/false) que establece se se organiza o nome da base de datos en maiúsculas ou se se interpreta literalmente (o valor predefinido é true).</li>\r\n</ul>\r\nO parámetro do rexistro especifícase como [option1 = value1, option2 = value2...].",
        "Documentation.Examples": [
          {
            "Description": "Enumera as táboas nun proxecto de IBM Netezza.",
            "Code": "Netezza.Database(\"netezza:5480\", \"netezza_database\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Odbc.Query",
      "Documentation": {
        "Documentation.Name": "Odbc.Query",
        "Documentation.Description": "Devolve o resultado de executar unha consulta nativa nunha orixe de datos ODBC.",
        "Documentation.LongDescription": "Devolve o resultado de executar <code>query</code> coa cadea de conexión <code>connectionString</code> mediante ODBC. <code>connectionString</code> pode ser texto ou un rexistro de pares de valores de propiedade. Os valores de propiedade poden ser texto ou números. Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os campos seguintes:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar unha tentativa de conexi&#243;n co servidor. O valor predefinido &#233; de 15&#160;segundos.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Unha l&#243;xica (true/false) que determina se producir opci&#243;ns de cadea de conexi&#243;n compatibles con SQL Server para a autenticaci&#243;n de Windows. O valor predefinido &#233; true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Devolve o resultado de executar una consulta sinxela fronte a cadea de conexión proporcionada.",
            "Code": "Odbc.Query(\"dsn=your_dsn\", \"select * from Customers\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "OleDb.Query",
      "Documentation": {
        "Documentation.Name": "OleDb.Query",
        "Documentation.Description": "Devolve o resultado de executar unha consulta nativa nunha orixe de datos OLE DB.",
        "Documentation.LongDescription": "Devolve o resultado de executar <code>query</code> coa cadea de conexión <code>connectionString</code> mediante OLE DB. <code>connectionString</code> pode ser texto ou un rexistro de pares de valores de propiedade. Os valores de propiedade poden ser texto ou números. Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Unha l&#243;xica (true/false) que determina se producir opci&#243;ns de cadea de conexi&#243;n compatibles con SQL Server para a autenticaci&#243;n de Windows. O valor predefinido &#233; true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PlanviewEnterprise.Feed",
      "Documentation": {
        "Documentation.Description": "Enter the URL and database name associated with your Planview Portfolios account.",
        "Documentation.DisplayName": "PlanviewEnterprise.Feed",
        "Documentation.Caption": "PlanviewEnterprise.Feed",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of Planview Portfolios information",
            "Code": "PlanviewEnterprise.Feed(\"https://contoso.com/planview\", \"pve\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "PostgreSQL.Database",
      "Documentation": {
        "Documentation.Name": "PostgreSQL.Database",
        "Documentation.Description": "Devolve unha táboa de táboas e vistas SQL dispoñibles nunha base de datos PostgreSQL.",
        "Documentation.LongDescription": "Devolve unha táboa de táboas e visualizacións SQL dispoñibles nunha base de datos PostgreSQL no servidor <code>server</code> na instancia de base de datos co nome <code>database</code>. O porto pódese especificar opcionalmente co servidor, separado con dous puntos. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], por exemplo.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SDMX.Contents",
      "Documentation": {
        "Documentation.Name": "SIS-CC SDMX Connector for SDMX-CSV web services",
        "Documentation.LongDescription": "Get data from an SDMX RESTful web service that supports the CSV format.",
        "Documentation.Examples": [
          {
            "Description": "Get data from an SDMX RESTful web service that supports the CSV format.",
            "Code": "SDMX.Contents(url,\"Show codes and labels\",\"en\")",
            "Result": "Data from the SDMX web service in a table format."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "Uri.Type",
        "Option": "text",
        "Language": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.DataSource",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Database",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SingleStoreODBC.Query",
      "Documentation": {
        "Documentation.Name": "SingleStore database",
        "Documentation.LongDescription": "The SingleStore Connector is a high-performance connector that lets you DirectQuery and import data from your SingleStore instance."
      },
      "ReturnType": "table",
      "Parameters": {
        "ServerAddr": "text",
        "Database": "text",
        "Query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Snowflake.Databases",
      "Documentation": {
        "Documentation.Name": "Snowflake",
        "Documentation.Caption": "Snowflake",
        "Documentation.Description": "Importa datos dun almacén de Snowflake Computing.",
        "Documentation.LongDescription": "Devolve unha táboa cunha lista de táboas no <code>almacén</code> de Snowflake Computing situado no <code>servidor</code>. Pode especificarse un parámetro de rexistro opcional, <code>opcións</code>, para controlar as seguintes opcións:\r\n<ul>\r\n<li><code>Función</code>: valor de texto que se usará como nome da función para a conexión.</li>\r\n<li><code>CreateNavigationProperties</code>: valor lóxico (verdadeiro ou falso) que establece se se xerarán propiedades de navegación nos valores devoltos (o valor predefinido é verdadeiro).</li>\r\n<li><code>ConnectionTimeout</code>: número de segundos que se debe esperar polas respostas de rede de Snowflake.</li>\r\n<li><code>CommandTimeout</code>: número de segundos que se debe esperar para que se execute a consulta.</li>\r\n</ul>\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Enumera as táboas nun almacén de Snowflake.",
            "Code": "Snowflake.Databases(\"contoso.snowflakecomputing.com\", \"CONTOSO_WH\")"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "warehouse": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Spark.Tables",
      "Documentation": {
        "Documentation.Name": "Spark.Tables",
        "Documentation.Caption": "Spark",
        "Documentation.Description": "Devolve unha táboa que enumera as táboas do clúster Spark especificado.",
        "Documentation.LongDescription": "Devolve unha táboa que enumera as táboas do <code>host</code> do clúster Spark mediante o uso de <code>protocol</code>. Os protocolos válidos son:\r\nSparkProtocol.Standard, SparkProtocol.Azure, SparkProtocol.HTTP",
        "Documentation.Examples": [
          {
            "Description": "Enumere as táboas dunha instancia de Azure Spark.",
            "Code": "Spark.Tables(\"contoso.azurehdinsight.net\", SparkProtocol.Azure)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "protocol": "SparkProtocol.Type",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sql.Database",
      "Documentation": {
        "Documentation.Name": "Sql.Database",
        "Documentation.Description": "Devolve unha táboa de táboas, vistas e funcións almacenadas de SQL dunha base de datos SQL Server.",
        "Documentation.LongDescription": "Devolve unha táboa de táboas, visualizacións e funcións almacenadas de SQL dunha base de datos SQL Server <code>database</code> no servidor <code>server</code>. O porto pódese especificar opcionalmente co servidor, separado con dous puntos. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>MaxDegreeOfParallelism</code> : Un n&#250;mero que establece o valor da cl&#225;usula de consulta &quot;maxdop&quot; na consulta SQL xerada.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n<li><code>MultiSubnetFailover</code> : Unha funci&#243;n l&#243;xica (true/false) que establece o valor da propiedade &quot;MultiSubnetFailover&quot; na cadea de conexi&#243;n (o valor predefinido &#233; false).</li>\r\n<li><code>UnsafeTypeConversions</code> : Valor l&#243;xico (verdadeiro/falso) que, se &#233; verdadeiro, tenta dobrar conversi&#243;ns de tipo que poder&#237;an producir un erro e provocar que toda a consulta falle. Non se recomenda para uso xeral.</li>\r\n<li><code>ContextInfo</code> : Un valor binario que se usa para configurar CONTEXT_INFO antes de executar cada comando.</li>\r\n<li><code>OmitSRID</code> : Valor l&#243;xico (verdadeiro/falso) que, se &#233; verdadeiro, omite o SRID ao producir Well-Known Text a partir de tipos de xeometr&#237;a e xeograf&#237;a.</li>\r\n<li><code>EnableCrossDatabaseFolding</code> : Un valor l&#243;xico (verdadeiro/falso) que, se &#233; verdadeiro, permite a delegaci&#243;n de consultas en todas as bases de datos no mesmo servidor. O valor predefinido &#233; falso.</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], por exemplo.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "StarburstPresto.Contents",
      "Documentation": {
        "Documentation.Name": "Starburst Enterprise"
      },
      "ReturnType": "table",
      "Parameters": {
        "Host": "text",
        "Port": "number",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Sybase.Database",
      "Documentation": {
        "Documentation.Name": "Sybase.Database",
        "Documentation.Description": "Devolve unha táboa de táboas e vistas SQL dispoñibles nunha base de datos Sybase.",
        "Documentation.LongDescription": "Devolve unha táboa de táboas e visualizacións SQL dispoñibles nunha base de datos Sybase no servidor <code>server</code> na instancia de base de datos co nome <code>database</code>. O porto pódese especificar opcionalmente co servidor, separado con dous puntos. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; true).</li>\r\n<li><code>NavigationPropertyNameGenerator</code> : Unha funci&#243;n que se usa para crear nomes de propiedades de navegaci&#243;n.</li>\r\n<li><code>Query</code> : Unha consulta SQL nativa usada para recuperar datos. Se a consulta produce varios conxuntos de resultados, s&#243; se devolver&#225; o primeiro.</li>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>ConnectionTimeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar un intento de conexi&#243;n co servidor. O valor predefinido depende do controlador.</li>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n</ul>\r\n\r\n    O parámetro de rexistro especifícase como [option1 = value1, option2 = value2...] ou [Query = \"select ...\"], por exemplo.\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.AddIndexColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddIndexColumn",
        "Documentation.Description": "Anexa unha columna con valores de posición explícitos.",
        "Documentation.LongDescription": "Anexa unha columna co nome <code>newColumnName</code> á <code>table</code> con valores de posición explícitos.\r\n    Un valor opcional, <code>initialValue</code>, é o valor de índice inicial. Un valor opcional, <code>increment</code>, especifica como se vai incrementar cada valor de índice.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Engadir unha columna de índice co nome \"Index\" á táboa.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 0],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 2],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 3]\r\n})"
          },
          {
            "Description": "Engadir unha columna de índice co nome \"Index\", comezando polo valor 10 e incrementándose en 5, á táboa.",
            "Code": "Table.AddIndexColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Index\",\r\n    10,\r\n    5\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Index = 10],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Index = 15],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", Index = 20],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\", Index = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "initialValue": "number",
        "increment": "number",
        "columnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ConformToPageReader",
      "Documentation": {
        "Documentation.Name": "Table.ConformToPageReader",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "shapingFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ExpandListColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandListColumn",
        "Documentation.Description": "Dada unha columna de listas nunha táboa, crear unha copia dunha fila para cada valor da lista.",
        "Documentation.LongDescription": "Dada unha <code>table</code>, onde unha <code>column</code> é unha lista de valores, divide a lista nunha fila para cada valor da lista. Os valores das outras columnas duplícanse en cada nova fila creada.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Dividir a columna da lista [Name] na táboa.",
            "Code": "Table.ExpandListColumn(\r\n    Table.FromRecords({[Name = {\"Bob\", \"Jim\", \"Paul\"}, Discount = .15]}),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\", Discount = 0.15],\r\n    [Name = \"Jim\", Discount = 0.15],\r\n    [Name = \"Paul\", Discount = 0.15]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillDown",
      "Documentation": {
        "Documentation.Name": "Table.FillDown",
        "Documentation.Description": "Propaga o valor dunha cela anterior ás celas co valor nulo máis abaixo na columna.",
        "Documentation.LongDescription": "Devolve unha táboa da <code>table</code> especificada onde o valor da cela anterior se propaga ás celas co valor nulo máis abaixo na <code>columns</code> especificada.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Devolver unha táboa con valores nulos na columna [Place] enchida co valor que está enriba delas da táboa.",
            "Code": "Table.FillDown(\r\n    Table.FromRecords({\r\n        [Place = 1, Name = \"Bob\"],\r\n        [Place = null, Name = \"John\"],\r\n        [Place = 2, Name = \"Brad\"],\r\n        [Place = 3, Name = \"Mark\"],\r\n        [Place = null, Name = \"Tom\"],\r\n        [Place = null, Name = \"Adam\"]\r\n    }),\r\n    {\"Place\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Place = 1, Name = \"Bob\"],\r\n    [Place = 1, Name = \"John\"],\r\n    [Place = 2, Name = \"Brad\"],\r\n    [Place = 3, Name = \"Mark\"],\r\n    [Place = 3, Name = \"Tom\"],\r\n    [Place = 3, Name = \"Adam\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FillUp",
      "Documentation": {
        "Documentation.Name": "Table.FillUp",
        "Documentation.Description": "Propaga o valor dunha cela ás celas co valor nulo máis arriba na columna.",
        "Documentation.LongDescription": "Devolve unha táboa da <code>table</code> especificada onde o valor da cela seguinte se propaga ás celas co valor nulo máis arriba na <code>columns</code> especificada.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Devolver unha táboa con valores nulos na columna [Column2] enchida co valor que está abaixo delas da táboa.",
            "Code": "Table.FillUp(\r\n    Table.FromRecords({\r\n        [Column1 = 1, Column2 = 2],\r\n        [Column1 = 3, Column2 = null],\r\n        [Column1 = 5, Column2 = 3]\r\n    }),\r\n    {\"Column2\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1, Column2 = 2],\r\n    [Column1 = 3, Column2 = 3],\r\n    [Column1 = 5, Column2 = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FindText",
      "Documentation": {
        "Documentation.Name": "Table.FindText",
        "Documentation.Description": "Devolve todas as filas que conteñen o texto indicado na táboa.",
        "Documentation.LongDescription": "Devolve todas as filas da táboa <code>table</code> que conteñen o texto <code>text</code>. Se o texto non se localiza, devólvese unha táboa baleira.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar as filas da táboa que conteñen \"Bob\".",
            "Code": "Table.FindText(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Bob\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FirstN",
      "Documentation": {
        "Documentation.Name": "Table.FirstN",
        "Documentation.Description": "Devolve a primeira conta das filas especificadas.",
        "Documentation.LongDescription": "Devolve a(s) primeira(s) fila(s) da táboa <code>table</code>, dependendo do valor de <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Se <code>countOrCondition</code> é un número, ese número de filas (comezando no principio) vaise devolver. </li>\r\n    <li> Se <code>countOrCondition</code> é unha condición, devolveranse as filas que cumpren a condición ata a fila que non a cumpre.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar as dúas primeiras filas da táboa.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Buscar as primeiras filas onde [a] > 0 na táboa.",
            "Code": "Table.FirstN(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = -5, b = -6]\r\n    }),\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2],\r\n    [a = 3, b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FromPartitions",
      "Documentation": {
        "Documentation.Name": "Table.FromPartitions",
        "Documentation.Description": "Devolve unha táboa que é o resultado de combinar un conxunto de táboas particionadas.",
        "Documentation.LongDescription": "Devolve unha táboa que é o resultado de combinar un conxunto de táboas particionadas, <code>partitions</code>. <code>partitionColumn</code> é o nome da columna a engadir. O tipo de columna establécese por defecto en <code>calquera</code>, pero pode especificarse mediante <code>partitionColumnType</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Busque o tipo de elemento da lista <code>{number}</code>.",
            "Code": "Table.FromPartitions(\r\n    \"Year\",\r\n    {\r\n        {\r\n            1994,\r\n            Table.FromPartitions(\r\n                \"Month\",\r\n                {\r\n                    {\r\n                        \"Jan\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {1, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {2, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    },\r\n                    {\r\n                        \"Feb\",\r\n                        Table.FromPartitions(\r\n                            \"Day\",\r\n                            {\r\n                                {3, #table({\"Foo\"}, {{\"Bar\"}})},\r\n                                {4, #table({\"Foo\"}, {{\"Bar\"}})}\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 1,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 2,\r\n        Month = \"Jan\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 3,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ],\r\n    [\r\n        Foo = \"Bar\",\r\n        Day = 4,\r\n        Month = \"Feb\",\r\n        Year = 1994\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "partitionColumn": "text",
        "partitions": "list",
        "partitionColumnType": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.LastN",
      "Documentation": {
        "Documentation.Name": "Table.LastN",
        "Documentation.Description": "Devolve o último número especificado de filas.",
        "Documentation.LongDescription": "Devolve a(s) última(s) fila(s) da táboa, <code>table</code>, dependendo do valor de <code>countOrCondition</code>:\r\n    <ul>\r\n    <li> Se <code>countOrCondition</code> é un número, devolverase ese número de filas comezando na posición (final - <code>countOrCondition</code>). </li>\r\n    <li> Se <code>countOrCondition</code> é unha condición, devolveranse as filas que cumpren a condición en posición ascendente ata a fila que non a cumpre.</li>\r\n</ul>",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar as dúas últimas filas da táboa.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          },
          {
            "Description": "Buscar as últimas filas onde [a] > 0 na táboa.",
            "Code": "Table.LastN(\r\n    Table.FromRecords({\r\n        [a = -1, b = -2],\r\n        [a = 3, b = 4],\r\n        [a = 5, b = 6]\r\n    }),\r\n    each _ [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 3, b = 4],\r\n    [a = 5, b = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PrefixColumns",
      "Documentation": {
        "Documentation.Name": "Table.PrefixColumns",
        "Documentation.Description": "Devolve unha táboa onde todas as columnas se prefixaron co texto indicado.",
        "Documentation.LongDescription": "Devolve unha táboa onde todos os nomes das columnas da <code>table</code> fornecida prefíxanse co texto indicado, <code>prefix</code>, máis un punto na forma <code><code>prefix</code>.ColumnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Prefixar as columnas con \"MyTable\" na táboa.",
            "Code": "Table.PrefixColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"MyTable\"\r\n)",
            "Result": "Table.FromRecords({[MyTable.CustomerID = 1, MyTable.Name = \"Bob\", MyTable.Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "prefix": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Range",
      "Documentation": {
        "Documentation.Name": "Table.Range",
        "Documentation.Description": "Devolve as filas que comezan no desprazamento especificado.",
        "Documentation.LongDescription": "Devolve as filas que de <code>table</code> que comezan no <code>offset</code> especificado. Un parámetro opcional, <code>count</code>, especifica o número de filas que se van devolver. Por defecto, devólvense todas as filas despois do desprazamento.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Devolver todas as filas comezando no desprazamento 1 da táboa.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Devolver unha fila comezando no desprazamento 1 da táboa.",
            "Code": "Table.Range(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveColumns",
      "Documentation": {
        "Documentation.Name": "Table.RemoveColumns",
        "Documentation.Description": "Elimina as columnas especificadas.",
        "Documentation.LongDescription": "Elimina as <code>columns</code> especificadas do <code>table</code> fornecido.\r\n    Se a columna especificada non existe, aparece un erro a menos que o parámetro opcional <code>missingField</code> especifique un comportamento alternativo (por exemplo, <code>MissingField.UseNull</code> ou <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Eliminar a columna [Phone] da táboa.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Phone\"\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Tenta eliminar unha columna inexistente da táboa.",
            "Code": "Table.RemoveColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"Address\"\r\n)",
            "Result": "[Expression.Error] The column 'Address' of the table wasn't found."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveMatchingRows",
        "Documentation.Description": "Elimina todas as ocorrencias das filas especificadas da táboa.",
        "Documentation.LongDescription": "Elimina todas as ocorrencias das <code>rows</code> especificadas da <code>table</code>.\r\n    Pódese especificar un parámetro opcional <code>equationCriteria</code> para controlar a comparación entre as filas da táboa.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Eliminar as filas onde [a = 1] da táboa <code>({[a = 1, b = 2], [a = 3, b = 4], [a = 1, b = 6]})</code>.",
            "Code": "Table.RemoveMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 6]\r\n    }),\r\n    {[a = 1]},\r\n    \"a\"\r\n)",
            "Result": "Table.FromRecords({[a = 3, b = 4]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RemoveRows",
      "Documentation": {
        "Documentation.Name": "Table.RemoveRows",
        "Documentation.Description": "Elimina o número de filas especificado.",
        "Documentation.LongDescription": "Elimina <code>count</code> de filas desde o inicio da <code>table</code>, comezando na <code>offset</code> especificada. Utilízase unha conta predefinida de 1 se non se fornece o parámetro <code>count</code>. ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Eliminar a primeira fila da táboa.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    0\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Eliminar a fila na posición 1 da táboa.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Eliminar dúas filas comezando na posición 1 da táboa.",
            "Code": "Table.RemoveRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    1,\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.RenameColumns",
      "Documentation": {
        "Documentation.Name": "Table.RenameColumns",
        "Documentation.Description": "Aplica o(s) renomeamento(s) no formato {old, new}.",
        "Documentation.LongDescription": "Realiza os renomeamentos indicados ás columnas da táboa <code>table</code>. Unha operación de substitución <code>renames</code> consta dunha lista de dous valores, o valor de nome de columna antigo e o valor de nome de columna novo, fornecidos nunha lista.\r\n    Se a columna non existe, xérase unha excepción a non ser que o parámetro opcional <code>missingField</code> especifique unha alternativa (por exemplo, <code>MissingField.UseNull</code> ou <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Substituír o nome de columna \"CustomerNum\" por \"CustomerID\" na táboa.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerNum\", \"CustomerID\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Substituír o nome de columna \"CustomerNum\" por \"CustomerID\" e \"PhoneNum\" por \"Phone\" na táboa.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerNum = 1, Name = \"Bob\", PhoneNum = \"123-4567\"]}),\r\n    {\r\n        {\"CustomerNum\", \"CustomerID\"},\r\n        {\"PhoneNum\", \"Phone\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Substituír o nome de columna \"NewCol\" por \"NewColumn\" na táboa e ignorar se a columna non existe.",
            "Code": "Table.RenameColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"NewCol\", \"NewColumn\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReorderColumns",
      "Documentation": {
        "Documentation.Name": "Table.ReorderColumns",
        "Documentation.Description": "Devolve unha táboa coas columnas na orde especificada.",
        "Documentation.LongDescription": "Devolve unha táboa da <code>table</code> de entrada, coas columnas na orde especificada por <code>columnOrder</code>. As columnas que non se especifiquen na lista non se reordenarán.\r\n     Se a columna non existe, xérase unha excepción a non ser que o parámetro opcional <code>missingField</code> especifique unha alternativa (por exemplo, <code>MissingField.UseNull</code> ou <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Mudar a orde das columnas [Phone] e [Name] na táboa.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Phone = \"123-4567\", Name = \"Bob\"]}),\r\n    {\"Name\", \"Phone\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          },
          {
            "Description": "Mudar a orde das columnas [Phone] e [Address] ou utilizar \"MissingField.Ignore\" na táboa. Non modifica a táboa debido a que a columna [Address] non existe.",
            "Code": "Table.ReorderColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"Phone\", \"Address\"},\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Repeat",
      "Documentation": {
        "Documentation.Name": "Table.Repeat",
        "Documentation.Description": "Repite as filas das táboas un número de veces especificado.",
        "Documentation.LongDescription": "Devolve unha táboa coas filas da <code>table</code> de entrada repetidas as <code>count</code> veces especificadas.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Repetir as filas da táboa dúas veces.",
            "Code": "Table.Repeat(\r\n    Table.FromRecords({\r\n        [a = 1, b = \"hello\"],\r\n        [a = 3, b = \"world\"]\r\n    }),\r\n    2\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"],\r\n    [a = 1, b = \"hello\"],\r\n    [a = 3, b = \"world\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceErrorValues",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceErrorValues",
        "Documentation.Description": "Substitúe os valores de erro das columnas especificadas polo valor especificado correspondente.",
        "Documentation.LongDescription": "Substitúe os valores de erro das columnas especificadas de <code>table</code> polos novos valores da lista <code>errorReplacement</code>. O formato da lista é {{column1, value1}, …}. É posible que só exista un valor de substitución por columna, e a especificación da columna máis dunha vez provocará un erro.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Subtituír o valor do erro polo texto \"mundo\" na táboa.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{1, \"hello\"}, {3, ...}}, {\"A\", \"B\"}),\r\n    {\"B\", \"world\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 3, B = \"world\"]\r\n})"
          },
          {
            "Description": "Subtituír o valor de erro da columna A polo texto \"ola\" e na columna B polo texto \"mundo\" na táboa.",
            "Code": "Table.ReplaceErrorValues(\r\n    Table.FromRows({{..., ...}, {1, 2}}, {\"A\", \"B\"}),\r\n    {{\"A\", \"hello\"}, {\"B\", \"world\"}}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"hello\", B = \"world\"],\r\n    [A = 1, B = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "errorReplacement": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceKeys",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceKeys",
        "Documentation.Description": "Substitúe as claves da táboa especificada.",
        "Documentation.LongDescription": "Substitúe as claves da táboa especificada.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Substitúe as claves existentes dunha táboa.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    resultTable = Table.ReplaceKeys(tableWithKeys, {[Columns = {\"Id\"}, Primary = false]})\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceMatchingRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceMatchingRows",
        "Documentation.Description": "Substitúe todas as filas especificadas coa(s) fila(s) fornecida(s).",
        "Documentation.LongDescription": "Substitúe todas as filas especificadas en <code>table</code> coas fornecidas. As filas que se van substituír e as substitucións especifícanse en <code>replacements</code>, usando o formato {old, new}.\r\n    Pódese especificar un parámetro opcional <code>equationCriteria</code> para controlar a comparación entre as filas da táboa.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Substituír as filas [a = 1, b = 2] e [a = 2, b = 3] por [a = -1, b = -2],[a = -2, b = -3] na táboa.",
            "Code": "Table.ReplaceMatchingRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 2, b = 3],\r\n        [a = 3, b = 4],\r\n        [a = 1, b = 2]\r\n    }),\r\n    {\r\n        {[a = 1, b = 2], [a = -1, b = -2]},\r\n        {[a = 2, b = 3], [a = -2, b = -3]}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = -1, b = -2],\r\n    [a = -2, b = -3],\r\n    [a = 3, b = 4],\r\n    [a = -1, b = -2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectColumns",
      "Documentation": {
        "Documentation.Name": "Table.SelectColumns",
        "Documentation.Description": "Devolve unha táboa só coas columnas especificadas.",
        "Documentation.LongDescription": "Devolve a <code>table</code> só coas <code>columns</code> especificadas.\r\n    <ul>\r\n       <li><code>table</code>: a táboa fornecida.</li>\r\n       <li><code>columns</code>: a lista de columnas da táboa <code>table</code> que se van devolver. As columnas na táboa devolta están na orde indicada en <code>columns</code>.</li>\r\n       <li><code>missingField</code>: <i>(opcional)</i> o que se vai facer se a columna non existe.  Exemplo: <code>MissingField.UseNull</code> ou <code>MissingField.Ignore</code>.\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Incluír só a columna [Name].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"Bob\"],\r\n    [Name = \"Jim\"],\r\n    [Name = \"Paul\"],\r\n    [Name = \"Ringo\"]\r\n})"
          },
          {
            "Description": "Incluír só as columnas [CustomerID] e [Name].",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"Name\"}\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\"]})"
          },
          {
            "Description": "Se a columna incluída non existe, o resultado predefinido é un erro.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    \"NewColumn\"\r\n)",
            "Result": "[Expression.Error] The field 'NewColumn' of the record wasn't found."
          },
          {
            "Description": "Se a columna incluída non existe, a opción <code>MissingField.UseNull</code> crea unha columna de valores nulos.",
            "Code": "Table.SelectColumns(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    {\"CustomerID\", \"NewColumn\"},\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, NewColumn = null]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SelectRows",
      "Documentation": {
        "Documentation.Name": "Table.SelectRows",
        "Documentation.Description": "Selecciona as filas que cumpren á función da condición.",
        "Documentation.LongDescription": "Devolve unha táboa de filas da <code>table</code> que coinciden coa selección <code>condition</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Seleccione as filas da táboa onde os valores da columna [CustomerID] son superiores a 2.",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each [CustomerID] > 2\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          },
          {
            "Description": "Seleccione as filas da táboa onde os nomes non conteñen un \"B\".",
            "Code": "Table.SelectRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    each not Text.Contains([Name], \"B\")\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Sort",
      "Documentation": {
        "Documentation.Name": "Table.Sort",
        "Documentation.Description": "Ordena a táboa utilizando un ou máis nomes de columnas e criterios de comparación.",
        "Documentation.LongDescription": "Ordena a <code>table</code> utilizando a lista dun ou máis nomes de columnas e <code>comparisonCriteria</code> opcionais na forma { { col1, comparisonCriteria }, {col2} }.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Ordene a táboa pola columna \"OrderID\".",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          },
          {
            "Description": "Ordene a táboa pola columna \"OrderID\" en orde descendente.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\"OrderID\", Order.Descending}\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]\r\n})"
          },
          {
            "Description": "Ordene a táboa pola columna \"CustomerID\" e logo a \"OrderID\", coa \"CustomerID\" en orde ascendente.",
            "Code": "Table.Sort(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n        [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100.0],\r\n        [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    {\r\n        {\"CustomerID\", Order.Ascending},\r\n        \"OrderID\"\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5],\r\n    [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25],\r\n    [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200],\r\n    [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2],\r\n    [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25],\r\n    [OrderID = 8, CustomerID = 5, Item = \"Fishing Rod\", Price = 100],\r\n    [OrderID = 9, CustomerID = 6, Item = \"Bait\", Price = 3.25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnNames",
        "Documentation.Description": "Transforma os nomes das columnas mediante a función fornecida.",
        "Documentation.LongDescription": "Transforma os nomes das columnas mediante a función <code>nameGenerator</code> fornecida. Opcións válidas:\r\n    <div>\r\n      <code>MaxLength</code>: especifica a lonxitude máxima dos nomes de columna novos. Se a función fornecida é máis longa que o nome de columna, o nome recortarase.\r\n    </div>\r\n    <div>\r\n      <code>Comparer</code>: úsase para controlar a comparación ao mesmo tempo que se xeran nomes de columna novos. Os comparadores poden usarse para comparacións que non diferencian maiúsculas de minúsculas ou que recoñecen referencias culturais e a configuración rexional.\r\n    </div>\r\n    <div>\r\n      Os seguintes comparadores incorporados están dispoñibles na linguaxe da fórmula:\r\n    </div>\r\n    <ul>\r\n      <li><code>Comparer.Ordinal</code>: úsase para realizar unha comparación ordinal exacta</li>\r\n      <li><code>Comparer.OrdinalIgnoreCase</code>: úsase para realizar unha comparación ordinal exacta que non diferencie maiúsculas de minúsculas</li>\r\n      <li> <code>Comparer.FromCulture</code>: úsase para realizar unha comparación de recoñecemento de referencias culturais</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Elimine o carácter <code>#(tab)</code> dos nomes de columna",
            "Code": "Table.TransformColumnNames(Table.FromRecords({[#\"Col#(tab)umn\" = 1]}), Text.Clean)",
            "Result": "Table.FromRecords({[Column = 1]})"
          },
          {
            "Description": "Transforma os nomes das columnas para xerar nomes que non diferencian maiúsculas de minúsculas de lonxitude 6.",
            "Code": "Table.TransformColumnNames(\r\n    Table.FromRecords({[ColumnNum = 1, cOlumnnum = 2, coLumnNUM = 3]}),\r\n    Text.Clean,\r\n    [MaxLength = 6, Comparer = Comparer.OrdinalIgnoreCase]\r\n)",
            "Result": "Table.FromRecords({[Column = 1, cOlum1 = 2, coLum2 = 3]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "nameGenerator": "function",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumnTypes",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumnTypes",
        "Documentation.Description": "Aplica transformación(s) de tipo da forma { column, type } usando unha referencia cultural específica.",
        "Documentation.LongDescription": "Devolve unha táboa da entrada <code>table</code> mediante a aplicación da operación de transformación ás columnas especificadas no parámetro <code>typeTransformations</code> (onde o formato é { column name, type name}) coa referencia cultural especificada no parámetro <code>culture</code> opcional (por exemplo, \"gl-ES\").\r\n    Se a columna non existe, xérase unha excepción.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Transformar os valores de número na columna [a] a valores de texto da táboa <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.TransformColumnTypes(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\"a\", type text},\r\n    \"en-US\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = \"1\", b = 2],\r\n    [a = \"3\", b = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "typeTransformations": "list",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformColumns",
      "Documentation": {
        "Documentation.Name": "Table.TransformColumns",
        "Documentation.Description": "Transforma os valores dunha ou máis columnas.",
        "Documentation.LongDescription": "Transforma <code>table</code> aplicando cada operación de columna indicada en <code>transformOperations</code> (onde o formato é { column name, transformation } ou { column name, transformation, new column type }).\r\n    Se se especifica unha <code>defaultTransformation</code>, aplicarase a todas as columnas non listadas en <code>transformOperations</code>.\r\n    Se non existe unha columna listada en <code>transformOperations</code>, lánzase unha excepción a menos que o parámetro opcional <code>missingField</code> especifique unha alternativa (por exemplo, <code>MissingField.UseNull</code> ou <code>MissingField.Ignore</code>).",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Converte os valores de texto da columna [A] en valores numéricos e os valores numéricos da columna [B] en valores de texto.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\r\n        {\"A\", Number.FromText},\r\n        {\"B\", Text.From}\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"2\"],\r\n    [A = 5, B = \"10\"]\r\n})"
          },
          {
            "Description": "Converte os valores numéricos da columna [X] que falta en valores de texto, ignorando as columnas que non existen.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.Ignore\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2],\r\n    [A = \"5\", B = 10]\r\n})"
          },
          {
            "Description": "Converte os valores numéricos da columna [X] que falta en valores de texto, sendo nulo por defecto nas columnas que non existen.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"X\", Number.FromText},\r\n    null,\r\n    MissingField.UseNull\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = \"1\", B = 2, X = null],\r\n    [A = \"5\", B = 10, X = null]\r\n})"
          },
          {
            "Description": "Incrementa os valores numéricos da columna [B] e convérteos en valores de texto e converte as demais columnas en números.",
            "Code": "Table.TransformColumns(\r\n    Table.FromRecords({\r\n        [A = \"1\", B = 2],\r\n        [A = \"5\", B = 10]\r\n    }),\r\n    {\"B\", each Text.From(_ + 1), type text},\r\n    Number.FromText\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"3\"],\r\n    [A = 5, B = \"11\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "transformOperations": "list",
        "defaultTransformation": "function",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.View",
      "Documentation": {
        "Documentation.Name": "Table.View",
        "Documentation.Description": "Crea ou amplía unha táboa con controladores definidos polo usuario para operacións de consulta e acción.",
        "Documentation.LongDescription": "<p>Devolve unha vista de <code>table</code> na que as funcións especificadas en <code>handlers</code> se usan en lugar do comportamento predefinido dunha operación cando esta se aplica á vista.</p>\r\n<p>Se se fornece <code>table</code>, todas as demais funcións do controlador son opcionais. Se <code>table</code> non se fornece, precísanse as funcións dos controladores <code>GetType</code> e <code>GetRows</code>. Se non se especifica unha función de controlador para unha operación, aplicarase o comportamento predefinido da operación a <code>table</code> no seu lugar (excepto no caso de <code>GetExpression</code>).</p>\r\n<p>As funcións do controlador deben devolver un valor equivalente semanticamente ao resultado de aplicar a operación en <code>table</code> (ou a vista resultante no caso de <code>GetExpression</code>).</p>\r\n<p>Se unha función de controlador provoca un erro, o comportamento predefinido da operación aplícase á vista.</p>\r\n<p><code>Table.View</code> pode usarse para implantar o pregamento a unha orixe de datos: a tradución de consultas M en consultas específicas de orixe (por exemplo, para crear declaracións T-SQL a partir de consultas M).</p>\r\n<p>Consulta a documentación publicada para obter unha descrición máis completa de <code>Table.View</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Crea unha visualización básica que non precise ter acceso ás filas para descubrir o tipo ou reconto das filas.",
            "Code": "Table.View(\r\n    null,\r\n    [\r\n        GetType = () => type table [CustomerID = number, Name = text, Phone = nullable text],\r\n        GetRows = () => Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n        GetRowCount = () => 1\r\n    ]\r\n)",
            "Result": "Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Troux.CustomFeed",
      "Documentation": {
        "Documentation.Description": "Enter the URL of your Planview Enterprise Architecture account and a query.",
        "Documentation.DisplayName": "Planview Enterprise Architecture",
        "Documentation.Caption": "Planview Enterprise Architecture",
        "Documentation.Name": "Planview Enterprise Architecture",
        "Documentation.LongDescription": "Returns a table with relevant Planview Enterprise Architecture data specified by the query."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "query": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "VSTS.AnalyticsViews",
      "Documentation": {
        "Documentation.Description": "Indique os nomes da organización e do proxecto.",
        "Documentation.DisplayName": "VSTS.AnalyticsViews",
        "Documentation.Caption": "VSTS.AnalyticsViews",
        "Documentation.Name": "Azure DevOps (só Boards)",
        "Documentation.LongDescription": "Devolve unha táboa de visualizacións de Analytics proporcionada por Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Vertica.Database",
      "Documentation": {
        "Documentation.Name": "Vertica",
        "Documentation.Caption": "Vertica",
        "Documentation.Description": "Importa datos de Vertica",
        "Documentation.LongDescription": "Devolve unha táboa dos esquemas dispoñibles no servidor denominado mediante o parámetro <code>server</code> na base de datos denominada polo parámetro <code>database</code>.\r\nÉ posible fornecer un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. Este rexistro pode conter os seguintes campos:\r\n<ul>\r\n    <li><code>ConnectionTimeout</code>: duración que controla o período que hai que agardar antes de abandonar unha tentativa de establecemento de conexión co servidor. O valor predefinido depende do controlador.</li>\r\n    <li><code>CommandTimeout </code>: duración que controla o período no que se permite executar a consulta do lado servidor antes de cancelala. O valor predefinido depende do controlador.</li>\r\n</ul>",
        "Documentation.Examples": [
          {
            "Description": "Enumera as táboas en Vertica"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Webtrends.ReportContents",
      "Documentation": {
        "Documentation.Description": "Devolve unha táboa con contido de informes de Webtrends.",
        "Documentation.DisplayName": "Webtrends.ReportContents",
        "Documentation.Caption": "Webtrends.ReportContents",
        "Documentation.Name": "Webtrends.ReportContents",
        "Documentation.LongDescription": "Realiza unha chamada ao extremo de informes de Webtrends atribuído e devolve todos os datos como unha táboa.",
        "Documentation.Examples": [
          {
            "Description": "Realiza unha chamada ao extremo do informe de visitantes de Webtrends para obter datos dos últimos 30 días",
            "Code": "Webtrends.ReportContents(\"98765\", \"xPcmTDDP0P6\")",
            "Result": "Unha táboa de datos dos visitantes"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "ReportId": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zucchetti.Contents",
      "Documentation": {
        "Documentation.Name": "Zucchetti HR Infinity",
        "Documentation.LongDescription": "Returns contents of VisualQueries (vqr), reports or functions published by the Zucchetti HR software",
        "Documentation.Examples": [
          {
            "Description": "Request for employees list",
            "Code": "    Zucchetti.Contents(\"https://myurl/HRPortal/\", \"001\"),\n    ERM = Origine{[idproced=\"ERM\"]}[Data],\n    ERM_query_pbi_employee = ERM{[id=\"ERM_query_pbi_employee\"]}[Data]",
            "Result": "    Table containing employee list"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "Url": "text",
        "Environment": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "ActiveDirectory.Domains",
      "Documentation": {
        "Documentation.Name": "ActiveDirectory.Domains",
        "Documentation.Description": "Devolve unha lista de dominios de Servizos de dominio de Active Directory na mesma foresta que o dominio especificado ou do dominio da computadora actual se non se especifica ningún.",
        "Documentation.LongDescription": "Devolve unha lista de dominios de Servizos de dominio de Active Directory na mesma foresta que o dominio especificado ou do dominio da computadora actual se non se especifica ningún.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "forestRootDomainName": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AdoDotNet.Query",
      "Documentation": {
        "Documentation.Name": "AdoDotNet.Query",
        "Documentation.Description": "Devolve o resultado de executar unha consulta nativa nunha orixe de datos ADO.NET.",
        "Documentation.LongDescription": "Devolve o resultado de executar <code>query</code> coa cadea de conexión <code>connectionString</code> mediante o fornecedor de ADO.NET <code>providerName</code>. <code>connectionString</code> pode ser un texto ou un rexistro de pares de valores de propiedade. Os valores de propiedade poden ser texto ou números. Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>CommandTimeout</code> : Duraci&#243;n que controla o tempo que pode executarse a consulta no servidor antes de que se cancele. O valor predefinido &#233; de dez minutos.</li>\r\n<li><code>SqlCompatibleWindowsAuth</code> : Unha l&#243;xica (true/false) que determina se producir opci&#243;ns de cadea de conexi&#243;n compatibles con SQL Server para a autenticaci&#243;n de Windows. O valor predefinido &#233; true.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "providerName": "text",
        "connectionString": "any",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AdobeAnalytics.Cubes",
      "Documentation": {
        "Documentation.Name": "AdobeAnalytics.Cubes",
        "Documentation.Description": "Devolve os conxuntos de informes en Adobe Analytics.",
        "Documentation.LongDescription": "Devolve unha táboa de paquetes multidimensionais de Adobe Analytics. Pode especificarse un parámetro de rexistro opcional, <code>options</code>, para controlar as seguintes opcións:\r\n    <ul>\r\n<li><code>HierarchicalNavigation</code> : Unha funci&#243;n l&#243;xica (true/false) que establece se ver as t&#225;boas agrupadas polos nomes de esquema (o valor predefinido &#233; false).</li>\r\n<li><code>MaxRetryCount</code> : N&#250;mero de tentativas que se realizar&#225;n durante a enquisa para obter o resultado da consulta. O valor predefinido &#233; 120.</li>\r\n<li><code>RetryInterval</code> : Duraci&#243;n do per&#237;odo de tempo entre tentativas. O valor predefinido &#233; de 1 segundo.</li>\r\n<li><code>Implementation</code> : Especifica a versi&#243;n da API de Adobe Analytics. Os valores v&#225;lidos son “2.0”. A predeterminada usa a versi&#243;n 1.4 da API.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "AmazonOpenSearchService.Contents",
      "Documentation": {
        "Documentation.Name": "Amazon OpenSearch Service"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ApacheHiveLLAP.Database",
      "Documentation": {
        "Documentation.Name": "LLAP de Hive",
        "Documentation.Caption": null,
        "Documentation.Description": "Importación de datos dunha LLAP de Hive",
        "Documentation.LongDescription": "\r\nDevolve unha lista de táboas da LLAP de Hive especificada na <code>base de datos</code> no <code>servidor</code> de LLAP de Hive co <code>protocolo</code> seleccionado. Pode especificarse de forma opcional un número de porto co servidor, separado por dous puntos. O protocolo de transporte Thrift é un tipo enumerado con valores \"Standard\" e \"HTTP\". Pode especificarse un parámetro <code>options</code> opcional para controlar as seguintes opcións:\r\n<ul>\r\n        <li><code>ConnectionTimeout</code>: unha duración que controla durante canto tempo se agarda ata que se abandona o intento de conectarse ao servidor. O valor predefinido depende do controlador.</li>\r\n        <li><code>CommandTimeout</code>: unha duración que controla durante canto tempo se permite executar a consulta do lado do servidor antes de cancelarse. O valor predefinido depende do controlador.</li>\r\n</ul>\r\nO parámetro <code>options</code> especifícase como [option1 = value1, option2 = value2...]."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "database": "text",
        "thriftTransport": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AutomyDataAnalytics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureCostManagement.Contents",
      "Documentation": {
        "Documentation.Description": null,
        "Documentation.DisplayName": "Contents",
        "Documentation.Caption": "AzureCostManagement.Contents",
        "Documentation.Name": "AzureCostManagement.Contents",
        "Documentation.LongDescription": null,
        "Documentation.Examples": [
          {
            "Description": "Supoñendo que hoxe é 15/06/2017, obtén os datos de resumos para os días comprendidos entre o 01/05/2017 e o 15/06/2017",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ numberOfMonth = 1 ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "A función devolverá datos resumidos de entre o 01/05/2017 e o 15/06/2017"
          },
          {
            "Description": "Supoñendo que hoxe é 15/06/2017, obtén os datos de resumos para abril de 2017",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"-1\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "A función devolverá datos de entre o 01/04/2017 e o 30/04/2017"
          },
          {
            "Description": "Supoñendo que hoxe é 15/06/2017, obtén os datos de resumos desde abril de 2017 ata agora",
            "Code": "let\r\n          enrollmentNumber = \"100\",\r\n          optionalParameters = [ startBillingDataWindow = \"-2\", endBillingDataWindow = \"0\", dataType = \"Summaries\" ],\r\n          result = AzureCostManagement.Contents(enrollmentNumber, optionalParameters)\r\n      in\r\n          result",
            "Result": "A función devolverá datos de entre o 01/04/2017 e o 15/06/2017"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "parameters": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureCostManagement.Tables",
      "Documentation": {
        "Documentation.Caption": "Azure Cost Management",
        "Documentation.Description": "Azure Cost Management",
        "Documentation.DisplayName": "Azure Cost Management",
        "Documentation.LongDescription": "Azure Cost Management",
        "Documentation.Name": "Azure Cost Management"
      },
      "ReturnType": "table",
      "Parameters": {
        "scope": "text",
        "scopeValue": "text",
        "numberOfMonths": "number",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AzureDevOpsServer.Views",
      "Documentation": {
        "Documentation.Description": "Indique os nomes da organización e do proxecto.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Devolve unha táboa de fontes OData proporcionada por Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CDataConnectCloud.Contents",
      "Documentation": {
        "Documentation.Name": "CData Connect Cloud",
        "Documentation.LongDescription": "Returns a table with relevant data from the connected data source in CData Connect Cloud."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "CommonDataService.Database",
      "Documentation": {
        "Documentation.Name": "Dataverse",
        "Documentation.Caption": "Dataverse",
        "Documentation.LongDescription": "Conecte coa instancia de Dataverse (Dynamics 365 e PowerApps)."
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Cube.AddAndExpandDimensionColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddAndExpandDimensionColumn",
        "Documentation.Description": "Combina a táboa de dimensións especificada no contexto de filtro do cubo e cambia a granularidade dimensional do contexto de filtro mediante a expansión do conxunto especificado de atributos de dimensión.",
        "Documentation.LongDescription": "Combina a táboa de dimensións especificada (<code>dimensionSelector</code>) no contexto de filtro do cubo (<code>cube</code>) e cambia a granularidade dimensional do contexto de filtro mediante a expansión do conxunto especificado (<code>attributeNames</code>) de atributos de dimensión. Os atributos de dimensión engádense á vista tabular con columnas denominadas <code>newColumnNames</code>, ou <code>attributeNames</code> se non se especifica.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "dimensionSelector": "any",
        "attributeNames": "list",
        "newColumnNames": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Cube.AddMeasureColumn",
      "Documentation": {
        "Documentation.Name": "Cube.AddMeasureColumn",
        "Documentation.Description": "Engade unha columna ao cubo que contén os resultados da medida aplicada no contexto de cada fila.",
        "Documentation.LongDescription": "Engade unha columna co nome <code>column</code> ao <code>cube</code> que contén os resultados da medida <code>measureSelector</code> aplicada no contexto de cada fila. A aplicación de medida vese afectada por cambios nas porcións e granularidade da dimensión. Os valores de medida axustaranse despois de que se realicen determinadas operacións de cubo.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "cube": "table",
        "column": "text",
        "measureSelector": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "CustomerInsights.Contents",
      "Documentation": {
        "Documentation.Name": "Dynamics 365 para Customer Insights"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "DataWorld.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContents",
      "Documentation": {
        "Documentation.Description": "Indique a súa empresa e ambiente de Dynamics 365 Business Central.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Devolve unha táboa con datos relevantes de Dynamics 365 Business Central. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.ApiContentsWithOptions",
      "Documentation": {
        "Documentation.Description": "Indique a súa empresa e ambiente de Dynamics 365 Business Central.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Devolve unha táboa con datos relevantes de Dynamics 365 Business Central. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text",
        "apiRoute": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.Contents",
      "Documentation": {
        "Documentation.Description": "Indique a súa empresa e ambiente de Dynamics 365 Business Central.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Devolve unha táboa con datos relevantes de Dynamics 365 Business Central. "
      },
      "ReturnType": "table",
      "Parameters": {
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Dynamics365BusinessCentral.EnvironmentContents",
      "Documentation": {
        "Documentation.Description": "Indique a súa empresa e ambiente de Dynamics 365 Business Central.",
        "Documentation.DisplayName": "Dynamics 365 Business Central",
        "Documentation.Caption": "Dynamics365BusinessCentral.Contents",
        "Documentation.Name": "Dynamics 365 Business Central",
        "Documentation.LongDescription": "Devolve unha táboa con datos relevantes de Dynamics 365 Business Central. "
      },
      "ReturnType": "table",
      "Parameters": {
        "environment": "text",
        "company": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Emigo.Contents",
      "Documentation": {
        "Documentation.Name": "Emigo.Contents",
        "Documentation.LongDescription": "The purpose of the method is to set parameters for odata feed data source calls, thus the non-function calls may be limited by, for example, the period",
        "Documentation.Examples": [
          {
            "Description": "The purpose of the function is set the feed call parametrs",
            "Code": "let\r\n    Source = Emigo.Contents(\"DAYS\", \"3\", \"exact\", null),\r\n    emigoList = Source{[Key=\"emigoList\"]}[Data],\r\n    Dziennik_table = emigoList{[Name=\"Dziennik\",Signature=\"table\"]}[Data],\r\n    #\"Removed Columns\" = Table.RemoveColumns(Dziennik_table,{\"CzasWykonywaniaSekundy\", \"CzyCzasUKlienta\", \"CzyCzasDojazdu\", \"CzyZdjecia\", \"Odrzucona\", \"Obligatoryjna\", \"Wykonana\", \"DataCzasRozpoczecia\", \"DataGodzina\", \"Data\", \"Hierarchia\", \"IDCzynnosciTypy\", \"IDDziennikGrup\", \"IDGrupaDocelowa\", \"IDLogin\", \"IDKlient\", \"IdPrzOdm\", \"IDZadania\", \"IDTypZadania\", \"IDTME\", \"SekundyMiedzyCzynnosciami\", \"IloscZdjec\", \"OkresWykonywaniaSekundy\", \"CzyZadanieWykonane\", \"AnulowaneNaTME\", \"OdlegloscKlientKM\", \"IDKatZad\"}),\r\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Columns\", each true)\r\nin\r\n    #\"Filtered Rows\"",
            "Result": "\"#Filtered Rows\"({\"IDDZiennik\", \"DataNumerycznie\"}, {{132806, 20190220}, {132803, 20190220}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text",
        "AuthorizationMode": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "EmplifiMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Excel.CurrentWorkbook",
      "Documentation": {
        "Documentation.Name": "Excel.CurrentWorkbook",
        "Documentation.Description": "Devolve o contido do libro de Excel actual.",
        "Documentation.LongDescription": "Devolve o contido do libro de Excel actual. Devolve táboas, intervalos con nome e matrices dinámicas. A diferenza de <code>Excel.Workbook</code>, non devolve follas.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Exchange.Contents",
      "Documentation": {
        "Documentation.Name": "Exchange.Contents",
        "Documentation.Description": "Devolve unha táboa de contidos dunha conta de Microsoft Exchange.",
        "Documentation.LongDescription": "Devolve unha táboa de contidos da conta de Microsoft Exchange <code>mailboxAddress</code>. Se <code>mailboxAddress</code> non se especifica, usarase a conta predefinida para a credencial.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "mailboxAddress": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Fabric.Warehouse",
      "Documentation": {
        "Documentation.Name": "Almacén",
        "Documentation.Caption": "Almacén",
        "Documentation.Description": "Importa datos dos almacéns",
        "Documentation.LongDescription": "Importa datos dos almacéns"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetRMS.Functions",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Funnel.Contents",
      "Documentation": {
        "Documentation.Name": "Navigational data",
        "Documentation.LongDescription": "Returns a navigation table to help the user navigate their Workspaces and respective Data Shares."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleAnalytics.Accounts",
      "Documentation": {
        "Documentation.Name": "GoogleAnalytics.Accounts",
        "Documentation.Description": "Devolve contas de Google Analytics.",
        "Documentation.LongDescription": "Devolve contas de Google Analytics ás que se pode acceder desde a credencial actual.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "GoogleBigQuery.Database",
      "Documentation": {
        "Documentation.Name": "Google BigQuery",
        "Documentation.Caption": "Google BigQuery",
        "Documentation.Description": "Importar datos dunha base de datos de Google BigQuery.",
        "Documentation.LongDescription": "\r\n      Devolve unha táboa que enumera os proxectos dispoñibles en Google BigQuery. Pódese especificar un parámetro de rexistro opcional, <code>options</code>, para controlar as opcións seguintes:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: duración que controla o tempo de espera antes de abandonar un intento de establecer unha conexión co servidor. O valor predefinido é o valor de tempo de espera da conexión de ODBC.</li>\r\n        <li><code>CommandTimeout</code>: duración que controla durante canto tempo pode executarse a consulta no servidor antes de cancelarse.</li>\r\n        <li><code>BillingProject</code>: ID do proxecto de facturación. O valor predefinido é o primeiro proxecto dispoñible.</li>\r\n        <li><code>UseStorageApi</code>: especifica sse se vai usar a API de almacenamento de BigQuery para conxuntos de resultados de gran tamaño. O valor predefinido é true para usar a API de almacenamento. Configúreo en false para non usar a API de almacenamento</li>\r\n      </ul>\r\n    O parámetro de rexistro especifícase así: [optión1 = valor1, optión2 = valor2...].\r\n    ",
        "Documentation.Examples": [
          {
            "Description": "Lista de proxectos dispoñibles en Google BigQuery",
            "Code": "GoogleBigQuery.Database()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "IRIS.Database",
      "Documentation": {
        "Documentation.Name": "InterSystems IRIS",
        "Documentation.LongDescription": "InterSystems IRIS",
        "Documentation.Icon": "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gkZDwUXQqFc8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAADzElEQVRYR8WXS4wUVRSGv1PV1cX0jCMjymR6xBCcUfBBgiGinYwLHWOERIyuNMbEuHTnhkjiDnWhGI2udOPehXF2KiYudDE+SBSNYIJgQkCNPAYyTtNddY+LW1Vdj9vdMyDhX1RVn3Puvf895z+3ukRVleuImr0pnU6UmDxHWMpRHL41QkHFENYDAERVVY1hevIAjdH19BbLjUBQNQ7f2iHAhfNn+fvCa3hemgGB0ZFRRhp1kMHLyNVzINZutkitZ7aWV/bNsfOBZl8SqoL0YWHV5C6T5ynff3uSN15fTKMByROwaN7aYPaOCYan27VQvzE29s/T/1Q8FQLieFo9ho2p+quS/z+K3Aeuhs8RGMb+2qBKYBUJGB4yPCJFRQOuc+i9n39APB8jiqfC8zPbGK+HfHjkMPg1DGrpK9w0NkrrlmmajXVUs6oVbpU2zPtto8A7vx2lHoYoEAvs3TzLeD3krd+PIbWAMoSfeHXbXTy75U4KJMQ+e9qz5faraImwoCjw5vZddKM2APtn72U8qGcRRg2PNTexe2qa3VNNNtQ8FMP+I4c5275cnC/Zkea2mcuAOBpAEJSnZmbY9+MiUoOnb59h3PMTvxJFMQd37MpNpNz/+QJdoxy7eJ7WuqmcR7MqpEu53jwlFNNSbiWlKKRT7TbtKCISZcT3cUGyS0mE5RLkIXjVRhWoBwFbP/0421GsEX4QcJsIOzZsLIaLHWO0l+0sA6qDzyDFYJKnng18FDRCJUYCqNVCWjeu55P5J/rMVESvBFIVYR554aQQhH87Mb88+QwLD+8BFQThwH0tbg6r3eFCRkCGnoQ2QnIiEABPiYGtYzdwT2OM2I948etDrEpelKIqJVB7OXrpInj256/Ly3TitBiaCUeBjx6ap26EPzoxX5w5U1WsAwPPgVSuez5bIKiHADz3zZf8dXnFutUj1YQAY36NFzbPosS8tPgVXUfZyhhyDlg8MjmJH4QYwAfCpL3mNzaJTbeQxpfv3s7plWU6xnDo1Eke37TFNWWGylFchqJ8MPeo0/f+g3MOq3JwZ8thz9wFFNrQheHiLEIGiK8g3/S9kJo8PxHTKoRzpUi34muc2RwiXNuOrwhClo5eCbIEXTsCheyW3wWiiigcP36OiYkgYZhSzd+TyZK78cAzFHaVQUg+aAA8Tpw4VxpdakOAd9/+jkEQwFxFkkSg46X/NJLvAgWWlpaJjY+l3SuJkgnWQtUadHCHqKQHlGSpF+zBubJ0KTnSxX4bAhiTz18x3U6oO+sZkuGilkxvRks+7bqMwPXCfx1BWTtnUBwAAAAAAElFTkSuQmCC"
      },
      "ReturnType": "table",
      "Parameters": {
        "host": "text",
        "port": "number",
        "namespace": "text",
        "ssl": "text",
        "logs": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IndustrialAppStore.NavigationTable",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Kyligence.Database",
      "Documentation": {
        "Documentation.Name": "Kyligence",
        "Documentation.LongDescription": "Connect your Kyligence"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "text",
        "Project": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Lakehouse.Contents",
      "Documentation": {
        "Documentation.Name": "Lakehouse",
        "Documentation.Caption": "Importar datos dun Lakehouse",
        "Documentation.Description": "Importar datos dun Lakehouse",
        "Documentation.LongDescription": "Conéctate a todas as Lakehouses ás que tes acceso e escolle as entidades que queres usar"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Linkar.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "entrypoint": "text",
        "port": "number",
        "language": "text",
        "freetext": "text",
        "customvars": "text",
        "FileName": "text",
        "SelectClause": "text",
        "DictClause": "text",
        "SortClause": "text",
        "sqlmode": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "LinkedIn.SalesContracts",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesContractsWithReportAccess",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalytics",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "MailChimp.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "MailChimp.TablesV2",
      "Documentation": {
        "Documentation.Description": "Devolve unha táboa con datos chave de MailChimp.",
        "Documentation.DisplayName": "MailChimp",
        "Documentation.Caption": "MailChimp.Tables",
        "Documentation.Name": "MailChimp",
        "Documentation.LongDescription": "Devolve unha táboa con datos chave de MailChimp.",
        "Documentation.Examples": [
          {
            "Description": "Devolve unha táboa con datos chave de MailChimp.",
            "Code": "MailChimp.Tables()",
            "Result": "Unha táboa con datos chave de MailChimp."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Marketo.Activities",
      "Documentation": {
        "Documentation.Name": "Marketo.Activities",
        "Documentation.DisplayName": "Marketo.Activities",
        "Documentation.Caption": "Marketo.Activities",
        "Documentation.Description": "Devolve unha táboa coas actividades dos clientes potenciais.",
        "Documentation.LongDescription": "Realiza unha chamada ao extremo da API de REST de Marketo en <code>url</code>/rest/v1/activities.json. Devolvéronse todas as actividades da lista <code>activityIds</code> que ocorreron desde <code>startTime</code>.",
        "Documentation.Examples": [
          {
            "Description": "Extrae unha táboa de actividades de \"Visitar páxina web\" desde o 1 de novembro de 2015.",
            "Code": "Marketo.Activities(\"https://100-AAA-999.mktorest.com/rest\", #date(2015,11,1), {1})",
            "Result": "Unha táboa con detalles de todas as actividades de \"Visitar páxina web\" desde o 1 de novembro."
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "startTime": "date",
        "activityIds": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "MongoDBAtlasODBC.Query",
      "Documentation": {
        "Documentation.Name": "MongoDB Atlas SQL"
      },
      "ReturnType": "table",
      "Parameters": {
        "mongodbUri": "text",
        "database": "text",
        "query": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "OpenSearchProject.Contents",
      "Documentation": {
        "Documentation.Name": "OpenSearch Project"
      },
      "ReturnType": "table",
      "Parameters": {
        "Server": "text",
        "Port": "number",
        "UseSSL": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PlanviewEnterprise.CallQueryService",
      "Documentation": {
        "Documentation.Description": "Enter the URL, database name associated with your Planview Portfolios account and a SQL query.",
        "Documentation.DisplayName": "PlanviewEnterprise.CallQueryService",
        "Documentation.Caption": "PlanviewEnterprise.CallQueryService",
        "Documentation.Name": "Planview Portfolios",
        "Documentation.LongDescription": "Returns a table with Planview Portfolios data.",
        "Documentation.Examples": [
          {
            "Description": "Returns a table with Planview Portfolios data.",
            "Code": "PlanviewEnterprise.CallQueryService(\"https://contoso.com/planview\", \"pve\", \"select * from PV_Table\")",
            "Result": "A table of Planview Portfolios data about database pve"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "database": "text",
        "sqlQueryString": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "PowerBI.Dataflows",
      "Documentation": {
        "Documentation.Name": "Fluxos de datos de Power BI (herdado)",
        "Documentation.Caption": "Importar datos dun fluxo de datos de Power BI",
        "Documentation.LongDescription": "Conéctese a todos os fluxos de datos de Power BI aos que ten acceso ao e escolla as entidades que quere usar."
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerBI.Datamarts",
      "Documentation": {
        "Documentation.Name": "Datamarts",
        "Documentation.Caption": "Datamarts",
        "Documentation.Description": "Importar datos de Datamarts",
        "Documentation.LongDescription": "Importar datos de Datamarts"
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "PowerPlatform.Dataflows",
      "Documentation": {
        "Documentation.Name": "Fluxos de datos",
        "Documentation.Caption": "Importe datos dun fluxo de datos",
        "Documentation.Description": "Importe datos dun fluxo de datos",
        "Documentation.LongDescription": "Conéctese a todos os fluxos de datos aos que ten acceso e escolla as entidades que quere usar"
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "ProductInsights.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooksOnline.Tables",
      "Documentation": {
        "Documentation.Name": "QuickBooks Online",
        "Documentation.Caption": "QuickBooks Online",
        "Documentation.Description": "Importa datos de QuickBooks Online.",
        "Documentation.LongDescription": "\r\n        Devolve unha táboa na que se mostran as táboas de QuickBooks Online. Pode especificarse un parámetro de rexistro opcional, <code>options</code>, para controlar as seguintes opcións:\r\n      <ul>\r\n        <li><code>ConnectionTimeout</code>: unha duración que controla canto tempo se espera antes de abandonar un intento para realizar unha conexión co servidor.</li>\r\n        <li><code>CommandTimeout</code>: unha duración que controla canto tempo ten a consulta do servidor antes de cancelarse.</li>\r\n      </ul>\r\n    O parámetro de rexistro se especifica como [option1 = value1, option2 = value2...].\r\n    "
      },
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Data",
      "Documentation": {
        "Documentation.Name": "Salesforce.Data",
        "Documentation.Description": "Devolve os obxectos da conta do equipo de vendas.",
        "Documentation.LongDescription": "Devolve os obxectos da conta de Salesforce fornecidos nas credenciais. A conta conectarase a través do ambiente fornecido <code>loginUrl</code>. Se non se fornece ningún, a conta conectarase coa produción (https://login.salesforce.com). Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>CreateNavigationProperties</code> : Unha l&#243;xica (true/false) que establece se xerar propiedades de navegaci&#243;n nos valores devoltos (o valor predefinido &#233; false).</li>\r\n<li><code>ApiVersion</code> : A versi&#243;n da API de Salesforce que se usar&#225; para esta consulta. Se non se especifica, usarase a versi&#243;n 29.0 da API.</li>\r\n<li><code>Timeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar unha solicitude ao servidor. O valor predefinido &#233; espec&#237;fico da orixe.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "any",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Salesforce.Reports",
      "Documentation": {
        "Documentation.Name": "Salesforce.Reports",
        "Documentation.Description": "Devolve os informes da conta do equipo de vendas.",
        "Documentation.LongDescription": "Devolve os informes da conta de Salesforce fornecidos nas credenciais. A conta conectarase a través do ambiente fornecido <code>loginUrl</code>. Se non se fornece ningún, a conta conectarase coa produción (https://login.salesforce.com). Pode fornecerse un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>ApiVersion</code> : A versi&#243;n da API de Salesforce que se usar&#225; para esta consulta. Se non se especifica, usarase a versi&#243;n 29.0 da API.</li>\r\n<li><code>Timeout</code> : Duraci&#243;n que controla o tempo que se debe agardar antes de abandonar unha solicitude ao servidor. O valor predefinido &#233; espec&#237;fico da orixe.</li>\r\n</ul>\r\n\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "loginUrl": "text",
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SapBusinessWarehouse.Cubes",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouse.Cubes",
        "Documentation.Description": "Devolve os InfoCubes e consultas dun sistema SAP Business Warehouse agrupados por InfoArea.",
        "Documentation.LongDescription": "Devolve unha táboa de InfoCubes e consultas agrupados por InfoArea dunha instancia SAP Business Warehouse no servidor <code>server</code> co número de sistema <code>systemNumberOrSystemId</code> e o ID de cliente <code>clientId</code>. Pode especificarse un parámetro de rexistro opcional, <code>optionsOrLogonGroup</code>, para controlar as opcións seguintes:\r\n    \r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "server": "text",
        "systemNumberOrSystemId": "text",
        "clientId": "text",
        "optionsOrLogonGroup": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ShortcutsBI.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Siteimprove.Contents",
      "Documentation": {
        "Documentation.Name": "Siteimprove",
        "Documentation.LongDescription": "Siteimprove API connector"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Tables",
      "Documentation": {
        "Documentation.Description": "Devolve unha táboa de follas, informes, cartafoles e áreas de traballo da API de Smartsheet",
        "Documentation.DisplayName": "Smartsheet.Tables",
        "Documentation.Caption": "Smartsheet.Tables",
        "Documentation.Name": "Smartsheet.Tables",
        "Documentation.LongDescription": "Devolve unha táboa aniñada das follas, informes, cartafoles e áreas de traballo dispoñibles da API de Smartsheet.",
        "Documentation.Examples": [
          {
            "Description": "Devolve follas, cartafoles, informes e áreas de traballo dispoñibles no nivel superior da xerarquía de Smartsheet",
            "Code": "Smartsheet.Tables()",
            "Result": "Unha táboa de cartafoles, informes e áreas de traballo do nivel superior da xerarquía de Smartsheet"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SocialbakersMetrics.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "options": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SoftOneBI.Contents",
      "Documentation": {
        "Documentation.Name": "SoftOne BI",
        "Documentation.LongDescription": "Retrieves all Soft1/Atlantis tables in the datalake",
        "Documentation.Examples": [
          {
            "Description": "Returns a table of tables from the datalake",
            "Code": "SoftOneBI.Contents()",
            "Result": "#table({\"Name\"}, {\"ItemKind\"}, {\"ItemName\"}, {\"Data\"}, {\"IsLeaf\"}, {{\"Companies\"}, {\"Table\"}, {\"Table\"}, {\"Table\"}, {\"true\"}})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SparkPost.GetTable",
      "Documentation": {
        "Documentation.Description": "Devolve unha táboa das medidas dispoñibles da API v1 de SparkPost",
        "Documentation.DisplayName": "SparkPost.GetTable",
        "Documentation.Caption": "SparkPost.GetTable",
        "Documentation.Name": "SparkPost.GetTable",
        "Documentation.LongDescription": "Esta función pódese usar para recuperar datos dun extremo concreto de \"Medidas\" da API SparkPost v1. Cando actualice estas táboas ou faga chamadas á API SparkPost mediante este conector, teña en conta que a API SparkPost ten un límite de taxa de API estrito. Se o servidor SparkPost devolve un código de estado 429, significa que acadou o límite de taxa e terá que agardar uns intres antes de realizar máis chamadas. Cando escolla un valor para o parámetro Número de días, teña en conta que a API só almacena 6 meses de datos.",
        "Documentation.Examples": [
          {
            "Description": "Recupera as medidas de entrega count_sent e count_rejected de todos os identificadores campaign_ids dos últimos tres días. ",
            "Code": "Source = SparkPost.GetTable(3, \"count_sent,count_rejected\", \"campaign_id\", \"metrics/deliverability/campaign\")",
            "Result": "táboa"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "DaysToAggregate": "number",
        "MetricColumns": "text",
        "NonMetricColumns": "text",
        "Path": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Stripe.Method",
      "Documentation": {
        "Documentation.Name": "Stripe.Method",
        "Documentation.DisplayName": "Stripe.Method",
        "Documentation.Caption": "Stripe.Method",
        "Documentation.Description": "Realiza unha chamada á API de Stripe.",
        "Documentation.LongDescription": "Realiza unha chamada á API de Stripe en https://api.stripe.com/v1/<code>method</code>, co rexistro <code>additionalParameters</code> aprobado como parámetros adicionais e unha lista <code>ColumnNames</code> dos nomes de columna esperados. Está a usarse a versión 2015-10-16 de Stripe.",
        "Documentation.Examples": [
          {
            "Description": "Devolve unha táboa cos eventos creados antes do 1 de novembro de 2015",
            "Code": "Stripe.Method(\"events\", [#\"created[gte]\"=1446374329], {\"id\", \"livemode\", \"created\", \"type\", \"data\", \"object\", \"pending_webhooks\", \"request\", \"api_version\"})",
            "Result": "Unha táboa cos eventos especificados da conta de Stripe actual"
          },
          {
            "Description": "Devolve unha táboa con todos os SKU.",
            "Code": "Stripe.Method(\"skus\", [], {\"id\", \"created\", \"updated\", \"object\", \"livemode\", \"product\", \"image\", \"active\", \"price\", \"currency\", \"inventory\", \"attributes\", \"metadata\", \"package_dimensions\"})",
            "Result": "Unha táboa con todos os SKU da conta de Stripe actual"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "method": "text",
        "additionalParameters": "record",
        "ColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Stripe.Tables",
      "Documentation": {
        "Documentation.Name": "Stripe.Tables",
        "Documentation.DisplayName": "Stripe.Tables",
        "Documentation.Caption": "Stripe.Tables",
        "Documentation.Description": "Devolve unha táboa que enumera as táboas e funcións de Stripe dispoñibles.",
        "Documentation.LongDescription": "Devolve unha táboa que enumera as táboas e funcións de Stripe dispoñibles."
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SurveyMonkey.Contents",
      "Documentation": {
        "Documentation.Name": "SurveyMonkey",
        "Documentation.LongDescription": "A Navigation table showing all the surveys in the account related to the input access token.",
        "Documentation.Examples": [
          {
            "Description": "Returns the navigation table.",
            "Code": "SurveyMonkey.Contents()"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Synapse.Contents",
      "Documentation": {
        "Documentation.Name": "Espazo de traballo de Azure Synapse Analytics",
        "Documentation.Caption": "Espazo de traballo de Azure Synapse Analytics",
        "Documentation.LongDescription": "Conector PQ para o espazo de traballo de Azure Synapse Analytics",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "option": "record"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.AddColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddColumn",
        "Documentation.Description": "Engade unha columna co nome especificado. O valor calcúlase coa función de selección específica con cada fila tomada como unha entrada.",
        "Documentation.LongDescription": "Engade unha columna co nome <code>newColumnName</code> á táboa <code>table</code>. Os valores da columna calcúlanse coa función de selección específica <code>columnGenerator</code> con cada fila tomada como unha entrada.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Engadir unha columna de número co nome \"TotalPrice\" á táboa, no que cada valor vai ser a suma das columnas [Price] e [Shipping].",
            "Code": "Table.AddColumn(\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0, Shipping = 10.00],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0, Shipping = 15.00],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0, Shipping = 10.00]\r\n    }),\r\n    \"TotalPrice\",\r\n    each [Price] + [Shipping],\r\n    type number\r\n)",
            "Result": "Table.FromRecords({\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100, Shipping = 10, TotalPrice = 110],\r\n    [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5, Shipping = 15, TotalPrice = 20],\r\n    [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25, Shipping = 10, TotalPrice = 35]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "columnGenerator": "function",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddFuzzyClusterColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddFuzzyClusterColumn",
        "Documentation.Description": "Engade unha nova columna con valores representativos obtidos mediante o agrupamento aproximado de valores da columna especificada da táboa.",
        "Documentation.LongDescription": "Engade unha nova columna <code>newColumnName</code> a <code>table</code> con valores representativos de <code>columnName</code>. Os valores representativos obtéñense buscando coincidencias parciais dos valores en <code>columnName</code>, para cada fila.\r\n    <p>Pódese incluír un conxunto de <code>options</code> opcional para especificar como comparar as columnas de clave. As opcións inclúen: \r\n    <ul>\r\n<li><code>Culture</code> : Permite agrupar rexistros segundo regras espec&#237;ficas da referencia cultural. Pode ser calquera nome de referencia cultural v&#225;lido. Por exemplo, un opci&#243;n de referencia cultural de &quot;ja-JP&quot; agrupa rexistros segundo a referencia cultural Xapon&#233;s. O valor predefinido &#233; &quot;&quot;, que agrupa segundo a referencia cultural Ingl&#233;s invariable.</li>\r\n<li><code>IgnoreCase</code> : Valor l&#243;xico (verdadeiro/falso) que permite agrupar claves sen diferenciar entre mai&#250;sculas e min&#250;sculas. Por exemplo, se &#233; verdadeiro, &quot;Grapes&quot; agr&#250;pase con &quot;grapes&quot;. O valor predefinido &#233; verdadeiro.</li>\r\n<li><code>IgnoreSpace</code> : Valor l&#243;xico (verdadeiro/falso) que permite combinar partes de texto para buscar grupos. Por exemplo, se &#233; verdadeiro, &quot;Gra pes&quot; agr&#250;pase con &quot;Grapes&quot;. O valor predefinido &#233; verdadeiro.</li>\r\n<li><code>SimilarityColumnName</code> : Nome para a columna que mostra a semellanza entre un valor de entrada e o valor representativo para a devandita entrada. O valor predefinido &#233; null e, nese caso, non se pode engadir unha columna para semellanzas nova.</li>\r\n<li><code>Threshold</code> : N&#250;mero entre 0,00 e 1,00 que especifica a puntuaci&#243;n de semellanza na que se agrupar&#225;n dous valores.\r\n    Por exemplo, &quot;Grapes&quot; e &quot;Graes&quot; (falta o &quot;p&quot;) agruparanse s&#243; se esta opci&#243;n est&#225; configurada en menos de 0,90.\r\n    Un limiar de 1,00 permite s&#243; coincidencias exactas.\r\n    (T&#233;&#241;ase en conta que unha “coincidencia exacta” aproximada pode ignorar diferenzas como mai&#250;sculas e min&#250;sculas, orde das palabras e puntuaci&#243;n).\r\n    O valor predefinido &#233; 0,80.</li>\r\n<li><code>TransformationTable</code> : T&#225;boa que permite agrupar rexistros segundo asignaci&#243;ns de valores personalizadas. Debe conter as columnas &quot;Desde&quot; e &quot;At&#233;&quot;. Por exemplo, &quot;Grapes&quot; agr&#250;pase con &quot;Raisins&quot; se se fornece unha t&#225;boa de transformaci&#243;n na que a columna &quot;Desde&quot; conte&#241;a &quot;Grapes&quot; e a columna &quot;At&#233;&quot; conte&#241;a &quot;Raisins&quot;. Te&#241;a en conta que se aplicar&#225; a transformaci&#243;n a todas as ocorrencias do texto na t&#225;boa de transformaci&#243;n. Coa t&#225;boa de transformaci&#243;n anterior, &quot;Grapes are sweet&quot; agruparase tam&#233;n con &quot;Raisins are sweet&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Busque os valores representativos para a localización dos empregados.",
            "Code": "Table.AddFuzzyClusterColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    \"Location_Cleaned\",\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [EmployeeID = 1, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 2, Location = \"seattl\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 3, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 4, Location = \"Seatle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 5, Location = \"vancover\", Location_Cleaned = \"Vancouver\"],\r\n        [EmployeeID = 6, Location = \"Seattle\", Location_Cleaned = \"Seattle\"],\r\n        [EmployeeID = 7, Location = \"Vancouver\", Location_Cleaned = \"Vancouver\"]\r\n    },\r\n    type table [EmployeeID = nullable number, Location = nullable text, Location_Cleaned = nullable text]\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddJoinColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddJoinColumn",
        "Documentation.Description": "Executa unha asociación entre táboas en columnas fornecidas e produce o resultado da unión nunha nova columna.",
        "Documentation.LongDescription": "Une as filas de <code>table1</code> coas filas de <code>table2</code> baseándose na igualdade dos valores das columnas clave seleccionadas por <code>key1</code> (para <code>table1</code>) e <code>key2</code> (para <code>table2</code>). Os resultados introdúcense na columna co nome <code>newColumnName</code>.\r\nEsta función compórtase de xeito similar a Table.Join cun JoinKind de LeftOuter agás que os resultados da asociación se presentan nunha maneira aniñada en vez de simplificada.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Engadir unha columna de unión a ({[saleID = 1, item = \"Shirt\"], [saleID = 2, item = \"Hat\"]}) co nome \"prezo/stock\" da táboa ({[saleID = 1, price = 20], [saleID = 2, price = 10]}) unida por [saleID].",
            "Code": "Table.AddJoinColumn(\r\n    Table.FromRecords({\r\n        [saleID = 1, item = \"Shirt\"],\r\n        [saleID = 2, item = \"Hat\"]\r\n    }),\r\n    \"saleID\",\r\n    () => Table.FromRecords({\r\n        [saleID = 1, price = 20, stock = 1234],\r\n        [saleID = 2, price = 10, stock = 5643]\r\n    }),\r\n    \"saleID\",\r\n    \"price\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n        saleID = 1,\r\n        item = \"Shirt\",\r\n        price = Table.FromRecords({[saleID = 1, price = 20, stock = 1234]})\r\n    ],\r\n    [\r\n        saleID = 2,\r\n        item = \"Hat\",\r\n        price = Table.FromRecords({[saleID = 2, price = 10, stock = 5643]})\r\n    ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.AddKey",
      "Documentation": {
        "Documentation.Name": "Table.AddKey",
        "Documentation.Description": "Engade unha clave a unha táboa.",
        "Documentation.LongDescription": "Engade unha clave a <code>table</code>, onde <code>columns</code> é a lista de nomes de columnas que definen a clave e <code>isPrimary</code> especifica se a clave é principal.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Engade unha clave principal dunha soa columna a unha táboa.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    resultTable = Table.AddKey(table, {\"Id\"}, true)\r\nin\r\n    resultTable",
            "Result": "Table.FromRecords({\r\n    [Id = 1, Name = \"Hello There\"],\r\n    [Id = 2, Name = \"Good Bye\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AddRankColumn",
      "Documentation": {
        "Documentation.Name": "Table.AddRankColumn",
        "Documentation.Description": "Anexa unha columna coa clasificación dunha ou máis columnas.",
        "Documentation.LongDescription": "Anexa unha columna co nome <code>newColumnName</code> a <code>table</code> coa clasificación dunha ou máis columnas descritas por <code>comparisonCriteria</code>. \r\nOs usuarios avanzados poden usar a opción RankKind en <code>options</code> para escoller un método de clasificación máis específico.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Engade unha columna co nome \"RevenueRank\" á táboa que clasifica a columna \"Revenue\" de maior a menor.",
            "Code": "Table.AddRankColumn(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Revenue = 200],\r\n        [CustomerID = 2, Name = \"Jim\", Revenue = 100],\r\n        [CustomerID = 3, Name = \"Paul\", Revenue = 200],\r\n        [CustomerID = 4, Name = \"Ringo\", Revenue = 50]\r\n    }),\r\n    \"RevenueRank\",\r\n    {\"Revenue\", Order.Descending},\r\n    [RankKind = RankKind.Competition]\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 3, Name = \"Paul\", Revenue = 200, RevenueRank = 1],\r\n    [CustomerID = 2, Name = \"Jim\", Revenue = 100, RevenueRank = 3],\r\n    [CustomerID = 4, Name = \"Ringo\", Revenue = 50, RevenueRank = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "comparisonCriteria": "any",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AggregateTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.AggregateTableColumn",
        "Documentation.Description": "Agrega unha columna de táboas en varias columnas na táboa contedora.",
        "Documentation.LongDescription": "Agrega as táboas en <code>table</code>[<code>column</code>] en varias columnas que conteñen valores agregados das táboas. <code>aggregations</code> utilízase para especificar as columnas que conteñen as táboas que se van agregar, as funcións de agregación que se van aplicar ás táboas para xerar os seus valores e os nomes das columnas agregadas que se van crear.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Agregar columnas de táboa en <code>[t]</code> na táboa <code>{[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]}</code> dentro da suma de <code>[t.a]</code>, o mínimo e máximo de <code>[t.b]</code> e a contaxe de valores en <code>[t.a]</code>.",
            "Code": "Table.AggregateTableColumn(\r\n    Table.FromRecords(\r\n        {\r\n            [\r\n                t = Table.FromRecords({\r\n                    [a = 1, b = 2, c = 3],\r\n                    [a = 2, b = 4, c = 6]\r\n                }),\r\n                b = 2\r\n            ]\r\n        },\r\n        type table [t = table [a = number, b = number, c = number], b = number]\r\n    ),\r\n    \"t\",\r\n    {\r\n        {\"a\", List.Sum, \"sum of t.a\"},\r\n        {\"b\", List.Min, \"min of t.b\"},\r\n        {\"b\", List.Max, \"max of t.b\"},\r\n        {\"a\", List.Count, \"count of t.a\"}\r\n    }\r\n)",
            "Result": "Table.FromRecords({[#\"sum of t.a\" = 3, #\"min of t.b\" = 2, #\"max of t.b\" = 4, #\"count of t.a\" = 2, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "aggregations": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.AlternateRows",
      "Documentation": {
        "Documentation.Name": "Table.AlternateRows",
        "Documentation.Description": "Mantén o desprazamento inicial e logo alterna aceptando e ignorando as seguintes filas.",
        "Documentation.LongDescription": "Mantén o desprazamento inicial e logo alterna aceptando e ignorando as seguintes filas.\r\n    <ul>\r\n       <li><code>table</code>: a táboa de entrada.</li>\r\n       <li><code>offset</code>: o número de filas que vai manter antes de comezar as iteracións.</li>\r\n       <li><code>skip</code>: o número de filas que se van eliminar en cada iteración.</li>\r\n       <li><code>take</code>: o número de filas que se van manter en cada iteración.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Devolver unha táboa a partir da táboa que, comezando na primeira fila, ignora 1 valor e logo mantén 1 valor.",
            "Code": "Table.AlternateRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }),\r\n    1,\r\n    1,\r\n    1\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "skip": "number",
        "take": "number"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumns",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumns",
        "Documentation.Description": "Combina as columnas especificadas nunha nova columna utilizando a función do combinador especificada.",
        "Documentation.LongDescription": "Combina as columnas especificadas nunha nova columna utilizando a función do combinador especificada.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Combina os nomes primeiros e últimos nunha nova columna, separados por unha coma.",
            "Code": "Table.CombineColumns(\r\n    Table.FromRecords({[FirstName = \"Bob\", LastName = \"Smith\"]}),\r\n    {\"LastName\", \"FirstName\"},\r\n    Combiner.CombineTextByDelimiter(\",\", QuoteStyle.None),\r\n    \"FullName\"\r\n)",
            "Result": "Table.FromRecords({[FullName = \"Smith,Bob\"]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumns": "list",
        "combiner": "function",
        "column": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.CombineColumnsToRecord",
      "Documentation": {
        "Documentation.Name": "Table.CombineColumnsToRecord",
        "Documentation.Description": "Combina as columnas especificadas nunha nova columna cun valor de rexistro onde cada rexistro ten nomes e valores de campo correspondentes aos nomes e valores das columnas que se combinaron.",
        "Documentation.LongDescription": "Combina as columnas especificadas de <code>table</code> nunha nova columna con valor de rexistro denominada <code>newColumnName</code> onde cada rexistro ten os valores e nomes de campo correspondentes aos valores e nomes das columnas que se combinaron. Se se especifica un rexistro para <code>options</code>, pódense fornecer as seguintes opcións:\r\n    <ul>\r\n     <li> <code>DisplayNameColumn</code>: ao especificalo como texto, indica que o nome da columna dada débese tratar como o nome para mostrar do rexistro. Non é preciso que sexa unha das columnas do rexistro.</li>\r\n     <li> <code>TypeName</code>: ao especificalo como texto, fornece un nome de tipo lóxico para o rexistro resultante que se pode usar durante a carga de datos para que o ambiente de carga controle o comportamento.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "newColumnName": "text",
        "sourceColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.DuplicateColumn",
      "Documentation": {
        "Documentation.Name": "Table.DuplicateColumn",
        "Documentation.Description": "Duplica unha columna co nome especificado. Os valores e o tipo cópianse da columna de orixe.",
        "Documentation.LongDescription": "Duplicar a columna co nome <code>columnName</code> á táboa <code>table</code>. Os valores e o tipo da columna <code>newColumnName</code> cópianse da columna <code>columnName</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Duplicar a columna \"a\" á columna co nome \"columna copiada\" da táboa <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.DuplicateColumn(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    \"a\",\r\n    \"copied column\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 1, b = 2, #\"copied column\" = 1],\r\n    [a = 3, b = 4, #\"copied column\" = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "columnName": "text",
        "newColumnName": "text",
        "columnType": "type"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandRecordColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandRecordColumn",
        "Documentation.Description": "Expande unha columna de rexistros en columnas con cada un dos valores.",
        "Documentation.LongDescription": "Dada a <code>column</code> de rexistros na <code>table</code> de entrada, crea unha táboa cunha columna para cada campo do rexistro. Opcionalmente, pódese especificar <code>newColumnNames</code> para garantir nomes exclusivos para as columnas da nova táboa.\r\n    <ul>\r\n        <li><code>table</code>: a táboa orixinal coa columna de rexistro que se vai expandir. </li>\r\n        <li><code>column</code>: a columna que se vai expandir.</li>\r\n        <li><code>fieldNames</code>: a lista de campos que se van expandir en columnas da táboa.</li>\r\n        <li><code>newColumnNames</code>: a lista de nomes de columnas que se van dar ás novas columnas. Os novos nomes de columna non poden duplicar ningunha columna na nova táboa.</li>\r\n    </ul>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Expandir a columna [a] da táboa <code>({[a = [aa = 1, bb = 2, cc = 3], b = 2]})</code> en 3 columnas \"aa\", \"bb\" e \"cc\".",
            "Code": "Table.ExpandRecordColumn(\r\n    Table.FromRecords({\r\n        [\r\n            a = [aa = 1, bb = 2, cc = 3],\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"a\",\r\n    {\"aa\", \"bb\", \"cc\"}\r\n)",
            "Result": "Table.FromRecords({[aa = 1, bb = 2, cc = 3, b = 2]})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "fieldNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.ExpandTableColumn",
      "Documentation": {
        "Documentation.Name": "Table.ExpandTableColumn",
        "Documentation.Description": "Expande unha columna de rexistros ou unha columna de táboas en varias columnas na táboa contedora.",
        "Documentation.LongDescription": "Expande táboas en <code>table</code>[<code>column</code>] en varias filas e columnas. <code>columnNames</code> utilízase para seleccionar as columnas que se van expandir da táboa interna. Especificar <code>newColumnNames</code> para evitar conflitos entre as columnas existentes e as novas columnas.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Expandir as columnas de táboa en <code>[a]</code> da táboa <code>({[t = {[a=1, b=2, c=3], [a=2,b=4,c=6]}, b = 2]})</code> en 3 columnas <code>[t.a]</code>, <code>[t.b]</code> e <code>[t.c]</code>.",
            "Code": "Table.ExpandTableColumn(\r\n    Table.FromRecords({\r\n        [\r\n            t = Table.FromRecords({\r\n                [a = 1, b = 2, c = 3],\r\n                [a = 2, b = 4, c = 6]\r\n            }),\r\n            b = 2\r\n        ]\r\n    }),\r\n    \"t\",\r\n    {\"a\", \"b\", \"c\"},\r\n    {\"t.a\", \"t.b\", \"t.c\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [t.a = 1, t.b = 2, t.c = 3, b = 2],\r\n    [t.a = 2, t.b = 4, t.c = 6, b = 2]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "column": "text",
        "columnNames": "list",
        "newColumnNames": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyGroup",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyGroup",
        "Documentation.Description": "Agrupa filas na táboa segundo a coincidencia aproximada das claves.",
        "Documentation.LongDescription": "Agrupa as filas de <code>table</code> por valores con coincidencias parciais na columna especificada, <code>key</code>, para cada fila.\r\n    Para cada grupo, constrúese un rexistro que contén as columnas de clave (e os seus valores) xunto coas columnas agregadas especificadas por <code>aggregatedColumns</code>.\r\n    Esta función non garante que se vaia devolver unha orde fixa de filas.\r\n    <p>Pódese incluír un conxunto de <code>options</code> opcional para especificar como comparar as columnas de clave. As opcións inclúen: \r\n    <ul>\r\n<li><code>Culture</code> : Permite agrupar rexistros segundo regras espec&#237;ficas da referencia cultural. Pode ser calquera nome de referencia cultural v&#225;lido. Por exemplo, un opci&#243;n de referencia cultural de &quot;ja-JP&quot; agrupa rexistros segundo a referencia cultural Xapon&#233;s. O valor predefinido &#233; &quot;&quot;, que agrupa segundo a referencia cultural Ingl&#233;s invariable.</li>\r\n<li><code>IgnoreCase</code> : Valor l&#243;xico (verdadeiro/falso) que permite agrupar claves sen diferenciar entre mai&#250;sculas e min&#250;sculas. Por exemplo, se &#233; verdadeiro, &quot;Grapes&quot; agr&#250;pase con &quot;grapes&quot;. O valor predefinido &#233; verdadeiro.</li>\r\n<li><code>IgnoreSpace</code> : Valor l&#243;xico (verdadeiro/falso) que permite combinar partes de texto para buscar grupos. Por exemplo, se &#233; verdadeiro, &quot;Gra pes&quot; agr&#250;pase con &quot;Grapes&quot;. O valor predefinido &#233; verdadeiro.</li>\r\n<li><code>SimilarityColumnName</code> : Nome para a columna que mostra a semellanza entre un valor de entrada e o valor representativo para a devandita entrada. O valor predefinido &#233; null e, nese caso, non se pode engadir unha columna para semellanzas nova.</li>\r\n<li><code>Threshold</code> : N&#250;mero entre 0,00 e 1,00 que especifica a puntuaci&#243;n de semellanza na que se agrupar&#225;n dous valores.\r\n    Por exemplo, &quot;Grapes&quot; e &quot;Graes&quot; (falta o &quot;p&quot;) agruparanse s&#243; se esta opci&#243;n est&#225; configurada en menos de 0,90.\r\n    Un limiar de 1,00 permite s&#243; coincidencias exactas.\r\n    (T&#233;&#241;ase en conta que unha “coincidencia exacta” aproximada pode ignorar diferenzas como mai&#250;sculas e min&#250;sculas, orde das palabras e puntuaci&#243;n).\r\n    O valor predefinido &#233; 0,80.</li>\r\n<li><code>TransformationTable</code> : T&#225;boa que permite agrupar rexistros segundo asignaci&#243;ns de valores personalizadas. Debe conter as columnas &quot;Desde&quot; e &quot;At&#233;&quot;. Por exemplo, &quot;Grapes&quot; agr&#250;pase con &quot;Raisins&quot; se se fornece unha t&#225;boa de transformaci&#243;n na que a columna &quot;Desde&quot; conte&#241;a &quot;Grapes&quot; e a columna &quot;At&#233;&quot; conte&#241;a &quot;Raisins&quot;. Te&#241;a en conta que se aplicar&#225; a transformaci&#243;n a todas as ocorrencias do texto na t&#225;boa de transformaci&#243;n. Coa t&#225;boa de transformaci&#243;n anterior, &quot;Grapes are sweet&quot; agruparase tam&#233;n con &quot;Raisins are sweet&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Para agrupar a táboa, engada unha columna agregada [Count] que conteña o número de empregados en cada localización (\"each Table.RowCount(_))\").",
            "Code": "Table.FuzzyGroup(\r\n    Table.FromRecords(\r\n        {\r\n            [EmployeeID = 1, Location = \"Seattle\"],\r\n            [EmployeeID = 2, Location = \"seattl\"],\r\n            [EmployeeID = 3, Location = \"Vancouver\"],\r\n            [EmployeeID = 4, Location = \"Seatle\"],\r\n            [EmployeeID = 5, Location = \"vancover\"],\r\n            [EmployeeID = 6, Location = \"Seattle\"],\r\n            [EmployeeID = 7, Location = \"Vancouver\"]\r\n        },\r\n        type table [EmployeeID = nullable number, Location = nullable text]\r\n    ),\r\n    \"Location\",\r\n    {\"Count\", each Table.RowCount(_)},\r\n    [IgnoreCase = true, IgnoreSpace = true]\r\n)",
            "Result": "Table.FromRecords({\r\n    [Location = \"Seattle\", Count = 4],\r\n    [Location = \"Vancouver\", Count = 3]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.FuzzyJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyJoin",
        "Documentation.Description": "Une as filas de dúas táboas que coinciden parcialmente baseándose nas claves indicadas.",
        "Documentation.LongDescription": "<p>Une as filas de <code>table1</code> coas filas de <code>table2</code> baseándose nunha coincidencia parcial dos valores das columnas de clave seleccionadas por <code>key1</code> (para <code>table1</code>) e <code>key2</code> (para <code>table2</code>).</p>\r\n<p>A coincidencia parcial é unha comparación baseada na similitude do texto, non na igualdade deste.</p>\r\n<p>Por defecto, execútase unha combinación interna; porén, pódese incluír unha <code>joinKind</code> opcional para especificar o tipo de combinación. As opcións inclúen:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Pódese incluír un conxunto de <code>joinOptions</code> opcional para especificar como comparar as columnas de clave. As opcións inclúen:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Un n&#250;mero entre 1 e 8 que especifica o n&#250;mero de subprocesos paralelos que se van usar para as coincidencias parciais. O valor predefinido &#233; 1.</li>\r\n<li><code>Culture</code> : Permite buscar coincidencias en rexistros segundo regras espec&#237;ficas da referencia cultural. Pode ser calquera nome de referencia cultural v&#225;lido. Por exemplo, un opci&#243;n de referencia cultural de &quot;ja-JP&quot; agrupa rexistros segundo a referencia cultural Xapon&#233;s. O valor predefinido &#233; &quot;&quot;, que busca coincidencias segundo a referencia cultural Ingl&#233;s invariable.</li>\r\n<li><code>IgnoreCase</code> : Valor l&#243;xico (verdadeiro/falso) que permite buscar coincidencias en claves sen diferenciar entre mai&#250;sculas e min&#250;sculas. Por exemplo, se &#233; verdadeiro, &quot;Grapes&quot; agr&#250;pase con &quot;grapes&quot;. O valor predefinido &#233; verdadeiro.</li>\r\n<li><code>IgnoreSpace</code> : Valor l&#243;xico (verdadeiro/falso) que permite combinar partes de texto para buscar coincidencias. Por exemplo, se &#233; verdadeiro, &quot;Gra pes&quot; agr&#250;pase con &quot;Grapes&quot;. O valor predefinido &#233; verdadeiro.</li>\r\n<li><code>NumberOfMatches</code> : N&#250;mero enteiro que especifica o n&#250;mero m&#225;ximo de filas coincidentes que se pode devolver para cada fila de entrada. Por exemplo, un valor de 1 devolver&#225; como m&#225;ximo unha fila coincidente para cada fila de entrada. Se non se fornece esta opci&#243;n, dev&#243;lvense todas as filas coincidentes.</li>\r\n<li><code>SimilarityColumnName</code> : Nome para a columna que mostra a semellanza entre un valor de entrada e o valor representativo para a devandita entrada. O valor predefinido &#233; null e, nese caso, non se pode engadir unha columna para semellanzas nova.</li>\r\n<li><code>Threshold</code> : N&#250;mero entre 0,00 e 1,00 que especifica a puntuaci&#243;n de semellanza na que se far&#225;n coincidir dous valores.\r\n    Por exemplo, &quot;Grapes&quot; e &quot;Graes&quot; (falta o &quot;p&quot;) fanse coincidir s&#243; se esta opci&#243;n est&#225; configurada en menos de 0,90.\r\n    Un limiar de 1,00 permite s&#243; coincidencias exactas.\r\n    (T&#233;&#241;ase en conta que unha “coincidencia exacta” aproximada pode ignorar diferenzas como mai&#250;sculas e min&#250;sculas, orde das palabras e puntuaci&#243;n).\r\n    O valor predefinido &#233; 0,80.</li>\r\n<li><code>TransformationTable</code> : T&#225;boa que permite facer coincidir rexistros segundo asignaci&#243;ns de valores personalizadas. Debe conter as columnas &quot;Desde&quot; e &quot;At&#233;&quot;. Por exemplo, &quot;Grapes&quot; faise coincidir con &quot;Raisins&quot; se se fornece unha t&#225;boa de transformaci&#243;n na que a columna &quot;Desde&quot; conte&#241;a &quot;Grapes&quot; e a columna &quot;At&#233;&quot; conte&#241;a &quot;Raisins&quot;. Te&#241;a en conta que se aplicar&#225; a transformaci&#243;n a todas as ocorrencias do texto na t&#225;boa de transformaci&#243;n. Coa t&#225;boa de transformaci&#243;n anterior, &quot;Grapes are sweet&quot; faise coincidir tam&#233;n con &quot;Raisins are sweet&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n    ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Combinación parcial interna esquerda de dúas táboas baseadas en [FirstName]",
            "Code": "Table.FuzzyJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 1,\r\n\t\t\t  FirstName2 = \"Bob\",\r\n\t\t\t  State = \"TX\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 1,\r\n\t\t\t  FirstName1 = \"Bob\",\r\n\t\t\t  Phone = \"555-1234\",\r\n\t\t\t  CustomerStateID = 2,\r\n\t\t\t  FirstName2 = \"bOB\",\r\n\t\t\t  State = \"CA\"\r\n\t\t],\r\n    [\r\n\t\t\t  CustomerID = 2,\r\n\t\t\t  FirstName1 = \"Robert\",\r\n\t\t\t  Phone = \"555-4567\",\r\n\t\t\t  CustomerStateID = null,\r\n\t\t\t  FirstName2 = null,\r\n\t\t\t  State = null\r\n\t\t]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.FuzzyNestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.FuzzyNestedJoin",
        "Documentation.Description": "Executa unha asociación parcial entre táboas en columnas fornecidas e produce o resultado da unión nunha nova columna.",
        "Documentation.LongDescription": "<p>Une as filas de <code>table1</code> coas filas de <code>table2</code> baseándose na coincidencia parcial dos valores das columnas clave seleccionadas por <code>key1</code> (para <code>table1</code>) e <code>key2</code> (para <code>table2</code>). Os resultados devólvense nunha columna nova denominada <code>newColumnName</code>.</p>\r\n<p>A coincidencia parcial é unha comparación baseada na similitude do texto, non na igualdade deste.</p>\r\n<p>O <code>joinKind</code> opcional especifica o tipo de asociación que realizar. Por defecto, execútase unha combinación externa esquerda se non se especifica ningún <code>joinKind</code>. As opcións inclúen:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Pode incluírse un conxunto opcional de <code>joinOptions</code> para especificar como realizar a comparación das columnas clave. As opcións inclúen:\r\n    <ul>\r\n<li><code>ConcurrentRequests</code> : Un n&#250;mero entre 1 e 8 que especifica o n&#250;mero de subprocesos paralelos que se van usar para as coincidencias parciais. O valor predefinido &#233; 1.</li>\r\n<li><code>Culture</code> : Permite buscar coincidencias en rexistros segundo regras espec&#237;ficas da referencia cultural. Pode ser calquera nome de referencia cultural v&#225;lido. Por exemplo, un opci&#243;n de referencia cultural de &quot;ja-JP&quot; agrupa rexistros segundo a referencia cultural Xapon&#233;s. O valor predefinido &#233; &quot;&quot;, que busca coincidencias segundo a referencia cultural Ingl&#233;s invariable.</li>\r\n<li><code>IgnoreCase</code> : Valor l&#243;xico (verdadeiro/falso) que permite buscar coincidencias en claves sen diferenciar entre mai&#250;sculas e min&#250;sculas. Por exemplo, se &#233; verdadeiro, &quot;Grapes&quot; agr&#250;pase con &quot;grapes&quot;. O valor predefinido &#233; verdadeiro.</li>\r\n<li><code>IgnoreSpace</code> : Valor l&#243;xico (verdadeiro/falso) que permite combinar partes de texto para buscar coincidencias. Por exemplo, se &#233; verdadeiro, &quot;Gra pes&quot; agr&#250;pase con &quot;Grapes&quot;. O valor predefinido &#233; verdadeiro.</li>\r\n<li><code>NumberOfMatches</code> : N&#250;mero enteiro que especifica o n&#250;mero m&#225;ximo de filas coincidentes que se pode devolver para cada fila de entrada. Por exemplo, un valor de 1 devolver&#225; como m&#225;ximo unha fila coincidente para cada fila de entrada. Se non se fornece esta opci&#243;n, dev&#243;lvense todas as filas coincidentes.</li>\r\n<li><code>SimilarityColumnName</code> : Nome para a columna que mostra a semellanza entre un valor de entrada e o valor representativo para a devandita entrada. O valor predefinido &#233; null e, nese caso, non se pode engadir unha columna para semellanzas nova.</li>\r\n<li><code>Threshold</code> : N&#250;mero entre 0,00 e 1,00 que especifica a puntuaci&#243;n de semellanza na que se far&#225;n coincidir dous valores.\r\n    Por exemplo, &quot;Grapes&quot; e &quot;Graes&quot; (falta o &quot;p&quot;) fanse coincidir s&#243; se esta opci&#243;n est&#225; configurada en menos de 0,90.\r\n    Un limiar de 1,00 permite s&#243; coincidencias exactas.\r\n    (T&#233;&#241;ase en conta que unha “coincidencia exacta” aproximada pode ignorar diferenzas como mai&#250;sculas e min&#250;sculas, orde das palabras e puntuaci&#243;n).\r\n    O valor predefinido &#233; 0,80.</li>\r\n<li><code>TransformationTable</code> : T&#225;boa que permite facer coincidir rexistros segundo asignaci&#243;ns de valores personalizadas. Debe conter as columnas &quot;Desde&quot; e &quot;At&#233;&quot;. Por exemplo, &quot;Grapes&quot; faise coincidir con &quot;Raisins&quot; se se fornece unha t&#225;boa de transformaci&#243;n na que a columna &quot;Desde&quot; conte&#241;a &quot;Grapes&quot; e a columna &quot;At&#233;&quot; conte&#241;a &quot;Raisins&quot;. Te&#241;a en conta que se aplicar&#225; a transformaci&#243;n a todas as ocorrencias do texto na t&#225;boa de transformaci&#243;n. Coa t&#225;boa de transformaci&#243;n anterior, &quot;Grapes are sweet&quot; faise coincidir tam&#233;n con &quot;Raisins are sweet&quot;.</li>\r\n</ul>\r\n\r\n</p>\r\n",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Combinación parcial interna esquerda de dúas táboas baseadas en [FirstName]",
            "Code": "Table.FuzzyNestedJoin(\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerID = 1, FirstName1 = \"Bob\", Phone = \"555-1234\"],\r\n\t\t        [CustomerID = 2, FirstName1 = \"Robert\", Phone = \"555-4567\"]\r\n\t      },\r\n        type table [CustomerID = nullable number, FirstName1 = nullable text, Phone = nullable text]\r\n    ),\r\n\t  {\"FirstName1\"},\r\n\t  Table.FromRecords(\r\n        {\r\n\t\t        [CustomerStateID = 1, FirstName2 = \"Bob\", State = \"TX\"],\r\n\t\t        [CustomerStateID = 2, FirstName2 = \"bOB\", State = \"CA\"]\r\n\t      },\r\n        type table [CustomerStateID = nullable number, FirstName2 = nullable text, State = nullable text]\r\n    ),\r\n\t  {\"FirstName2\"},\r\n\t  \"NestedTable\",\r\n\t  JoinKind.LeftOuter,\r\n\t  [IgnoreCase = true, IgnoreSpace = false]\r\n)",
            "Result": "Table.FromRecords({\r\n    [\r\n\t\t    CustomerID = 1,\r\n\t\t    FirstName1 = \"Bob\",\r\n\t\t    Phone = \"555-1234\",\r\n\t\t    NestedTable = Table.FromRecords({\r\n            [\r\n\t\t\t\t      CustomerStateID = 1,\r\n\t\t\t\t      FirstName2 = \"Bob\",\r\n\t\t\t\t      State = \"TX\"\r\n\t\t\t      ],\r\n            [\r\n\t\t\t\t      CustomerStateID = 2,\r\n\t\t\t\t      FirstName2 = \"bOB\",\r\n\t\t\t\t      State = \"CA\"\r\n\t\t\t      ]\r\n\t\t    })\r\n\t  ],\r\n    [\r\n\t\t  CustomerID = 2,\r\n\t\t  FirstName1 = \"Robert\",\r\n\t\t  Phone = \"555-4567\",\r\n\t\t  NestedTable = Table.FromRecords({})\r\n\t  ]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "joinOptions": "record"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Group",
      "Documentation": {
        "Documentation.Name": "Table.Group",
        "Documentation.Description": "Agrupa filas na táboa que teñen a mesma clave.",
        "Documentation.LongDescription": "Agrupa as filas de <code>table</code> segundo as columnas de clave que define <code>key</code>. O <code>key</code> pode ser só o nome dunha columna ou unha lista de nomes de columnas. \r\n    Para cada grupo, xérase un rexistro que contén as columnas de clave (e os seus valores), xunto coas columnas agregadas que especifica <code>aggregatedColumns</code>. \r\n    De maneira opcional, poden especificarse <code>groupKind</code> e <code>comparer</code>.<br>\r\n    <br>\r\n    Se os datos xa están ordenados segundo as columnas de clave, pode fornecerse un <code>groupKind</code> de GroupKind.Local. Isto pode mellorar o desempeño do agrupamento en determinados casos, \r\n dado que se asume que todas as columnas cun conxunto de valores de clave determinado son contiguos. <br>\r\n    <br>\r\n    Cando se pasa un <code>comparer</code>, cómpre sinalar que se trata claves diverxentes como iguais, unha fila pode colocarse nun grupo cuxas claves diverxan das súas. <br>\r\n    <br>\r\n    Esta función non garante que volva a orde das columnas.\r\n  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Agrupar a táboa engadindo unha columna agregada [total] que contén a suma de prezos (\"each List.Sum([price])\").",
            "Code": "Table.Group(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, price = 20],\r\n        [CustomerID = 2, price = 10],\r\n        [CustomerID = 2, price = 20],\r\n        [CustomerID = 1, price = 10],\r\n        [CustomerID = 3, price = 20],\r\n        [CustomerID = 3, price = 5]\r\n    }),\r\n    \"CustomerID\",\r\n    {\"total\", each List.Sum([price])}\r\n)",
            "Result": "Table.FromRecords(\r\n    {\r\n        [CustomerID = 1, total = 30],\r\n        [CustomerID = 2, total = 30],\r\n        [CustomerID = 3, total = 25]\r\n    },\r\n    {\"CustomerID\", \"total\"}\r\n)"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "key": "any",
        "aggregatedColumns": "list",
        "groupKind": "GroupKind.Type",
        "comparer": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.InsertRows",
      "Documentation": {
        "Documentation.Name": "Table.InsertRows",
        "Documentation.Description": "Insire unha lista de filas na táboa na posición especificada.",
        "Documentation.LongDescription": "Devolve unha táboa coa lista de filas, <code>rows</code>, inserida no <code>table</code> na posición determinada, <code>offset</code>. Cada columna da fila para inserir debe coincidir co tipo de columna da táboa.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Inserir a fila na táboa na posición 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    1,\r\n    {[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n})"
          },
          {
            "Description": "Inserir dúas filas na táboa na posición 1.",
            "Code": "Table.InsertRows(\r\n    Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}),\r\n    1,\r\n    {\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    }\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "rows": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Join",
      "Documentation": {
        "Documentation.Name": "Table.Join",
        "Documentation.Description": "Une as filas de dúas táboas que coinciden baseándose nas claves indicadas.",
        "Documentation.LongDescription": "<p>Une as filas de <code>table1</code> coas filas de <code>table2</code> baseándose na igualdade dos valores das columnas clave seleccionadas por <code>key1</code> (para <code>table1</code>) e <code>key2</code> (para <code>table2</code>).</p>\r\n<p>Por defecto, execútase unha asociación interna; porén, pódese incluír unha <code>joinKind</code> opcional para especificar o tipo de asociación. As opcións inclúen:\r\n    <ul>\r\n<li><code>JoinKind.Inner</code></li>\n<li><code>JoinKind.LeftOuter</code></li>\n<li><code>JoinKind.RightOuter</code></li>\n<li><code>JoinKind.FullOuter</code></li>\n<li><code>JoinKind.LeftAnti</code></li>\n<li><code>JoinKind.RightAnti</code></li>\n</ul>\r\n\r\n</p>\r\n<p>Pode incluírse un conxunto opcional de <code>keyEqualityComparers</code> para especificar como realizar a comparación coas columnas clave. Este parámetro só está pensado para uso interno actualmente.</p>",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Une dúas táboas usando unha única columna clave.",
            "Code": "Table.Join(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"CustomerID\",\r\n    Table.FromRecords({\r\n        [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n        [OrderID = 2, CustomerID = 1, Item = \"1 lb. worms\", Price = 5.0],\r\n        [OrderID = 3, CustomerID = 2, Item = \"Fishing net\", Price = 25.0],\r\n        [OrderID = 4, CustomerID = 3, Item = \"Fish tazer\", Price = 200.0],\r\n        [OrderID = 5, CustomerID = 3, Item = \"Bandaids\", Price = 2.0],\r\n        [OrderID = 6, CustomerID = 1, Item = \"Tackle box\", Price = 20.0],\r\n        [OrderID = 7, CustomerID = 5, Item = \"Bait\", Price = 3.25]\r\n    }),\r\n    \"CustomerID\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 1, Item = \"Fishing rod\", Price = 100],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 2, Item = \"1 lb. worms\", Price = 5],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", OrderID = 3, Item = \"Fishing net\", Price = 25],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 4, Item = \"Fish tazer\", Price = 200],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\", OrderID = 5, Item = \"Bandaids\", Price = 2],\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", OrderID = 6, Item = \"Tackle box\", Price = 20]\r\n})"
          },
          {
            "Description": "Una dúas táboas que teñan nomes de columnas en conflito, mediante varias columnas clave.",
            "Code": "let\r\n    customers = Table.FromRecords({\r\n        [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    orders = Table.FromRecords({\r\n        [TenantID = 1, OrderID = 1, CustomerID = 1, Name = \"Fishing rod\", Price = 100.0],\r\n        [TenantID = 1, OrderID = 2, CustomerID = 1, Name = \"1 lb. worms\", Price = 5.0],\r\n        [TenantID = 1, OrderID = 3, CustomerID = 2, Name = \"Fishing net\", Price = 25.0]\r\n    })\r\nin\r\n    Table.Join(\r\n        customers,\r\n        {\"TenantID\", \"CustomerID\"},\r\n        Table.PrefixColumns(orders, \"Order\"),\r\n        {\"Order.TenantID\", \"Order.CustomerID\"}\r\n    )",
            "Result": "Table.FromRecords({\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 1, Order.CustomerID = 1, Order.Name = \"Fishing rod\", Order.Price = 100],\r\n    [TenantID = 1, CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Order.TenantID = 1, Order.OrderID = 2, Order.CustomerID = 1, Order.Name = \"1 lb. worms\", Order.Price = 5],\r\n    [TenantID = 1, CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\", Order.TenantID = 1, Order.OrderID = 3, Order.CustomerID = 2, Order.Name = \"Fishing net\", Order.Price = 25]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "table",
        "key2": "any",
        "joinKind": "JoinKind.Type",
        "joinAlgorithm": "JoinAlgorithm.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.MaxN",
      "Documentation": {
        "Documentation.Name": "Table.MaxN",
        "Documentation.Description": "Devolve a(s) fila(s) maior(es) usando os criterios indicados.",
        "Documentation.LongDescription": "Devolve as filas maiores de <code>table</code>, dado o valor <code>comparisonCriteria</code>.\r\n    Despois de ordenar as filas, débese especificar o parámetro <code>countOrCondition</code> para filtrar aínda máis o resultado. Teña en conta que o algoritmo de ordenación non garante un resultado ordenado fixo. O parámetro <code>countOrCondition</code> pode aceptar varios formatos:\r\n    <ul>\r\n        <li> Se se especifica un número, devólvese unha lista de ata <code>countOrCondition</code> elementos en orde ascendente. </li>\r\n        <li> Se se especifica unha condición, devólvese unha lista de elementos que inicialmente cumpren a condición. Cando un elemento non cumpre a condición, non se teñen en conta máis elementos. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Buscar a fila co maior valor na columna [a] coa condición [a] > 0, na táboa. As filas están ordenadas antes de aplicar o filtro.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [a] > 0\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 6, b = 2],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Buscar a fila co maior valor na columna [a] coa condición [b] > 0, na táboa. As filas están ordenadas antes de aplicar o filtro.",
            "Code": "Table.MaxN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] > 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.MinN",
      "Documentation": {
        "Documentation.Name": "Table.MinN",
        "Documentation.Description": "Devolve a(s) fila(s) máis pequena(s) usando os criterios indicados.",
        "Documentation.LongDescription": "Devolve a(s) fila(s) máis pequena(s) da <code>table</code>, indicados os <code>comparisonCriteria</code>. Despois de ordenar as filas, débese especificar o parámetro <code>countOrCondition</code> para filtrar aínda máis o resultado. Teña en conta que o algoritmo de ordenación non garante un resultado ordenado fixo. O parámetro <code>countOrCondition</code> pode aceptar varias formas:\r\n    <ul>\r\n        <li> Se se especifica un número, devólvese unha lista de ata <code>countOrCondition</code> elementos en orde ascendente. </li>\r\n        <li> Se se especifica unha condición, devólvense unha lista de elementos que inicialmente cumpren a condición. Cando un elemento non cumpre a condición, non se teñen en conta máis elementos. </li>\r\n </ul>",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Buscar a fila co valor máis pequeno na columna [a] coa condición [a] < 3, na táboa. As filas están ordenadas antes de aplicar o filtro.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 0, b = 0],\r\n        [a = 6, b = 4]\r\n    }),\r\n    \"a\",\r\n    each [a] < 3\r\n)",
            "Result": "Table.FromRecords({\r\n    [a = 0, b = 0],\r\n    [a = 2, b = 4]\r\n})"
          },
          {
            "Description": "Buscar a fila co valor máis pequeno na columna [a] coa condición [b] < 0, na táboa. As filas están ordenadas antes de aplicar o filtro.",
            "Code": "Table.MinN(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 8, b = 0],\r\n        [a = 6, b = 2]\r\n    }),\r\n    \"a\",\r\n    each [b] < 0\r\n)",
            "Result": "Table.FromRecords({})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "countOrCondition": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.NestedJoin",
      "Documentation": {
        "Documentation.Name": "Table.NestedJoin",
        "Documentation.Description": "Executa unha asociación entre táboas en columnas fornecidas e produce o resultado da unión nunha nova columna.",
        "Documentation.LongDescription": "<p>Une as filas de <code>table1</code> coas filas de <code>table2</code> baseándose na igualdade dos valores das columnas clave seleccionadas por <code>key1</code> (para <code>table1</code>) e <code>key2</code> (para <code>table2</code>). Os resultados introdúcense na columna denominada <code>newColumnName</code>.</p>\r\n<p>O <code>joinKind</code> opcional especifica o tipo de combinación que realizar. Por defecto, execútase unha combinación externa esquerda se non se especifica ningún <code>joinKind</code>.</p>\r\n<p>Pode incluírse un conxunto opcional de <code>keyEqualityComparers</code> para especificar como realizar a comparación coas columnas clave. Esta funcionalidade só está pensada para uso interno actualmente.</p>  ",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Une dúas táboas usando unha única columna clave.",
            "Code": "Table.NestedJoin(\r\n    Table.FromRecords({\r\n        [CustomerToCall = 1],\r\n        [CustomerToCall = 3]\r\n    }),\r\n    {\"CustomerToCall\"},\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"CustomerID\"},\r\n    \"CustomerDetails\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [CustomerToCall = 1, CustomerDetails = Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]})],\r\n    [CustomerToCall = 3, CustomerDetails = Table.FromRecords({[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]})]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table1": "table",
        "key1": "any",
        "table2": "any",
        "key2": "any",
        "newColumnName": "text",
        "joinKind": "JoinKind.Type",
        "keyEqualityComparers": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.Pivot",
      "Documentation": {
        "Documentation.Name": "Table.Pivot",
        "Documentation.Description": "Dado un par de columnas que representan os pares atributo-valor, xira os datos na columna de atributo nunha cabeceira das columnas.",
        "Documentation.LongDescription": "Dado un par de columnas que representan os pares atributo-valor, xira os datos na columna de atributo nunha cabeceira das columnas.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Toma os valores \"a\", \"b\" e \"c\" na columna atributo da táboa <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> e as dinamiza nas súas propias columnas.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 3],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          },
          {
            "Description": "Toma os valores \"a\", \"b\" e \"c\" na columna atributo da táboa <code>({ [ key = \"x\", attribute = \"a\", value = 1 ], [ key = \"x\", attribute = \"c\", value = 3 ], [ key = \"x\", attribute = \"c\", value = 5 ], [ key = \"y\", attribute = \"a\", value = 2 ], [ key = \"y\", attribute = \"b\", value = 4 ] })</code> e as dinamiza nas súas propias columnas.  O atributo \"c\" para a clave \"x\" ten varios valores asociados a el, por iso utiliza a función List.Max para resolver o conflito.",
            "Code": "Table.Pivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", attribute = \"a\", value = 1],\r\n        [key = \"x\", attribute = \"c\", value = 3],\r\n        [key = \"x\", attribute = \"c\", value = 5],\r\n        [key = \"y\", attribute = \"a\", value = 2],\r\n        [key = \"y\", attribute = \"b\", value = 4]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\",\r\n    List.Max\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", a = 1, b = null, c = 5],\r\n    [key = \"y\", a = 2, b = 4, c = null]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotValues": "list",
        "attributeColumn": "text",
        "valueColumn": "text",
        "aggregationFunction": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceRows",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRows",
        "Documentation.Description": "Substituír o intervalo de filas coa(s) fila(s) especificada(s).",
        "Documentation.LongDescription": "Substituír un número especificado de filas, <code>count</code>, da <code>table</code> de entrada co <code>rows</code> especificado, comezando despois de <code>offset</code>. O parámetro <code>rows</code> é unha lista de rexistros.\r\n    <ul>\r\n       <li><code>table</code>: a táboa onde se executa a substitución.</li>\r\n       <li><code>offset</code>: o número de filas que se vai ignorar antes de facer a substitución.</li>\r\n       <li><code>count</code>: o número de filas que se van substituír.</li>\r\n       <li><code>rows</code>: a lista de rexistros de fila que se van inserir na <code>table</code> na localización especificada por <code>offset</code>.</li>\r\n    </ul>\r\n",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Comezando na posición 1, substituír 3 filas.",
            "Code": "Table.ReplaceRows(\r\n    Table.FromRecords({\r\n        [Column1 = 1],\r\n        [Column1 = 2],\r\n        [Column1 = 3],\r\n        [Column1 = 4],\r\n        [Column1 = 5]\r\n    }),\r\n    1,\r\n    3,\r\n    {[Column1 = 6], [Column1 = 7]}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Column1 = 1],\r\n    [Column1 = 6],\r\n    [Column1 = 7],\r\n    [Column1 = 5]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "offset": "number",
        "count": "number",
        "rows": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceValue",
        "Documentation.Description": "Substitúe un valor con outro nas columnas especificadas.",
        "Documentation.LongDescription": "Substitúe <code>oldValue</code> con <code>newValue</code> nas columnas especificadas da <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Substitúe o texto \"adeus\" por \"mundo\" na columna B, facendo coincidir só o valor completo.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"goodbye\"],\r\n        [A = 3, B = \"goodbyes\"]\r\n    }),\r\n    \"goodbye\",\r\n    \"world\",\r\n    Replacer.ReplaceValue,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"],\r\n    [A = 3, B = \"goodbyes\"]\r\n})"
          },
          {
            "Description": "Substitúe o texto \"o teu\" por \"ou\" na columna B, facendo coincidir calquera parte do valor.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [A = 1, B = \"hello\"],\r\n        [A = 2, B = \"wurld\"]\r\n    }),\r\n    \"ur\",\r\n    \"or\",\r\n    Replacer.ReplaceText,\r\n    {\"B\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [A = 1, B = \"hello\"],\r\n    [A = 2, B = \"world\"]\r\n})"
          },
          {
            "Description": "Anonimizar os nomes dos empregados dos EUA.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each if [Country] = \"US\" then [Name] else false,\r\n    each Text.Repeat(\"*\", Text.Length([Name])),\r\n    Replacer.ReplaceValue,\r\n    {\"Name\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"*****\", Country = \"US\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          },
          {
            "Description": "Anonimizar todas as columnas dos empregados dos EUA.",
            "Code": "Table.ReplaceValue(\r\n    Table.FromRecords({\r\n        [Name = \"Cindy\", Country = \"US\"],\r\n        [Name = \"Bob\", Country = \"CA\"]\r\n    }),\r\n    each [Country] = \"US\",\r\n    \"?\",\r\n    (currentValue, isUS, replacementValue) =>\r\n        if isUS then\r\n            Text.Repeat(replacementValue, Text.Length(currentValue))\r\n        else\r\n            currentValue,\r\n    {\"Name\", \"Country\"}\r\n)",
            "Result": "Table.FromRecords({\r\n    [Name = \"?????\", Country = \"??\"],\r\n    [Name = \"Bob\", Country = \"CA\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function",
        "columnsToSearch": "list"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Table.SplitColumn",
      "Documentation": {
        "Documentation.Name": "Table.SplitColumn",
        "Documentation.Description": "Divide as columnas especificadas nun conxunto de columnas adicionais utilizando a función do divisor especificada.",
        "Documentation.LongDescription": "Divide as columnas especificadas nun conxunto de columnas adicionais utilizando a función do divisor especificada.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Dividir a columna [Name] na posición de \"i\" en dúas columnas",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    })\r\nin\r\n    Table.SplitColumn(Customers, \"Name\", Splitter.SplitTextByDelimiter(\"i\"), 2)",
            "Result": "Table.FromRecords({\r\n    [CustomerID = 1, Name.1 = \"Bob\", Name.2 = null, Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name.1 = \"J\", Name.2 = \"m\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name.1 = \"Paul\", Name.2 = null, Phone = \"543-7890\"],\r\n    [CustomerID = 4, Name.1 = \"Cr\", Name.2 = \"st\", Phone = \"232-1550\"]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "sourceColumn": "text",
        "splitter": "function",
        "columnNamesOrNumber": "any",
        "default": "any",
        "extraColumns": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Table.Unpivot",
      "Documentation": {
        "Documentation.Name": "Table.Unpivot",
        "Documentation.Description": "Traduce un conxunto de columnas nunha táboa en pares atributo-valor.",
        "Documentation.LongDescription": "Traduce un conxunto de columnas da táboa en pares de atributo-valor, xunto co resto dos valores de cada fila.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Tomar as columnas \"a\", \"b\" e \"c\" da táboa <code>({[ key = \"x\", a = 1, b = null, c = 3 ], [ key = \"y\", a = 2, b = 4, c = null ]})</code> e anular a dinamización delas en pares atributo-valor.",
            "Code": "Table.Unpivot(\r\n    Table.FromRecords({\r\n        [key = \"x\", a = 1, b = null, c = 3],\r\n        [key = \"y\", a = 2, b = 4, c = null]\r\n    }),\r\n    {\"a\", \"b\", \"c\"},\r\n    \"attribute\",\r\n    \"value\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"x\", attribute = \"a\", value = 1],\r\n    [key = \"x\", attribute = \"c\", value = 3],\r\n    [key = \"y\", attribute = \"a\", value = 2],\r\n    [key = \"y\", attribute = \"b\", value = 4]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Table.UnpivotOtherColumns",
      "Documentation": {
        "Documentation.Name": "Table.UnpivotOtherColumns",
        "Documentation.Description": "Traduce todas as columnas distintas do conxunto especificado en pares atributo-valor.",
        "Documentation.LongDescription": "Traduce todas as columnas distintas do conxunto especificado en pares de atributo-valor, xunto co resto dos valores de cada fila.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Traduce todas as columnas distintas do conxunto especificado en pares de atributo-valor, xunto co resto dos valores de cada fila.",
            "Code": "Table.UnpivotOtherColumns(\r\n    Table.FromRecords({\r\n        [key = \"key1\", attribute1 = 1, attribute2 = 2, attribute3 = 3],\r\n        [key = \"key2\", attribute1 = 4, attribute2 = 5, attribute3 = 6]\r\n    }),\r\n    {\"key\"},\r\n    \"column1\",\r\n    \"column2\"\r\n)",
            "Result": "Table.FromRecords({\r\n    [key = \"key1\", column1 = \"attribute1\", column2 = 1],\r\n    [key = \"key1\", column1 = \"attribute2\", column2 = 2],\r\n    [key = \"key1\", column1 = \"attribute3\", column2 = 3],\r\n    [key = \"key2\", column1 = \"attribute1\", column2 = 4],\r\n    [key = \"key2\", column1 = \"attribute2\", column2 = 5],\r\n    [key = \"key2\", column1 = \"attribute3\", column2 = 6]\r\n})"
          }
        ]
      },
      "ReturnType": "table",
      "Parameters": {
        "table": "table",
        "pivotColumns": "list",
        "attributeColumn": "text",
        "valueColumn": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "TeamsAnalytics.Contents",
      "Documentation": {
        "Documentation.Name": "Microsoft Teams Personal Analytics",
        "Documentation.LongDescription": "<p>The Teams Analytics connector enables you to get insights into your usage of Teams. Data is available for both your personal activity in Teams as well as the activity in Teams you are a member of.</p>\r\n<p>Data is available for prior 90 days. </p>\r\n<p> For details of the types of data available, please refer to the following help documentation: </p>\r\n<ul>\r\n<li><b>Teams Usage:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/teams-usage-report</li>\r\n<li><b>Teams User Activity:</b> https://docs.microsoft.com/en-us/microsoftteams/teams-analytics-and-reports/user-activity-report</li>\r\n</ul>"
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Tenforce.Contents",
      "Documentation": {
        "Documentation.Name": "Tenforce (Smart)List",
        "Documentation.LongDescription": "Selection data"
      },
      "ReturnType": "table",
      "Parameters": {
        "ApplicationUrl": "text",
        "ListId": "text",
        "DataType": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VSTS.Views",
      "Documentation": {
        "Documentation.Description": "Indique os nomes da organización e do proxecto.",
        "Documentation.DisplayName": "VSTS.Views",
        "Documentation.Caption": "VSTS.Views",
        "Documentation.Name": "Azure DevOps Services",
        "Documentation.LongDescription": "Devolve unha táboa de fontes OData proporcionada por Azure DevOps."
      },
      "ReturnType": "table",
      "Parameters": {
        "url": "text",
        "project": "text",
        "areaPath": "text",
        "options": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "WebtrendsAnalytics.Tables",
      "Documentation": {
        "Documentation.Description": "Enter the Profile ID associated with your Webtrends account.",
        "Documentation.DisplayName": "Webtrends",
        "Documentation.Caption": "Tables",
        "Documentation.Name": "Webtrends Analytics",
        "Documentation.LongDescription": "Returns a table with relevant Webtrends data."
      },
      "ReturnType": "table",
      "Parameters": {
        "ProfileId": "text",
        "Period": "text",
        "reportType": "text",
        "startDate": "date",
        "endDate": "date",
        "startPeriod": "text",
        "endPeriod": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Wrike.Contents",
      "Documentation": {
        "Documentation.Name": "Wrike",
        "Documentation.LongDescription": " Shared function and first entry point to Connector. Display initial Navigation hierarchy.",
        "Documentation.Examples": []
      },
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "appFigures.Tables",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "eWayCRM.Contents",
      "Documentation": {},
      "ReturnType": "table",
      "Parameters": {
        "IncludeRelations": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "inwink.ScopeContents",
      "Documentation": {
        "Documentation.Name": "inwink source",
        "Documentation.LongDescription": "inwink data"
      },
      "ReturnType": "table",
      "Parameters": {
        "customerId": "text",
        "scope": "text",
        "scopeId": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.SampleStratifiedWithHoldout",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "strata": "text",
        "totalSize": "number",
        "data": "table",
        "targetSampleSize": "number",
        "holdoutRatio": "number",
        "stratifyTrainingSet": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AI.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Capacities",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIFunctions.ExecuteInternal",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "capacityobjectid": "text",
        "params": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIFunctions.GetAutoMLEntity",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "modelDataflowId": "text",
        "entityName": "text",
        "partitionUri": "text",
        "entityAttributes": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AIFunctions.PostProcess",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "input": "table",
        "columnName": "text",
        "functionName": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "AIInsights.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AIInsights.ContentsGenerator",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AML.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AML.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "Acterys.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "AzureMLFunctions.Execute",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "payload": "text",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "AzureMLFunctions.ExecuteBatch",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "uri": "text",
        "key": "text",
        "inputTable": "table",
        "version": "number",
        "dataframeName": "text"
      },
      "RequiredParameters": "5"
    },
    {
      "Name": "BQECore.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "BinaryFormat.Binary",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Binary",
        "Documentation.Description": "Devolve un formato binario que le un valor binario.",
        "Documentation.LongDescription": "Devolve un formato binario que le un valor binario. Se se especifica <code>length</code>, o valor binario conterá ese número de bytes. Se non se especifica <code>length</code>, o valor binario conterá os bytes restantes. O <code>length</code> pode especificarse como un número ou como un formato binario da lonxitude que precede os datos binarios.",
        "Documentation.Category": "Binary Formats.Reading binary data",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "BitSightSecurityRatings.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "company_guid": "text",
        "affects_rating_findings": "logical"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Comparer.Equals",
      "Documentation": {
        "Documentation.Name": "Comparer.Equals",
        "Documentation.Description": "Devolve un valor lóxico baseado na comprobación de igualdade entre os dous valores fornecidos.",
        "Documentation.LongDescription": "Devolve un valor <code>lóxico</code> baseado na comprobación de igualdade sobre os dous valores indicados <code>x</code> e <code>y</code>, utilizando <code>comparer</code>.\r\n       <div>\r\n          <code>comparer</code> é un <code>Comparador</code> que se usa para controlar a comparación.\r\n         Un comparador é unha función que acepta dous argumentos e devolve -1, 0 ou 1 en función de se o primeiro valor é menor, igual ou maior que o segundo.\r\n         Os comparadores poden usarse para proporcionar comparacións que non distingan entre maiúsculas e minúsculas ou que sexan conscientes da cultura e da localización.\r\n       </div>\r\n       <div>\r\n         Os seguintes comparadores integrados están dispoñibles no idioma da fórmula:\r\n       </div>\r\n       <ul>\r\n         <li><code>Comparer.Ordinal</code>: úsase para realizar unha comparación ordinal exacta</li>\r\n         <li><code>Comparer.OrdinalIgnoreCase</code>: úsase para realizar unha comparación ordinal exacta que non distingue entre maiúsculas e minúsculas</li>\r\n         <li> <code>Comparer.FromCulture</code>: Úsase para realizar unha comparación que teña en conta a cultura</li>\r\n      </ul>",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Compare \"1\" e \"A\" utilizando a configuración rexional \"gl-ES\" para determinar se os valores son iguais.",
            "Code": "Comparer.Equals(Comparer.FromCulture(\"en-US\"), \"1\", \"A\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "comparer": "function",
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "DateTime.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.FixedLocalNow",
        "Documentation.Description": "Devolve a data e a hora actuais no fuso horario local. Este valor é fixo e non se vai modificar con sucesivas chamadas.",
        "Documentation.LongDescription": "Devolve un valor <code>datetime</code> definido como a data e a hora actuais no sistema. Este valor é fixo e non se vai modificar con sucesivas chamadas, a diferenza de DateTime.LocalNow, que pode devolver valores distintos durante o transcurso da execución dunha expresión.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTime.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTime.LocalNow",
        "Documentation.Description": "Devolve a data e a hora actuais no fuso horario local.",
        "Documentation.LongDescription": "Devolve un valor <code>datetime</code> definido como a data e a hora actuais no sistema.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": []
      },
      "ReturnType": "datetime",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedLocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedLocalNow",
        "Documentation.Description": "Devolve a data e a hora actuais no fuso horario local. Este valor é fixo e non se vai modificar con sucesivas chamadas.",
        "Documentation.LongDescription": "Devolve un valor <code>datetime</code> definido como a data e a hora actuais no sistema. O valor devolto contén información do fuso horario que representa o fuso horario local. Este valor é fixo e non se vai modificar con sucesivas chamadas, a diferenza de DateTimeZone.LocalNow, que pode devolver valores distintos durante o transcurso da execución dunha expresión.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.FixedUtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FixedUtcNow",
        "Documentation.Description": "Devolve a data e a hora actuais en UTC (o fuso horario GMT). Este valor é fixo e non se vai modificar con sucesivas chamadas.",
        "Documentation.LongDescription": "Devolve a data e a hora actuais en UTC (o fuso horario GMT). Este valor é fixo e non se vai modificar con sucesivas chamadas.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.LocalNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.LocalNow",
        "Documentation.Description": "Devolve a data e a hora actuais no fuso horario local.",
        "Documentation.LongDescription": "Devolve un valor <code>datetimezone</code> definido como a data e a hora actuais no sistema.\r\n    O valor devolto contén información do fuso horario que representa o fuso horario local.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "DateTimeZone.UtcNow",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.UtcNow",
        "Documentation.Description": "Devolve a data e a hora actuais en UTC (o fuso horario GMT).",
        "Documentation.LongDescription": "Devolve a data e a hora actuais en UTC (o fuso horario GMT).",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Obter a data e a hora actuais en UTC.",
            "Code": "DateTimeZone.UtcNow()",
            "Result": "#datetimezone(2011, 8, 16, 23, 34, 37.745, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.ActivityId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.ActivityId",
        "Documentation.Description": "Devolve un identificador opaco para a avaliación que está a executarse actualmente.",
        "Documentation.LongDescription": "Devolve un identificador opaco para a avaliación que está a executarse actualmente.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.CorrelationId",
      "Documentation": {
        "Documentation.Name": "Diagnostics.CorrelationId",
        "Documentation.Description": "Devolve un identificador opaco para relacionar as solicitudes entrantes coas saíntes.",
        "Documentation.LongDescription": "Devolve un identificador opaco para relacionar as solicitudes entrantes coas saíntes.",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Diagnostics.Trace",
      "Documentation": {
        "Documentation.Name": "Diagnostics.Trace",
        "Documentation.Description": "Escribe unha entrada de rastrexo, se o rastrexo está activado, e devolve o valor.",
        "Documentation.LongDescription": "Escribe un rastrexo <code>message</code>, se está activado o rastrexo, e devolve <code>value</code>. Un parámetro opcional <code>delayed</code> especifica se se atrasa a avaliación de <code>value</code> ata rastrexar a mensaxe. <code>traceLevel</code> pode ter un dos seguintes valores:\r\n    <code>TraceLevel.Critical</code>\r\n    <code>TraceLevel.Error</code>,\r\n    <code>TraceLevel.Warning</code>,\r\n    <code>TraceLevel.Information</code>,\r\n    <code>TraceLevel.Verbose</code>.\r\n  ",
        "Documentation.Category": "Diagnostics",
        "Documentation.Examples": [
          {
            "Description": "Rastrexa a mensaxe antes de invocar a función Text.From e devolve o resultado.",
            "Code": "Diagnostics.Trace(TraceLevel.Information, \"TextValueFromNumber\", () => Text.From(123), true)",
            "Result": "\"123\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "traceLevel": "number",
        "message": "any",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "EntersoftBusinessSuite.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "FactSetAnalytics.AuthenticationCheck",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "HexagonSmartApi.ApplyUnitsOfMeasure",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "unitsOfMeasureTarget": "any",
        "unitCategory": "text",
        "fromUnit": "text",
        "toUnit": "text",
        "precision": "number"
      },
      "RequiredParameters": "6"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterUrl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filterTarget": "text",
        "parameterNames": "record",
        "objectHierarchyNameInput": "text",
        "objectHierarchyResourceIdsInput": "text",
        "objectTypesInput": "text",
        "queryExpressionInput": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "IdentityProvider.Default",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Default",
        "Documentation.Description": "O fornecedor de identidades predefinido do computador servidor actual.",
        "Documentation.LongDescription": "O fornecedor de identidades predefinido do computador servidor actual.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "LinkedIn.SalesNavigatorAnalyticsImpl",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "contractName": "text",
        "action": "text",
        "startAt": "date",
        "endAt": "date"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Accumulate",
      "Documentation": {
        "Documentation.Name": "List.Accumulate",
        "Documentation.Description": "Acumula un valor de resumo dos elementos da lista.",
        "Documentation.LongDescription": "Acumula un valor de resumo dos elementos da lista <code>list</code>, utilizando <code>accumulator</code>.\r\n    Pódese establecer un parámetro de propagación opcional, <code>seed</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Acumula o valor de resumo dos elementos da lista {1, 2, 3, 4, 5} utilizando ((estado, actual) => estado + actual ).",
            "Code": "List.Accumulate({1, 2, 3, 4, 5}, 0, (state, current) => state + current)",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "seed": "any",
        "accumulator": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimeZones",
      "Documentation": {
        "Documentation.Name": "List.DateTimeZones",
        "Documentation.Description": "Xera unha lista de valores datetimezone a partir dun valor inicial, un reconto e un valor de duración incremental.",
        "Documentation.LongDescription": "Devolve unha lista de valores <code>datetimezone</code> de tamaño <code>count</code>, comezando en <code>start</code>. O incremento indicado, <code>step</code>, é un valor <code>duration</code> que se engade a cada valor.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de 10 valores comezando 5 minutos antes do Día de Ano Novo (#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0)) incrementándose nun 1 minuto (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimeZones(#datetimezone(2011, 12, 31, 23, 55, 0, -8, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetimezone(2011, 12, 31, 23, 55, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 56, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 57, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 58, 0, -8, 0),\r\n    #datetimezone(2011, 12, 31, 23, 59, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 0, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 1, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 2, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 3, 0, -8, 0),\r\n    #datetimezone(2012, 1, 1, 0, 4, 0, -8, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetimezone",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.DateTimes",
      "Documentation": {
        "Documentation.Name": "List.DateTimes",
        "Documentation.Description": "Xera unha lista de valores datetime a partir dun valor inicial, un reconto e un valor de duración incremental.",
        "Documentation.LongDescription": "Devolve unha lista de valores <code>datetime</code> de tamaño <code>count</code>, comezando en <code>start</code>. O incremento indicado, <code>step</code>, é un valor <code>duration</code> que se engade a cada valor.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de 10 valores comezando 5 minutos antes do Día de Ano Novo (#datetime(2011, 12, 31, 23, 55, 0)) incrementándose nun 1 minuto (#duration(0, 0, 1, 0)).",
            "Code": "List.DateTimes(#datetime(2011, 12, 31, 23, 55, 0), 10, #duration(0, 0, 1, 0))",
            "Result": "{\r\n    #datetime(2011, 12, 31, 23, 55, 0),\r\n    #datetime(2011, 12, 31, 23, 56, 0),\r\n    #datetime(2011, 12, 31, 23, 57, 0),\r\n    #datetime(2011, 12, 31, 23, 58, 0),\r\n    #datetime(2011, 12, 31, 23, 59, 0),\r\n    #datetime(2012, 1, 1, 0, 0, 0),\r\n    #datetime(2012, 1, 1, 0, 1, 0),\r\n    #datetime(2012, 1, 1, 0, 2, 0),\r\n    #datetime(2012, 1, 1, 0, 3, 0),\r\n    #datetime(2012, 1, 1, 0, 4, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "datetime",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Dates",
      "Documentation": {
        "Documentation.Name": "List.Dates",
        "Documentation.Description": "Xera unha lista de valores date a partir dun valor inicial, un reconto e un valor de duración incremental.",
        "Documentation.LongDescription": "Devolve unha lista de valores <code>date</code> de tamaño <code>count</code>, comezando en <code>start</code>. O incremento indicado, <code>step</code>, é un valor <code>duration</code> que se engade a cada valor.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Crea unha lista de 5 valores comezando a Noitevella (#date(2011, 12, 31)) incrementándose en 1 día (#duration(1, 0, 0, 0)).",
            "Code": "List.Dates(#date(2011, 12, 31), 5, #duration(1, 0, 0, 0))",
            "Result": "{\r\n    #date(2011, 12, 31),\r\n    #date(2012, 1, 1),\r\n    #date(2012, 1, 2),\r\n    #date(2012, 1, 3),\r\n    #date(2012, 1, 4)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "date",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Durations",
      "Documentation": {
        "Documentation.Name": "List.Durations",
        "Documentation.Description": "Xera unha lista de duración indicado un valor inicial, unha conta e un valor de duración incremental.",
        "Documentation.LongDescription": "Devolve unha lista de valores <code>count</code> <code>duration</code>, comezando en <code>start</code> e incrementada pola <code>duration</code> <code>step</code> indicada.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Crea unha lista de 5 valores, comezando en 1 hora e incrementándose nunha hora.",
            "Code": "List.Durations(#duration(0, 1, 0, 0), 5, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #duration(0, 1, 0, 0),\r\n    #duration(0, 2, 0, 0),\r\n    #duration(0, 3, 0, 0),\r\n    #duration(0, 4, 0, 0),\r\n    #duration(0, 5, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "duration",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.Generate",
      "Documentation": {
        "Documentation.Name": "List.Generate",
        "Documentation.Description": "Xera unha lista de valores.",
        "Documentation.LongDescription": "Xera unha lista de valores empregando as funcións fornecidas. A función <code>initial</code> xera un valor candidato inicial, que logo se proba con <code>condition</code>.\r\n    Se o valor candidato é aprobado, devólvese na lista resultante e se xera o seguinte valor candidato ao pasar o novo valor aprobado por <code>next</code>.\r\n    Cando un valor candidato non coincide con <code>condition</code>, o proceso de xeración da lista detense.\r\n    Tamén se pode fornecer un parámetro opcional, <code>selector</code>, para transformar os elementos da lista resultante.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Cree unha lista que comece por dez e vaia diminuíndo por un, asegurándose de que cada elemento é maior que cero.",
            "Code": "List.Generate(() => 10, each _ > 0, each _ - 1)",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          },
          {
            "Description": "Xera unha lista de rexistros que conteñen x e y, onde x é un valor e y é unha lista. x debe manterse menor que 10 e representa o número de elementos na lista y. Despois de xerar a lista, só devolve os valores x.",
            "Code": "List.Generate(\r\n    () => [x = 1, y = {}],\r\n    each [x] < 10,\r\n    each [x = List.Count([y]), y = [y] & {x}],\r\n    each [x]\r\n)",
            "Result": "{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "initial": "function",
        "condition": "function",
        "next": "function",
        "selector": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.InsertRange",
      "Documentation": {
        "Documentation.Name": "List.InsertRange",
        "Documentation.Description": "Insire valores nunha lista no índice indicado.",
        "Documentation.LongDescription": "Devolve unha lista producida pola inserción dos valores en <code>values</code> en <code>list</code> en <code>index</code>. A primeira posición da lista está no índice 0.\r\n      <ul>\r\n        <li><code>list</code>: a lista de destino onde se van inserir os valores.</li>\r\n        <li><code>index</code>: o índice da lista de destino (<code>list</code>) onde se van inserir os valores. A primeira posición da lista está no índice 0.</li>\r\n        <li><code>values</code>: a lista de valores na que se van inserir os valores <code>list</code>.</li>\r\n      </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Inserir a lista ({3, 4}) na lista de destino ({1, 2, 5}) no índice 2.",
            "Code": "List.InsertRange({1, 2, 5}, 2, {3, 4})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5\r\n}"
          },
          {
            "Description": "Inserir a lista cunha lista aniñada ({1, {1.1, 1.2}}) na lista de destino ({2, 3, 4}) no índice 0.",
            "Code": "List.InsertRange({2, 3, 4}, 0, {1, {1.1, 1.2}})",
            "Result": "{\r\n    1,\r\n    {\r\n        1.1,\r\n        1.2\r\n    },\r\n    2,\r\n    3,\r\n    4\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "values": "list"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "List.ReplaceRange",
        "Documentation.Description": "Substitúe o número de valores de conta comezando na posición cos valores de substitución.",
        "Documentation.LongDescription": "Substitúe os valores <code>count</code> na <code>list</code> coa lista <code>replaceWith</code>, comezando na posición especificada, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Substituír {7, 8, 9} da lista {1, 2, 7, 8, 9, 5} con {3, 4}.",
            "Code": "List.ReplaceRange({1, 2, 7, 8, 9, 5}, 2, 3, {3, 4})",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number",
        "replaceWith": "list"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "List.ReplaceValue",
        "Documentation.Description": "Busca o valor especificado nunha lista e o substitúe.",
        "Documentation.LongDescription": "Busca o valor especificado <code>oldValue</code> na lista de valores <code>list</code> e substitúe cada ocorrencia co valor de substitución <code>newValue</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Substituír todos os valores \"a\" na lista {\"a\", \"B\", \"a\", \"a\"} con \"A\".",
            "Code": "List.ReplaceValue({\"a\", \"B\", \"a\", \"a\"}, \"a\", \"A\", Replacer.ReplaceText)",
            "Result": "{\"A\", \"B\", \"A\", \"A\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "oldValue": "any",
        "newValue": "any",
        "replacer": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "List.Times",
      "Documentation": {
        "Documentation.Name": "List.Times",
        "Documentation.Description": "Xera unha lista de valores time a partir dun valor inicial, un reconto e un valor de duración incremental.",
        "Documentation.LongDescription": "Devolve unha lista de valores <code>time</code> de tamaño <code>count</code>, comezando en <code>start</code>. O incremento indicado, <code>step</code>, é un valor <code>duration</code> que se engade a cada valor.",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de 4 valores comezando ao mediodía (#time(12, 0, 0)) incrementándose nunha hora (#duration(0, 1, 0, 0)).",
            "Code": "List.Times(#time(12, 0, 0), 4, #duration(0, 1, 0, 0))",
            "Result": "{\r\n    #time(12, 0, 0),\r\n    #time(13, 0, 0),\r\n    #time(14, 0, 0),\r\n    #time(15, 0, 0)\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "time",
        "count": "number",
        "step": "duration"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "List.TransformMany",
      "Documentation": {
        "Documentation.Name": "List.TransformMany",
        "Documentation.Description": "Devolve unha lista na que se transforman os elementos a partir da lista de entrada utilizando as funcións especificadas.",
        "Documentation.LongDescription": "Devolve unha lista cuxos elementos se proxectan desde a lista de entrada..<br>\r\n    <br>\r\n    A función <code>collectionTransform</code> transforma cada elemento nunha lista intermedia e a función <code>resultTransform</code> recibe o elemento orixinal así como un elemento da lista intermedia para construír a final resultado.<br>\r\n    <br>\r\n  A función <code>collectionTransform</code> ten a sinatura <code>(x como calquera) como lista => ...</code>, onde <code>x</code> é un elemento en <code>list</code>.\r\n    A función <code>resultTransform</code> proxecta a forma do resultado e ten a sinatura <code>(x como calquera, y como calquera) como calquera => ...</code>, onde <code>x</code> é un elemento en <code>list</code> e <code>y</code> é un elemento da lista xerada ao pasar <code>x</code> a <code>collectionTransform</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Simplificar unha lista de persoas e as súas mascotas.",
            "Code": "List.TransformMany(\r\n    {\r\n        [Name = \"Alice\", Pets = {\"Scruffy\", \"Sam\"}],\r\n        [Name = \"Bob\", Pets = {\"Walker\"}]\r\n    },\r\n    each [Pets],\r\n    (person, pet) => [Name = person[Name], Pet = pet]\r\n)",
            "Result": "{\r\n    [Name = \"Alice\", Pet = \"Scruffy\"],\r\n    [Name = \"Alice\", Pet = \"Sam\"],\r\n    [Name = \"Bob\", Pet = \"Walker\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "collectionTransform": "function",
        "resultTransform": "function"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Funnels",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Mixpanel.Segmentation",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "event": "text",
        "fromDate": "text",
        "toDate": "text",
        "whereClause": "text",
        "unit": "text",
        "interval": "number",
        "countType": "text",
        "onProperty": "text",
        "limit": "number",
        "where": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Mixpanel.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Number.Random",
      "Documentation": {
        "Documentation.Name": "Number.Random",
        "Documentation.Description": "Devolve un número aleatorio.",
        "Documentation.LongDescription": "Devolve un número aleatorio entre 0 e 1.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Obter un número aleatorio.",
            "Code": "Number.Random()",
            "Result": "0.919303"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Progress.DataSourceProgress",
      "Documentation": {
        "Documentation.Name": "Progress.DataSourceProgress",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "QuickBooks.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Record.AddField",
      "Documentation": {
        "Documentation.Name": "Record.AddField",
        "Documentation.Description": "Engade un campo a un rexistro.",
        "Documentation.LongDescription": "Engade un campo a un rexistro <code>record</code>, indicado o nome do campo <code>fieldName</code> e o valor <code>value</code>.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Engadir o campo Enderezo ao rexistro.",
            "Code": "Record.AddField([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"Address\", \"123 Main St.\")",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\", Address = \"123 Main St.\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldName": "text",
        "value": "any",
        "delayed": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceText",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceText",
        "Documentation.Description": "Substitúe o texto dentro da entrada fornecida.",
        "Documentation.LongDescription": "Substitúe o texto <code>old</code> dentro do <code>text</code> orixinal co texto <code>new</code>. Esta función de substitución pódese utilizar en <code>List.ReplaceValue</code> e <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Substitúa o texto \"oL\" con \"Ol\" na cadea \"oLa, mundo\".",
            "Code": "Replacer.ReplaceText(\"hEllo world\", \"hE\", \"He\")",
            "Result": "\"Hello world\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Replacer.ReplaceValue",
      "Documentation": {
        "Documentation.Name": "Replacer.ReplaceValue",
        "Documentation.Description": "Substitúe os valores dentro da entrada fornecida.",
        "Documentation.LongDescription": "Substitúe o valor <code>old</code> dentro do <code>value</code> orixinal co valor <code>new</code>. Esta función de substitución pódese utilizar en <code>List.ReplaceValue</code> e <code>Table.ReplaceValue</code>.",
        "Documentation.Category": "Replacer",
        "Documentation.Examples": [
          {
            "Description": "Substituír o valor 11 co valor 10.",
            "Code": "Replacer.ReplaceValue(11, 11, 10)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "old": "any",
        "new": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Roamler.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Smartsheet.Query",
      "Documentation": {
        "Documentation.Description": "Devolve un resultado JSON da API de Smartsheet",
        "Documentation.DisplayName": "Smartsheet.Query",
        "Documentation.Caption": "Smartsheet.Query",
        "Documentation.Name": "Smartsheet.Query",
        "Documentation.LongDescription": "Realiza unha chamada á API de REST de Smartsheet 2.0 no extremo especificado e devolve resultados como un rexistro JSON.",
        "Documentation.Examples": [
          {
            "Description": "Extrae datos das follas do extremo da API de Smartsheet con argumentos adicionais especificados",
            "Code": "Smartsheet.Content(\"sheets\", \"include=ownerInfo&includeAll=true\", [])",
            "Result": "Unha táboa coa información das follas como a devolveu a API de Smartsheet"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text",
        "args": "text",
        "headers": "record"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "SolarWindsServiceDesk.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "SolarWindsServiceDesk.ContentsV110",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "RangeStart": "datetime",
        "RangeEnd": "datetime"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitByNothing",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitByNothing",
        "Documentation.Description": "Devolve unha función que non divide, devolvendo o seu argumento como unha lista dun só elemento.",
        "Documentation.LongDescription": "Devolve unha función que non divide, devolvendo o seu argumento como unha lista dun só elemento.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Splitter.SplitTextByWhitespace",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByWhitespace",
        "Documentation.Description": "Devolve unha función que divide texto nunha lista de texto no espazo en branco.",
        "Documentation.LongDescription": "Devolve unha función que divide texto nunha lista de texto no espazo en branco.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Divide a entrada por espazos en branco, tratando as comiñas como calquera outro carácter.",
            "Code": "Splitter.SplitTextByWhitespace(QuoteStyle.None)(\"a b#(tab)c\")",
            "Result": "{\"a\", \"b\", \"c\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "clientId": "text",
        "path": "text",
        "optionalParameter": "text"
      },
      "RequiredParameters": "0"
    },
    {
      "Name": "SweetIQ.Tables",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Table.Partition",
      "Documentation": {
        "Documentation.Name": "Table.Partition",
        "Documentation.Description": "Particiona a táboa nunha lista de táboas baseándose no número especificado de grupos e columnas.",
        "Documentation.LongDescription": "Particiona a <code>table</code> nunha lista de <code>groups</code> números de táboas, baseándose no valor de <code>column</code> e da función <code>hash</code>.\r\n    A función <code>hash</code> aplícase ao valor da fila <code>column</code> para obter un valor hash para a fila. O módulo do valor hash <code>groups</code> determina en cal das táboas devoltas se vai colocar a fila.\r\n    <ul>\r\n       <li><code>table</code>: a táboa que se vai particionar.</li>\r\n       <li><code>column</code>: a columna de hash que vai determinar en que táboa devolta está a fila.</li>\r\n       <li><code>groups</code>: o número de táboas no que se vai particionar a táboa de entrada.</li>\r\n       <li><code>hash</code>: a función aplicada para obter un valor hash.</li>\r\n    </ul>\r\n  ",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Particionar a táboa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code> en 2 táboas na columna [a], usando o valor das columnas como a función hash.",
            "Code": "Table.Partition(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    \"a\",\r\n    2,\r\n    each _\r\n)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 2, b = 4]\r\n    }),\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 1, b = 4]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text",
        "groups": "number",
        "hash": "function"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Text.BetweenDelimiters",
      "Documentation": {
        "Documentation.Name": "Text.BetweenDelimiters",
        "Documentation.Description": "Text.BetweenDelimiters",
        "Documentation.LongDescription": "Devolve a parte de <code>text</code> que está entre a <code>startDelimiter</code> e a <code>endDelimiter</code> que se especifiquen.\r\n    Un <code>startIndex</code> numérico opcional indica a <code>startDelimiter</code> que se debe considerar.\r\n    Unha lista opcional <code>startIndex</code> indica a <code>startDelimiter</code> que se debe considerar, e tamén se a indexación se debe facer desde o principio ou desde o final da entrada.\r\n    <code>endIndex</code> é similar, agás que a indexación se fai en relación a <code>startIndex</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Obteña a parte de \"111 (222) 333 (444)\" entre a (primeira) paréntese de apertura e a (primeira) paréntese de peche que está a continuación.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\")",
            "Result": "\"222\""
          },
          {
            "Description": "Obteña a parte de \"111 (222) 333 (444)\" entre a segunda paréntese de apertura e a primeira paréntese de peche que está a continuación.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", 1, 0)",
            "Result": "\"444\""
          },
          {
            "Description": "Obteña a parte de \"111 (222) 333 (444)\" que está entre a segunda paréntese de apertura comezando desde o final e a segunda paréntese de peche que está a continuación.",
            "Code": "Text.BetweenDelimiters(\"111 (222) 333 (444)\", \"(\", \")\", {1, RelativePosition.FromEnd}, {1, RelativePosition.FromStart})",
            "Result": "\"222) 333 (444\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "startDelimiter": "text",
        "endDelimiter": "text",
        "startIndex": "any",
        "endIndex": "any"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.Insert",
      "Documentation": {
        "Documentation.Name": "Text.Insert",
        "Documentation.Description": "Insire un valor de texto noutro nunha posición determinada.",
        "Documentation.LongDescription": "Devolve o resultado de inserir o valor de texto <code>newText</code> no valor de texto único <code>text</code> na posición <code>offset</code>. As posicións comezan no número 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Insira \"C\" entre \"B\" e \"D\" en \"ABD\".",
            "Code": "Text.Insert(\"ABD\", 2, \"C\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "newText": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.NewGuid",
      "Documentation": {
        "Documentation.Name": "Text.NewGuid",
        "Documentation.Description": "Devolve un identificador único global (GUID) novo e aleatorio.",
        "Documentation.LongDescription": "Devolve un identificador único global (GUID) novo e aleatorio.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Text.Replace",
      "Documentation": {
        "Documentation.Name": "Text.Replace",
        "Documentation.Description": "Substitúe todas as ocorrencias da subcadea indicada no texto.",
        "Documentation.LongDescription": "Devolve o resultado de substituír todas as ocorrencias do valor de texto <code>old</code> no valor de texto <code>text</code> co valor de texto <code>new</code>. Esta función diferencia maiúsculas de minúsculas.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Substituír todas as ocorrencias de \"o\" nunha frase con \"un\".",
            "Code": "Text.Replace(\"the quick brown fox jumps over the lazy dog\", \"the\", \"a\")",
            "Result": "\"a quick brown fox jumps over a lazy dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "old": "text",
        "new": "text"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "Text.ReplaceRange",
      "Documentation": {
        "Documentation.Name": "Text.ReplaceRange",
        "Documentation.Description": "Elimina un intervalo de caracteres e insire un novo valor nunha posición especificada.",
        "Documentation.LongDescription": "Devolve o resultado de eliminar un número de caracteres, <code>count</code> do valor de texto <code>text</code> comezando na posición <code>offset</code> e logo insire o valor de texto <code>newText</code> na mesma posición en <code>text</code>.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Substituír un único carácter na posición 2 no valor de texto \"ABGF\" co novo valor de texto \"CDE\".",
            "Code": "Text.ReplaceRange(\"ABGF\", 2, 1, \"CDE\")",
            "Result": "\"ABCDEF\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number",
        "newText": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "Type.AddTableKey",
      "Documentation": {
        "Documentation.Name": "Type.AddTableKey",
        "Documentation.Description": "Engade unha clave ao tipo de táboa indicado.",
        "Documentation.LongDescription": "Engade unha clave ao tipo de táboa indicado.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type",
        "columns": "list",
        "isPrimary": "logical"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "VesselInsight.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "Webtrends.Profile",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {},
      "RequiredParameters": "0"
    },
    {
      "Name": "WorkforceDimensions.Contents",
      "Documentation": {
        "Documentation.Name": "Workforce Dimensions Connector Configuration",
        "Documentation.LongDescription": "Configuration to access OAuth server as well as default date range settigns."
      },
      "ReturnType": "text",
      "Parameters": {
        "configurationServer": "text",
        "workForceDimensionsServer": "text",
        "symbolicPeriod": "text",
        "startDate": "date",
        "endDate": "date"
      },
      "RequiredParameters": "3"
    },
    {
      "Name": "ZohoCreator.Contents",
      "Documentation": {
        "Documentation.Name": "Zoho Creator",
        "Documentation.LongDescription": "This connector will fetch data only from Zoho Creator application reports",
        "Documentation.Examples": [
          {
            "Description": "To fetches data from US account, scope 'jack', application 'task-management', report 'Task_Details'",
            "Code": "ZohoCreator.Contents(\"zoho.com\", \"jack\", \"zylker-management\", \"Employee_Details\")",
            "Result": "#table({\"Column1\"}, {{\"Column2\"}, {\"Column3\"}})"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "creatordomain": "text",
        "scopname": "text",
        "applinkname": "text",
        "reportlinkname": "text"
      },
      "RequiredParameters": "4"
    },
    {
      "Name": "AI.ExecuteInProc",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "methodName": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AI.ExternalSort",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "data": "table",
        "sortColumnName": "text",
        "maxBufferRows": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AccessControlEntry.ConditionToIdentities",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionToIdentities",
        "Documentation.Description": "Devolve unha lista de identidades que aceptará a condición.",
        "Documentation.LongDescription": "<p>Co elemento <code>identityProvider</code> especificado, convértese <code>condition</code> na lista de identidades para a que <code>condition</code> devolvería <code>true</code> en todos os contextos de autorización con <code>identityProvider</code> como fornecedor de identidades. Prodúcese un erro se non se pode converter <code>condition</code> nunha lista de identidades; por exemplo, se <code>condition</code> consulta atributos distintos ás identidades do usuario ou grupo para tomar unha decisión.</p>\r\n    <p>Teña en conta que a lista de identidades representa as identidades tal e como aparecen en <code>condition</code> e non se lles realiza ningún proceso de normalización (como a expansión do grupo).</p>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "identityProvider": "function",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Actian.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "server": "text",
        "database": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Action.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Action.WithErrorContext",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "action",
      "Parameters": {
        "action": "action",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Compress",
      "Documentation": {
        "Documentation.Name": "Binary.Compress",
        "Documentation.Description": "Comprime un valor binario mediante o tipo de compresión dado.",
        "Documentation.LongDescription": "Comprime un valor binario mediante o tipo de compresión dado. O resultado desta chamada é unha copia comprimida da entrada. Entre os tipos de compresión inclúense:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Comprima o valor binario.",
            "Code": "Binary.Compress(Binary.FromList(List.Repeat({10}, 1000)), Compression.Deflate)",
            "Result": "#binary({227, 226, 26, 5, 163, 96, 20, 12, 119, 0, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Decompress",
      "Documentation": {
        "Documentation.Name": "Binary.Decompress",
        "Documentation.Description": "Descomprime un valor binario mediante o tipo de compresión determinado.",
        "Documentation.LongDescription": "Descomprime un valor binario mediante o tipo de compresión determinado. O resultado desta chamada é unha copia descomprimida da entrada. Os tipos de compresión son os seguintes:\r\n  <ul>\r\n        <li><code>Compression.GZip</code></li>\r\n        <li><code>Compression.Deflate</code></li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Descomprimir o valor binario.",
            "Code": "Binary.Decompress(#binary({115, 103, 200, 7, 194, 20, 134, 36, 134, 74, 134, 84, 6, 0}), Compression.Deflate)",
            "Result": "#binary({71, 0, 111, 0, 111, 0, 100, 0, 98, 0, 121, 0, 101, 0})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "compressionType": "Compression.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Range",
      "Documentation": {
        "Documentation.Name": "Binary.Range",
        "Documentation.Description": "Devolve un subconxunto do valor binario comezando nun desprazamento.",
        "Documentation.LongDescription": "Devolve un subconxunto do valor binario comezando no desprazamento <code>binary</code>. Un parámetro opcional, <code>offset</code>, establece a lonxitude máxima do subconxunto.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Devolve un subconxunto do valor binario comezando no desprazamento 6.",
            "Code": "Binary.Range(#binary({0..10}), 6)",
            "Result": "#binary({6, 7, 8, 9, 10})"
          },
          {
            "Description": "Devolve un subconxunto de lonxitude 2 do desprazamento 6 do valor binario.",
            "Code": "Binary.Range(#binary({0..10}), 6, 2)",
            "Result": "#binary({6, 7})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.Split",
      "Documentation": {
        "Documentation.Name": "Binary.Split",
        "Documentation.Description": "Divide o binario especificado nunha lista de binarios utilizando o tamaño de páxina especificado.",
        "Documentation.LongDescription": "Divide <code>binary</code> nunha lista de binarios onde o primeiro elemento da lista de saída é un binario que contén os primeiros <code>pageSize</code> bytes do\r\n    binario de orixe, o seguinte elemento da lista de saída é un binario que contén os seguintes <code>pageSize</code> bytes do binario de orixe etc.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Binary.View",
      "Documentation": {
        "Documentation.Name": "Binary.View",
        "Documentation.Description": "Crea ou amplía un binario con controladores definidos polo usuario para operacións de consulta e acción.",
        "Documentation.LongDescription": "<p>Devolve unha vista de <code>binary</code> na que as funcións especificadas en <code>handlers</code> se usan en lugar do comportamento predefinido dunha operación cando esta se aplica á vista.</p>\r\n<p>Se se fornece <code>binary</code>, todas as demais funcións do controlador son opcionais. Se <code>binary</code> non se fornece, precísase as función do controlador <code>GetStream</code>. Se non se especifica unha función de controlador para unha operación, aplicarase o comportamento predefinido da operación a <code>binary</code> no seu lugar (excepto no caso de <code>GetExpression</code>).</p>\r\n<p>As funcións do controlador deben devolver un valor equivalente semanticamente ao resultado de aplicar a operación en <code>binary</code> (ou a vista resultante no caso de <code>GetExpression</code>).</p>\r\n<p>Se unha función de controlador provoca un erro, o comportamento predefinido da operación aplícase á vista.</p>\r\n<p><code>Binary.View</code> pode usarse para implantar o pregamento a unha orixe de datos: a tradución de consultas M en operacións específicas da fonte (por exemplo, para descargar unha sección dun ficheiro).</p>\r\n<p>Consulta a documentación publicada para obter unha descrición máis completa de <code>Binary.View</code>.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Crea unha visualización básica que non requira acceder aos datos para determinar a lonxitude.",
            "Code": "Binary.View(\r\n    null,\r\n    [\r\n        GetLength = () => 12,\r\n        GetStream = () => Text.ToBinary(\"hello world!\")\r\n    ]\r\n)",
            "Result": "Text.ToBinary(\"hello world!\")"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary",
        "handlers": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.ByteOrder",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.ByteOrder",
        "Documentation.Description": "Devolve un formato binario coa orde de bytes especificada por unha función.",
        "Documentation.LongDescription": "Devolve un formato binario coa orde de bytes especificada por <code>binaryFormat</code>.  A orde de bytes predefinida é <code>ByteOrder.BigEndian</code>.",
        "Documentation.Category": "Binary Formats.Controlling byte order",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "byteOrder": "ByteOrder.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Choice",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Choice",
        "Documentation.Description": "Devolve un formato binario que escolle o seguinte formato binario baseándose nun valor que xa se leu.",
        "Documentation.LongDescription": "Devolve un formato binario que escolle o seguinte formato binario baseándose nun valor que xa se leu.  O valor do formato binario producido por esta función funciona en fases: <ul>\r\n<li>O formato binario especificado polo parámetro <code>binaryFormat</code> utilízase para ler un valor.</li>\r\n<li>O valor pásase á función de selección especificada polo parámetro <code>chooseFunction</code>.</li>\r\n<li>A función de selección inspecciona o valor e devolve un segundo formato binario.</li>\r\n<li>O segundo formato binario utilízase para ler un segundo valor.</li>\r\n<li>Se se especifica a función de combinación, entón o primeiro e o segundo valor transmítense á función de combinación e devólvese o valor resultante.</li>\r\n<li>Se non se especifica a función de combinación, devólvese o segundo valor.</li>\r\n<li>Devólvese o segundo valor.</li>\r\n</ul>O parámetro opcional <code>type</code> indica o tipo de formato binario que a función de selección vai devolver.  Pode especificarse <code>type any</code>, <code>type list</code> ou <code>type binary</code>.  Se non se especifica o parámetro <code>type</code>, entón utilízase <code>type any</code>.   Se se utiliza <code>type list</code> ou <code>type binary</code>, entón o sistema pode devolver un valor <code>binary</code> ou <code>list</code> de transmisión en secuencia en vez de un do búfer, o que pode reducir a cantidade de memoria necesaria para ler o formato.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": [
          {
            "Description": "Lea unha lista de bytes, onde o número de elementos está determinado polo primeiro byte.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length)\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          },
          {
            "Description": "Lea unha lista de bytes, onde o número de elementos está determinado polo primeiro byte e mantén o primeiro byte lido.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.Record([\r\n            length = length,\r\n            list = BinaryFormat.List(BinaryFormat.Byte, length)\r\n        ])\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "[length = 2, list = {3, 4}]"
          },
          {
            "Description": "Lea unha lista de bytes, onde o número de elementos está determinado polo primeiro byte utilizando unha lista de transmisión en secuencia.",
            "Code": "let\r\n    binaryData = #binary({2, 3, 4, 5}),\r\n    listFormat = BinaryFormat.Choice(\r\n        BinaryFormat.Byte,\r\n        (length) => BinaryFormat.List(BinaryFormat.Byte, length),\r\n        type list\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{3, 4}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "chooseFunction": "function",
        "type": "type",
        "combineFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Group",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Group",
        "Documentation.Description": "Devolve un formato binario que le un grupo de elementos.",
        "Documentation.LongDescription": "Os parámetros son os seguintes:\r\n<ul>\r\n<li>O parámetro <code>binaryFormat</code> especifica o formato binario do valor de clave.</li>\r\n<li>O parámetro <code>group</code> fornece información sobre o grupo de elementos coñecidos.</li>\r\n<li>O parámetro opcional <code>extra</code> pódese utilizar para especificar a función que vai devolver un valor de formato binario para o valor que segue a calquera clave que non se esperaba.  Se non se especifica o parámetro <code>extra</code>, xérase un erro se hai valores de claves inesperados.</li>\r\n</ul>\r\nO parámetro <code>group</code> especifica unha lista de definicións de elementos.  Cada definición de elemento é unha lista, que contén de 3 a 5 valores, da maneira seguinte:\r\n<ul>\r\n<li>Valor de clave.  O valor de clave que corresponde ao elemento.  Debe ser único dentro do conxunto de elementos.</li>\r\n<li>Formato do elemento.  O formato binario correspondente ao valor do elemento.  Isto permite a cada elemento ter un formato diferente. </li>\r\n<li>Ocorrencia do elemento.  O valor <code>BinaryOccurrence.Type</code> do número de veces que se espera que o elemento apareza no grupo.   Os elementos requiridos que non están presentes provocan un erro.  Os elementos duplicados opcionais ou requiridos contrólanse como valores de claves inesperados.</li>\r\n<li>Valor do elemento predefinido (opcional).  Se o valor do elemento predefinido aparece na lista de definición de elementos e non é nulo, entón utilizarase en vez do predefinido.  O predefinido para os elementos opcionais ou repetidos é nulo e o predefinido para os valores repetidos é unha lista baleira { }.</li>\r\n<li>Transformación do valor do elemento (opcional).   Se a función de transformación do valor do elemento está presente na lista de definición de elementos e non é nula, entón chamarase para transformar o valor do elemento antes de devolvelo.  A función de transformación só se chama se o elemento aparece na entrada (nunca se chamará co valor predefinido). </li>\r\n</ul>",
        "Documentation.Category": "Binary Formats.Reading a group of items",
        "Documentation.Examples": [
          {
            "Description": "O seguinte asume un valor de clave que é un byte único, con 4 elementos esperados no grupo, onde todos teñen un byte de datos despois da clave.  Os elementos aparecen na entrada da maneira seguinte:\r\n<ul>\r\n<li>A clave 1 é obrigatoria e aparece co valor 11.</li>\r\n<li>A clave 2 repítese, aparece dúas veces co valor 22 e produce como resultado un valor de { 22, 22 }.</li>\r\n<li>A clave 3 é opcional, non aparece e produce como resultado un valor de nulo.</li>\r\n<li>A clave 4 repítese, mais non aparece e produce como resultado un valor de { }.</li>\r\n<li>A clave 5 non forma parte do grupo, mais aparece unha vez co valor 55.  A función adicional chámase co valor da clave 5 e devolve o formato correspondente a ese valor (BinaryFormat.Byte).  O valor 55 é lido e rexeitado.</li>\r\n</ul>",
            "Code": "let\r\n    b = #binary({\r\n        1, 11,\r\n        2, 22,\r\n        2, 22,\r\n        5, 55,\r\n        1, 11\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Required},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Repeating},\r\n            {3, BinaryFormat.Byte, BinaryOccurrence.Optional},\r\n            {4, BinaryFormat.Byte, BinaryOccurrence.Repeating}\r\n        },\r\n        (extra) => BinaryFormat.Byte\r\n    )\r\nin\r\n    f(b)",
            "Result": "{11, {22, 22}, null, {}}"
          },
          {
            "Description": "O exemplo a seguir mostra a transformación de valor do elemento e o valor do elemento predefinido.   O elemento de repetición coa clave 1 suma a lista de valores lidos usando List.Sum.  O elemento opcional coa clave 2 ten un valor predefinido de 123, en vez de nulo.",
            "Code": "let\r\n    b = #binary({\r\n        1, 101,\r\n        1, 102\r\n    }),\r\n    f = BinaryFormat.Group(\r\n        BinaryFormat.Byte,\r\n        {\r\n            {1, BinaryFormat.Byte, BinaryOccurrence.Repeating,\r\n              0, (list) => List.Sum(list)},\r\n            {2, BinaryFormat.Byte, BinaryOccurrence.Optional, 123}\r\n        }\r\n    )\r\nin\r\n    f(b)",
            "Result": "{203, 123}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "group": "list",
        "extra": "function",
        "lastKey": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Length",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Length",
        "Documentation.Description": "Devolve un formato binario que limita a cantidade de datos que se poden ler.",
        "Documentation.LongDescription": "Devolve un formato binario que limita a cantidade de datos que se poden ler. Pódense utilizar <code>BinaryFormat.List</code> e <code>BinaryFormat.Binary</code> para ler até a fin dos datos. Pódese utilizar <code>BinaryFormat.Length</code> para limitar o número de bytes lidos. O parámetro <code>binaryFormat</code> especifica o formato binario que limitar. O parámetro <code>length</code> especifica o número de bytes que ler. O parámetro <code>length</code> pode ser un valor numérico ou un valor de formato binario que especifica o formato do valor de lonxitude que aparece e que precede o valor que se vai ler.",
        "Documentation.Category": "Binary Formats.Limiting input",
        "Documentation.Examples": [
          {
            "Description": "Limite o número de bytes lidos a 2 ao ler unha lista de bytes.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        2\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Limitar o número de bytes lidos ao ler unha lista de bytes ao valor do byte anterior na lista.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.Length(\r\n        BinaryFormat.List(BinaryFormat.Byte),\r\n        BinaryFormat.Byte\r\n    )\r\nin\r\n    listFormat(binaryData)",
            "Result": "{2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "length": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "BinaryFormat.Transform",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Transform",
        "Documentation.Description": "Devolve un formato binario que transformará os valores lidos por outro formato binario.",
        "Documentation.LongDescription": "Devolve un formato binario que transformará os valores lidos por outro formato binario.  O parámetro <code>binaryFormat</code> especifica o formato binario que se vai utilizar para ler un valor.  Invócase <code>function</code> co valor lido e devolve o valor transformado.",
        "Documentation.Category": "Binary Formats.Transforming what was read",
        "Documentation.Examples": [
          {
            "Description": "Ler un byte e engadir un a el.",
            "Code": "let\r\n    binaryData = #binary({1}),\r\n    transformFormat = BinaryFormat.Transform(\r\n        BinaryFormat.Byte,\r\n        (x) => x + 1\r\n    )\r\nin\r\n    transformFormat(binaryData)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.Ordinal",
      "Documentation": {
        "Documentation.Name": "Comparer.Ordinal",
        "Documentation.Description": "Devolve unha función de comparador que utiliza regras ordinais para comparar valores.",
        "Documentation.LongDescription": "Devolve unha función de comparación que usa regras ordinais para comparar os valores proporcionados <code>x</code> e <code>y</code>.<br>\r\n         <br>\r\n         Unha función de comparación acepta dous argumentos e devolve -1, 0 ou 1 en función de se o primeiro valor é menor, igual ou maior que o segundo.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Mediante regras ordinais, compara se \"encyclopædia\" e \"encyclopaedia\" son equivalentes. Ten en conta que son equivalentes utilizando <code>Comparer.FromCulture(\"en-US\")</code>. ",
            "Code": "Comparer.Equals(Comparer.Ordinal, \"encyclopædia\", \"encyclopaedia\")",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Comparer.OrdinalIgnoreCase",
      "Documentation": {
        "Documentation.Name": "Comparer.OrdinalIgnoreCase",
        "Documentation.Description": "Devolve unha función de comparación que non diferencia maiúsculas de minúsculas e que usa regras ordinais para comparar valores.",
        "Documentation.LongDescription": "Devolve unha función de comparación que non distingue entre maiúsculas e minúsculas que usa regras ordinais para comparar os valores proporcionados <code>x</code> e <code>y</code>.<br>\r\n         <br>\r\n         Unha función de comparación acepta dous argumentos e devolve -1, 0 ou 1 en función de se o primeiro valor é menor, igual ou maior que o segundo.\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Mediante as regras ordinais que non diferencian maiúsculas de minúsculas, compare \"Abc\" con \"abc\". Teña en conta que \"Abc\" é inferior a \"abc\" mediante <code>Comparer.Ordinal</code>. ",
            "Code": "Comparer.OrdinalIgnoreCase(\"Abc\", \"abc\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "x": "any",
        "y": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.AttributeMemberProperty",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberProperty",
        "Documentation.Description": "Devolve unha propiedade dun atributo de dimensión.",
        "Documentation.LongDescription": "Devolve a propiedade <code>propertyName</code> do atributo de dimensión <code>attribute</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Cube.MeasureProperty",
      "Documentation": {
        "Documentation.Name": "Cube.MeasureProperty",
        "Documentation.Description": "Devolve unha propiedade dunha medida (propiedade da cela).",
        "Documentation.LongDescription": "Devolve a propiedade <code>propertyName</code> da medida <code>measure</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "measure": "any",
        "propertyName": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Databricks.Query",
      "Documentation": {
        "Documentation.Name": "Orixe da consulta SQL de Databricks",
        "Documentation.LongDescription": "Define unha orixe de datos Databricks para executar consultas SQL"
      },
      "ReturnType": "Consulta SQL de Databricks",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DatabricksMultiCloud.Query",
      "Documentation": {
        "Documentation.Name": "Orixe da consulta SQL de Databricks",
        "Documentation.LongDescription": "Define unha orixe de datos Databricks para executar consultas SQL"
      },
      "ReturnType": "Consulta SQL de Databricks",
      "Parameters": {
        "host": "text",
        "httpPath": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddDays",
      "Documentation": {
        "Documentation.Name": "Date.AddDays",
        "Documentation.Description": "Engade os días especificados á data.",
        "Documentation.LongDescription": "Devolve <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>, resultado de engadir <code>numberOfDays</code> días ao valor <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: o valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> ao se van engadir os días.</li>\r\n      <li><code>numberOfDays</code>: o número de días que se van engadir.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Engadir 5 días ao valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que representa a data 14/05/2011.",
            "Code": "Date.AddDays(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 5, 19)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfDays": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddMonths",
      "Documentation": {
        "Documentation.Name": "Date.AddMonths",
        "Documentation.Description": "Engade os meses especificados á data.",
        "Documentation.LongDescription": "Devolve o resultado de <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> tras engadir <code>numberOfMonths</code> meses ao valor <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: o valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> ao que se van engadir os meses.</li>\r\n        <li><code>numberOfMonths</code>: o número de meses que se van engadir.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Engadir 5 meses ao valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que representa a data 14/05/2011.",
            "Code": "Date.AddMonths(#date(2011, 5, 14), 5)",
            "Result": "#date(2011, 10, 14)"
          },
          {
            "Description": "Engadir 18 meses ao valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que representa a data e a hora 14/05/2011 08:15:22 a.m.",
            "Code": "Date.AddMonths(#datetime(2011, 5, 14, 8, 15, 22), 18)",
            "Result": "#datetime(2012, 11, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfMonths": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddQuarters",
      "Documentation": {
        "Documentation.Name": "Date.AddQuarters",
        "Documentation.Description": "Engade os trimestres especificados á data.",
        "Documentation.LongDescription": "Devolve <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>, resultado de engadir <code>numberOfQuarters</code> trimestres ao valor <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: o valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> ao que se van engadir os trimestres.</li>\r\n      <li><code>numberOfQuarters</code>: o número de trimestres que se van engadir.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Engadir 1 trimestre ao valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que representa a data 14/05/2011.",
            "Code": "Date.AddQuarters(#date(2011, 5, 14), 1)",
            "Result": "#date(2011, 8, 14)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfQuarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddWeeks",
      "Documentation": {
        "Documentation.Name": "Date.AddWeeks",
        "Documentation.Description": "Engade as semanas especificadas á data.",
        "Documentation.LongDescription": "Devolve <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>, resultado de engadir <code>numberOfWeeks</code> semanas ao valor <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n      <li><code>dateTime</code>: o valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> ao que se van engadir as semanas.</li>\r\n      <li><code>numberOfWeeks</code>: o número de semanas que se van engadir.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Engadir 2 semanas ao valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que representa a data 14/05/2011.",
            "Code": "Date.AddWeeks(#date(2011, 5, 14), 2)",
            "Result": "#date(2011, 5, 28)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfWeeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.AddYears",
      "Documentation": {
        "Documentation.Name": "Date.AddYears",
        "Documentation.Description": "Engade os anos especificados á data.",
        "Documentation.LongDescription": "Devolve o resultado de <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> tras engadir <code>numberOfYears</code> ao valor <code>datetime</code> <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: o valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> ao que se van engadir os anos.</li>\r\n        <li><code>numberOfYears</code>: o número de anos que se van engadir.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Engadir 4 anos ao valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que representa a data 14/05/2011.",
            "Code": "Date.AddYears(#date(2011, 5, 14), 4)",
            "Result": "#date(2015, 5, 14)"
          },
          {
            "Description": "Engadir 10 anos ao valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que representa a data e a hora 14/05/2011 08:15:22 a.m.",
            "Code": "Date.AddYears(#datetime(2011, 5, 14, 8, 15, 22), 10)",
            "Result": "#datetime(2021, 5, 14, 8, 15, 22)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "numberOfYears": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNDays",
        "Documentation.Description": "Indica se esta data ocorre durante o próximo número de días, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no día actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o próximo número de días, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no día actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>days</code>: o número de días.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o día despois da hora actual do sistema está nos próximos dous días.",
            "Code": "Date.IsInNextNDays(Date.AddDays(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNMonths",
        "Documentation.Description": "Indica se esta data ocorre durante o próximo número de meses, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no mes actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o próximo número de meses, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no mes actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>months</code>: o número de meses.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o mes despois da hora actual do sistema está situado nos próximos dous meses.",
            "Code": "Date.IsInNextNMonths(Date.AddMonths(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNQuarters",
        "Documentation.Description": "Indica se esta data ocorre durante o próximo número de trimestres, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no trimestre actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o próximo número de trimestres, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no trimestre actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>quarters</code>: o número de trimestres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o trimestre despois da hora actual do sistema está situado nos próximos dous trimestres.",
            "Code": "Date.IsInNextNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNWeeks",
        "Documentation.Description": "Indica se esta data ocorre durante o próximo número de semanas, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na semana actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o próximo número de semanas, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza na semana actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>weeks</code>: o número de semanas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a semana despois da hora actual do sistema está situada nas próximas dúas semanas.",
            "Code": "Date.IsInNextNWeeks(Date.AddDays(DateTime.FixedLocalNow(), 7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInNextNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextNYears",
        "Documentation.Description": "Indica se esta data ocorre durante o próximo número de anos, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no ano actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o próximo número de anos, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no ano actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>years</code>: o número de anos.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o ano despois da hora actual do sistema está situado nos próximos dous anos.",
            "Code": "Date.IsInNextNYears(Date.AddYears(DateTime.FixedLocalNow(), 1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNDays",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNDays",
        "Documentation.Description": "Indica se esta data ocorre durante o número de días anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no día actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o número de días anterior, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no día actual\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>days</code>: o número de días.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o día antes da hora actual do sistema está situado nos dous días anteriores.",
            "Code": "Date.IsInPreviousNDays(Date.AddDays(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "days": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNMonths",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNMonths",
        "Documentation.Description": "Indica se esta data ocorre durante o número de meses anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no mes actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o número de meses anterior, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no mes actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>months</code>: o número de meses.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o mes antes da hora actual do sistema está situado  nos dous meses anteriores.",
            "Code": "Date.IsInPreviousNMonths(Date.AddMonths(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "months": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNQuarters",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNQuarters",
        "Documentation.Description": "Indica se esta data ocorre durante o número de trimestres anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no trimestre actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o número de trimestres anterior, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no trimestre actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>quarters</code>: o número de trimestres.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o trimestre antes da hora actual do sistema está situado nos dous trimestres anteriores.",
            "Code": "Date.IsInPreviousNQuarters(Date.AddQuarters(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "quarters": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNWeeks",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNWeeks",
        "Documentation.Description": "Indica se esta data ocorre durante o número de semanas anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na semana actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o número de semanas anterior, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza na semana actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>weeks</code>: o número de semanas.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a semana antes da hora actual do sistema está situada nas dúas semanas anteriores.",
            "Code": "Date.IsInPreviousNWeeks(Date.AddDays(DateTime.FixedLocalNow(), -7), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "weeks": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Date.IsInPreviousNYears",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousNYears",
        "Documentation.Description": "Indica se esta data ocorre durante o número de anos anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no ano actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o número de anos anterior, tal como o determinan a data e a hora actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no ano actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      <li><code>years</code>: o número de anos.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o ano antes da hora actual do sistema está situado nos dous anos anteriores.",
            "Code": "Date.IsInPreviousNYears(Date.AddYears(DateTime.FixedLocalNow(), -1), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "years": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.AddZone",
      "Documentation": {
        "Documentation.Name": "DateTime.AddZone",
        "Documentation.Description": "Engade información do fuso horario ao valor da data e hora.",
        "Documentation.LongDescription": "Engade información do fuso horaria ao valor <code>dateTime</code>. A información do fuso horario inclúe <code>timezoneHours</code> e opcionalmente <code>timezoneMinutes</code>, que especifican a compensación desexado con respecto á hora UTC.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Establece a zona horaria en UTC+7:30 (7 horas e 30 minutos despois da hora UTC).",
            "Code": "DateTime.AddZone(#datetime(2010, 12, 31, 11, 56, 02), 7, 30)",
            "Result": "#datetimezone(2010, 12, 31, 11, 56, 2, 7, 30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTime": "datetime",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNHours",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o próximo número de horas, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na hora actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o próximo número de horas, tal como o determinan a hora e a data actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza na hora actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> a avaliar.</li>\r\n      <li><code>hours</code>: o número de horas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora posterior á do sistema actual se atopa nas próximas dúas horas.",
            "Code": "DateTime.IsInNextNHours(DateTime.FixedLocalNow() + #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNMinutes",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o próximo número de minutos, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no minuto actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o próximo número de minutos, tal como o determinan a hora e a data actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no minuto actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> a avaliar.</li>\r\n      <li><code>minutes</code>: o número de minutos.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o minuto posterior ao da hora do sistema actual se atopa nos próximos dous minutos.",
            "Code": "DateTime.IsInNextNMinutes(DateTime.FixedLocalNow() + #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInNextNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextNSeconds",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o próximo número de segundos, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no segundo actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o próximo número de segundos, tal e como o determinan a hora e a data actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no segundo actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> a avaliar.</li>\r\n      <li><code>seconds</code>: o número de segundos.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o segundo posterior ao da hora do sistema actual se atopa nos próximos dous segundos.",
            "Code": "DateTime.IsInNextNSeconds(DateTime.FixedLocalNow() + #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNHours",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNHours",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o número de horas anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na hora actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o número de horas anterior, tal como o determinan a hora e a data actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza na hora actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> a avaliar.</li>\r\n      <li><code>hours</code>: o número de horas.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora anterior á hora do sistema actual se atopa nas dúas horas anteriores.",
            "Code": "DateTime.IsInPreviousNHours(DateTime.FixedLocalNow() - #duration(0, 2, 0, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "hours": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNMinutes",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNMinutes",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o número de minutos anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no minuto actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o número de minutos anterior, tal como o determinan a hora e a data actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no minuto actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> a avaliar.</li>\r\n      <li><code>minutes</code>: o número de minutos.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o minuto anterior ao da hora do sistema actual se atopa nos dous minutos anteriores.",
            "Code": "DateTime.IsInPreviousNMinutes(DateTime.FixedLocalNow() - #duration(0, 0, 2, 0), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "minutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTime.IsInPreviousNSeconds",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousNSeconds",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o número de segundos anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no segundo actual.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> fornecido está situado durante o número de segundos anterior, tal como o determinan a hora e a data actuais do sistema. Teña en conta que esta función devolverá false cando se pase un valor que aconteza no segundo actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> a avaliar.</li>\r\n      <li><code>seconds</code>: o número de segundos.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o segundo anterior ao da hora do sistema actual se atopa nos dous segundos anteriores.",
            "Code": "DateTime.IsInPreviousNSeconds(DateTime.FixedLocalNow() - #duration(0, 0, 0, 2), 2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any",
        "seconds": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "DateTimeZone.SwitchZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.SwitchZone",
        "Documentation.Description": "Modifica o fuso horario do valor.",
        "Documentation.LongDescription": "Modifica a información de fuso horario no valor de data, hora e fuso <code>dateTimeZone</code> á nova información de fuso horario fornecida por <code>timezoneHours</code> e opcionalmente <code>timezoneMinutes</code>.\r\n    Se <code>dateTimeZone</code> non ten un compoñente de fuso horario, xérase unha excepción.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Modificar a información de fuso horario de #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) a 8 horas.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 8)",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, 8, 0)"
          },
          {
            "Description": "Modificar a información de fuso horario de #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) a -30 minutos.",
            "Code": "DateTimeZone.SwitchZone(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30), 0, -30)",
            "Result": "#datetimezone(2010, 12, 31, 3, 56, 2, 0, -30)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "timezoneHours": "number",
        "timezoneMinutes": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Embedded.Value",
      "Documentation": {
        "Documentation.Name": "Embedded.Value",
        "Documentation.Description": "Accede a un valor polo nome nun mashup incorporado.",
        "Documentation.LongDescription": "Accede a un valor polo nome nun mashup incorporado.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "path": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.From",
      "Documentation": {
        "Documentation.Name": "Function.From",
        "Documentation.Description": "Crea unha función cunha sinatura de parámetro específica na parte superior dunha función que toma un argumento de lista única",
        "Documentation.LongDescription": "Toma unha función unaria <code>function</code> e crea unha función co tipo <code>functionType</code> que constrúe unha lista a partir dos seus argumentos e a pasa a <code>function</code>.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Converte List.Sum nunha función de dous argumentos que se engaden xuntos",
            "Code": "Function.From(type function (a as number, b as number) as number, List.Sum)(2, 1)",
            "Result": "3"
          },
          {
            "Description": "Converte unha función que toma unha lista nunha función de dous argumentos",
            "Code": "Function.From(type function (a as text, b as text) as text, (list) => list{0} & list{1})(\"2\", \"1\")",
            "Result": "\"21\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "functionType": "type",
        "function": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.Invoke",
      "Documentation": {
        "Documentation.Name": "Function.Invoke",
        "Documentation.Description": "Invoca a función indicada",
        "Documentation.LongDescription": "Invoca a función indicada utilizando a lista de argumentos especificada e devolve o resultado.",
        "Documentation.Category": "Function",
        "Documentation.Examples": [
          {
            "Description": "Invoca Record.FieldNames cun argumento [A=1,B=2]",
            "Code": "Function.Invoke(Record.FieldNames, {[A = 1, B = 2]})",
            "Result": "{\"A\", \"B\"}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "args": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeAfter",
      "Documentation": {
        "Documentation.Name": "Function.InvokeAfter",
        "Documentation.Description": "Invoca a función determinada despois de que pase a duración especificada.",
        "Documentation.LongDescription": "Devolve o resultado de invocar <code>function</code> despois de que pase a duración <code>delay</code>.",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "delay": "duration"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.InvokeWithErrorContext",
      "Documentation": {
        "Documentation.Name": "Function.InvokeWithErrorContext",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "function": "function",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Function.ScalarVector",
      "Documentation": {
        "Documentation.Name": "Function.ScalarVector",
        "Documentation.Description": "Crea unha función escalar sobre unha función de vector, procesando por lotes varias invocacións.",
        "Documentation.LongDescription": "<p>Devolve unha función escalar de tipo <code>scalarFunctionType</code> que invoca <code>vectorFunction</code> cunha única fila de argumentos e devolve unha única saída. Ademais, cando a función escalar se aplica de forma repetida a cada fila dunha táboa de entradas, como en Table.AddColumn, no seu lugar aplicarase <code>vectorFunction</code> unha vez para todas as entradas.</p>\r\n<p><code>vectorFunction</code> pasarase a unha táboa cuxas columnas coincidan no nome e na posición cos parámetros de <code>scalarFunctionType</code>. Cada fila desta táboa contén os argumentos para unha chamada á función escalar, coas columnas correspondentes aos parámetros de <code>scalarFunctionType</code>.</p>\r\n<p><code>vectorFunction</code> debe devolver unha lista da mesma lonxitude que a táboa de entrada, cuxo elemento en cada posición debe ser o mesmo resultado que avaliar a función na fila da a mesma posición de entrada escalar.</p>\r\n<p>Espérase que a táboa de entrada se transmita, polo que se espera que <code>vectorFunction</code> transmita a súa saída na mesma medida na que se producen as entradas, traballando só cun fragmento de entrada en cada momento. En concreto, <code>vectorFunction</code> non debe enumerar a súa táboa de entrada máis dunha vez.</p>",
        "Documentation.Category": "Function",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "scalarFunctionType": "type",
        "vectorFunction": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeographyPoint.From",
      "Documentation": {
        "Documentation.Name": "GeographyPoint.From",
        "Documentation.Description": "Crea un rexistro que representa un punto xeográfico a partir das partes.",
        "Documentation.LongDescription": "Crea un rexistro que representa un punto xeográfico a partir das súas partes constituíntes, como a lonxitude, a latitude e, se están presentes, a elevación (Z) e a medida (A). Pode indicarse un identificador de referencia espacial (SRID) opcional se é diferente do valor predefinido (4326).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "longitude": "number",
        "latitude": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "GeometryPoint.From",
      "Documentation": {
        "Documentation.Name": "GeometryPoint.From",
        "Documentation.Description": "Crea un rexistro que representa un punto xeométrico a partir das partes.",
        "Documentation.LongDescription": "Crea un rexistro que representa un punto xeográfico a partir das súas partes constituíntes, como a coordenada X, a coordenada Y e, se están presentes, a coordenada Z e a medida (M). Pode indicarse un identificador de referencia espacial (SRID) se é diferente do valor predefinido (0).",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "x": "number",
        "y": "number",
        "z": "number",
        "m": "number",
        "srid": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.ExecuteParametricFilterOnFilterRecord",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "filter": "record",
        "objectHierarchyName": "text",
        "objectHierarchyResourceIds": "text",
        "objectTypes": "text",
        "queryExpression": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.GenerateParametricFilterByFilterSourceType",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "serviceRoot": "text",
        "inputFilterSource": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "HexagonSmartApi.Typecast",
      "Documentation": {
        "Documentation.Name": "Typecast",
        "Documentation.LongDescription": "Function to return a table representing an OData entity typecast from the target entity. The target is a table with column with select list attribute, or an individual table row or an individual record with select list attribute."
      },
      "ReturnType": "function",
      "Parameters": {
        "typecastTarget": "any",
        "outputType": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.From",
      "Documentation": {
        "Documentation.Name": "Identity.From",
        "Documentation.Description": "Crea unha identidade.",
        "Documentation.LongDescription": "Crea unha identidade.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "identityProvider": "function",
        "value": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Identity.IsMemberOf",
      "Documentation": {
        "Documentation.Name": "Identity.IsMemberOf",
        "Documentation.Description": "Determina se unha identidade é membro dunha colección de identidades.",
        "Documentation.LongDescription": "Determina se unha identidade é membro dunha colección de identidades.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "identity": "record",
        "collection": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Alternate",
      "Documentation": {
        "Documentation.Name": "List.Alternate",
        "Documentation.Description": "Devolve unha lista que contén todos os elementos de desprazamento con números impares nunha lista.",
        "Documentation.LongDescription": "Devolve unha lista que contén todos os elementos de desprazamento con números impares nunha lista. Alterna entre obter e ignorar valores da lista <code>list</code> segundo os parámetros.\r\n    <ul>\r\n    <li><code>count</code>: especifica o número de valores que se van ignorar cada vez.</li>\r\n    <li><code>repeatInterval</code>: un intervalo de repetición opcional para indicar o número de valores que se engaden entre os valores ignorados.</li>\r\n    <li><code>offset</code>: un parámetro de desprazamento opcional para comezar ignorando os valores no desprazamento inicial.</li>\r\n    </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de {1..10} que ignora o primeiro número.",
            "Code": "List.Alternate({1..10}, 1)",
            "Result": "{2, 3, 4, 5, 6, 7, 8, 9, 10}"
          },
          {
            "Description": "Crear unha lista de {1..10} que ignora calquera outro número.",
            "Code": "List.Alternate({1..10}, 1, 1)",
            "Result": "{2, 4, 6, 8, 10}"
          },
          {
            "Description": "Crear unha lista de {1..10} que comeza en 1 e ignora calquera outro número.",
            "Code": "List.Alternate({1..10}, 1, 1, 1)",
            "Result": "{1, 3, 5, 7, 9}"
          },
          {
            "Description": "Crear unha lista de {1..10} que comeza en 1, ignora un valor, mantén dous valores, etc.",
            "Code": "List.Alternate({1..10}, 1, 2, 1)",
            "Result": "{1, 3, 4, 6, 7, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number",
        "repeatInterval": "number",
        "offset": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Contains",
      "Documentation": {
        "Documentation.Name": "List.Contains",
        "Documentation.Description": "Indica se a lista contén o valor.",
        "Documentation.LongDescription": "Indica se a lista <code>list</code> contén o valor <code>value</code>.\r\n    Devolve true se o valor está na lista, se non, devolve false. Pódese indicar un valor de criterio de ecuación opcional, <code>equationCriteria</code>, para controlar probas de igualdade. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Buscar se a lista {1, 2, 3, 4, 5} contén 3.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 3)",
            "Result": "true"
          },
          {
            "Description": "Buscar se a lista {1, 2, 3, 4, 5} contén 6.",
            "Code": "List.Contains({1, 2, 3, 4, 5}, 6)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "value": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAll",
      "Documentation": {
        "Documentation.Name": "List.ContainsAll",
        "Documentation.Description": "Indica onde a lista inclúe todos os valores doutra lista.",
        "Documentation.LongDescription": "Indica se a lista <code>list</code> inclúe todos os valores doutra lista, <code>values</code>.\r\n    Devolve verdadeiro se o valor está na lista, se non, devolve falso. Pódese indicar un valor de criterio de ecuación opcional, <code>equationCriteria</code>, para controlar probas de igualdade. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Descubrir se a lista {1, 2, 3, 4, 5} contén 3 e 4.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {3, 4})",
            "Result": "true"
          },
          {
            "Description": "Descubrir se a lista {1, 2, 3, 4, 5} contén 5 e 6.",
            "Code": "List.ContainsAll({1, 2, 3, 4, 5}, {5, 6})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ContainsAny",
      "Documentation": {
        "Documentation.Name": "List.ContainsAny",
        "Documentation.Description": "Indica onde a lista inclúe calquera dos valores doutra lista.",
        "Documentation.LongDescription": "Indica se a lista <code>list</code> inclúe calquera dos valores doutra lista, <code>values</code>.\r\n        Devolve verdadeiro se o valor está na lista, se non, devolve falso. Pódese indicar un valor de criterio de ecuación opcional, <code>equationCriteria</code>, para controlar probas de igualdade. ",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Descubrir se a lista {1, 2, 3, 4, 5} contén 3 ou 9.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {3, 9})",
            "Result": "true"
          },
          {
            "Description": "Descubrir se a lista {1, 2, 3, 4, 5} contén 6 ou 7.",
            "Code": "List.ContainsAny({1, 2, 3, 4, 5}, {6, 7})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "values": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Covariance",
      "Documentation": {
        "Documentation.Name": "List.Covariance",
        "Documentation.Description": "Devolve a covarianza entre as dúas listas de números.",
        "Documentation.LongDescription": "Devolve a covarianza entre dúas listas, <code>numberList1</code> e <code>numberList2</code>. <code>numberList1</code> e <code>numberList2</code> deben conter o mesmo número de valores <code>number</code>.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Calcular a covarianza entre dúas listas.",
            "Code": "List.Covariance({1, 2, 3}, {1, 2, 3})",
            "Result": "0.66666666666666607"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numberList1": "list",
        "numberList2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Difference",
      "Documentation": {
        "Documentation.Name": "List.Difference",
        "Documentation.Description": "Devolve a diferenza entre dúas listas indicadas.",
        "Documentation.LongDescription": "Devolve os elementos da lista <code>list1</code> que non aparecen na lista <code>list2</code>. Admítense os valores duplicados.\r\n    Pódese indicar un valor de criterio de ecuación opcional, <code>equationCriteria</code>, para controlar probas de igualdade. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar os elementos da lista {1, 2, 3, 4, 5} que non aparecen en {4, 5, 3}.",
            "Code": "List.Difference({1, 2, 3, 4, 5}, {4, 5, 3})",
            "Result": "{1, 2}"
          },
          {
            "Description": "Buscar os elementos da lista {1, 2} que non aparecen en {1, 2, 3}.",
            "Code": "List.Difference({1, 2}, {1, 2, 3})",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FindText",
      "Documentation": {
        "Documentation.Name": "List.FindText",
        "Documentation.Description": "Devolve unha lista de valores (incluíndo campos de rexistro) que conteñen o texto indicado.",
        "Documentation.LongDescription": "Devolve unha lista de valores da lista <code>list</code> que contiñan o valor <code>text</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar os valores de texto na lista {\"a\", \"b\", \"ab\"} que coincidan con \"a\". ",
            "Code": "List.FindText({\"a\", \"b\", \"ab\"}, \"a\")",
            "Result": "{\"a\", \"ab\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "text": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.FirstN",
      "Documentation": {
        "Documentation.Name": "List.FirstN",
        "Documentation.Description": "Devolve o primeiro conxunto de elementos da lista especificando o número de elementos para devolver ou unha condición de cualificación.",
        "Documentation.LongDescription": " <ul>\r\n  <li>Se se especifica un número, devólvense os elementos ata chegar a ese número. </li>\r\n  <li>Se se especifica unha condición, devólvense todos os elementos que inicialmente cumpren a condición. Cando un elemento non cumpre a condición, non se teñen en conta máis elementos. </li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar os valores iniciais na lista {3, 4, 5, -1, 7, 8, 2} que son maiores que 0.",
            "Code": "List.FirstN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAll",
      "Documentation": {
        "Documentation.Name": "List.MatchesAll",
        "Documentation.Description": "Devolve verdadeiro se todos os valores da lista satisfán á función de condición.",
        "Documentation.LongDescription": "Devolve <code>true</code> se todos os valores da lista <code>list</code> satisfán á función de condición, <code>condition</code>, se non, devolve <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Determinar se todos os valores da lista {11, 12, 13} son maiores que 10.",
            "Code": "List.MatchesAll({11, 12, 13}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Determinar se todos os valores da lista {1, 2, 3} son maiores que 10.",
            "Code": "List.MatchesAll({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MatchesAny",
      "Documentation": {
        "Documentation.Name": "List.MatchesAny",
        "Documentation.Description": "Devolve verdadeiro se un valor satisfai á función de condición.",
        "Documentation.LongDescription": "Devolve <code>true</code> se un dos valores da lista <code>list</code> satisfai á función de condición <code>condition</code>, se non, devolve <code>false</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar se un dos valores iniciais da lista {9, 10, 11} é maior que 10.",
            "Code": "List.MatchesAny({9, 10, 11}, each _  > 10)",
            "Result": "true"
          },
          {
            "Description": "Buscar se un dos valores iniciais da lista {1, 2, 3} é maior que 10.",
            "Code": "List.MatchesAny({1, 2, 3}, each _  > 10)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MaxN",
      "Documentation": {
        "Documentation.Name": "List.MaxN",
        "Documentation.Description": "Devolve os valores máximos da lista. Debe especificarse o número de valores a devolver ou unha condición de filtrado.",
        "Documentation.LongDescription": "Devolve os valores máximos da lista, <code>list</code>.\r\n    Despois de ordenar as filas, pódense especificar parámetros opcionais para filtrar aínda máis o resultado. O parámetro opcional <code>countOrCondition</code> especifica unha condición de filtrado ou o número de valores que se van devolver. O parámetro opcional <code>comparisonCriteria</code> especifica como comparar valores na lista.\r\n <ul>\r\n        <li> <code>list</code>: a lista de valores.</li>\r\n        <li> <code>countOrCondition</code>: se se especifica un número, devólvese unha lista de ata <code>countOrCondition</code> elementos en orde ascendente. Se se especifica unha condición, devólvese unha lista de elementos que inicialmente cumpren a condición. Cando un elemento non cumpre a condición, non se teñen en conta máis elementos.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Opcional]</i> Pódese especificar un valor opcional <code>comparisonCriteria</code> para determinar como comparar os elementos da lista. Se este parámetro é nulo, utilízase o comparador predefinido.\r\n</ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.MinN",
      "Documentation": {
        "Documentation.Name": "List.MinN",
        "Documentation.Description": "Devolve os valores mínimos da lista. Pode especificarse a condición de filtrado ou o número de valores que se van devolver.",
        "Documentation.LongDescription": "Devolve os valores mínimos da lista, <code>list</code>.\r\n O parámetro, <code>countOrCondition</code>, especifica o número de valores a devolver ou unha condición de filtrado. O parámetro opcional, <code>comparisonCriteria</code>, especifica como comparar os valores da lista.\r\n<ul>\r\n        <li> <code>list</code>: A lista de valores.</li>\r\n        <li> <code>countOrCondition</code>: Se se especifica un número, devólvese unha lista de ata <code>countOrCondition</code> elementos en orde ascendente. Se se especifica unha condición, devólvese unha lista de elementos que inicialmente cumpren a condición. Unha vez que un elemento falla a condición, non se consideran máis elementos. Se este parámetro é nulo, devólvese o único valor máis pequeno da lista.</li>\r\n<li><code>comparisonCriteria</code>: <i>[Opcional]</i> Pódese especificar un valor opcional <code>comparisonCriteria</code> para determinar como comparar os elementos da lista. Se este parámetro é nulo, utilízase o comparador predefinido.\r\n</ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Buscar os 5 valores máis pequenos da lista <code>{3, 4, 5, -1, 7, 8, 2}</code>.",
            "Code": "List.MinN({3, 4, 5, -1, 7, 8, 2}, 5)",
            "Result": "{-1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Numbers",
      "Documentation": {
        "Documentation.Name": "List.Numbers",
        "Documentation.Description": "Devolve unha lista de números indicado un valor inicial, unha conta e un valor de incremento opcional.",
        "Documentation.LongDescription": "Devolve unha lista de números indicado un valor inicial, unha conta e un valor de incremento opcional. O valor de incremento predefinido é 1.\r\n<ul>\r\n   <li><code>start</code>: o valor inicial da lista.</li>\r\n   <li><code>count</code>: o número de valores que se van crear.</li>\r\n   <li><code>increment</code>: <i>[Optional]</i> o valor no que se vai incrementar. Se se omite, os valores increméntanse en 1.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Xerar unha lista de 10 números consecutivos comezando en 1.",
            "Code": "List.Numbers(1, 10)",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10\r\n}"
          },
          {
            "Description": "Xerar unha lista de 10 números comezando en 1, cun incremento de 2 para cada número posterior.",
            "Code": "List.Numbers(1, 10, 2)",
            "Result": "{\r\n    1,\r\n    3,\r\n    5,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    15,\r\n    17,\r\n    19\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "start": "number",
        "count": "number",
        "increment": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Percentile",
      "Documentation": {
        "Documentation.Name": "List.Percentile",
        "Documentation.Description": "Devolve un ou máis exemplos de percentís correspondentes ás probabilidades indicadas.",
        "Documentation.LongDescription": "Devolve un ou máis exemplos de percentís da lista <code>list</code>. Se o valor <code>percentiles</code> é un número entre 0,0 e 1,0, tratarase como un percentil e o resultado será\r\n    un valor único correspondente a esa probabilidade. Se o valor <code>percentiles</code> é unha lista de números con valores entre 0,0 e 1,0, o resultado será unha lista de percentís\r\n    correspondente á probabilidade de entrada. Os usuarios avanzados poden usar a opción PercentileMode de <code>options</code> para escoller un método de interpolación máis específico, pero non se recomenda na maioría dos casos.\r\n    Os símbolos predefinidos <code>PercentileMode.ExcelInc</code> e <code>PercentileMode.ExcelExc</code> coinciden cos métodos de interpolación usados polas funcións de Excel\r\n    <code>PERCENTILE.INC</code> e <code>PERCENTILE.EXC</code>. O comportamento predefinido coincide con <code>PercentileMode.ExcelInc</code>. Os símbolos\r\n    <code>PercentileMode.SqlCont</code> e <code>PercentileMode.SqlDisc</code> coinciden co comportamento de SQL Server para <code>PERCENTILE_CONT</code> e\r\n    <code>PERCENTILE_DISC</code>, respectivamente.\r\n  ",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Busque o primeiro cuartil da lista <code>{5, 3, 1, 7, 9}</code>.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, 0.25)",
            "Result": "3"
          },
          {
            "Description": "Busque os cuartís da lista <code>{5, 3, 1, 7, 9}</code> mediante un método de interpolación que coincida co <code>PERCENTILE.EXC</code> de Excel.",
            "Code": "List.Percentile({5, 3, 1, 7, 9}, {0.25, 0.5, 0.75}, [PercentileMode=PercentileMode.ExcelExc])",
            "Result": "{2, 5, 8}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "percentiles": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOf",
      "Documentation": {
        "Documentation.Name": "List.PositionOf",
        "Documentation.Description": "Devolve o(s) desprazamento(s) dun valor da lista.",
        "Documentation.LongDescription": "Devolve o desprazamento no que aparece o valor <code>value</code> na lista <code>list</code>. Devolve -1 se o valor non aparece.\r\n    Tamén se pode especificar un parámetro de ocorrencia opcional, <code>occurrence</code>.\r\n<ul>\r\n   <li><code>occurrence</code>: o número máximo de ocorrencias que se van notificar.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Buscar a posición na lista {1, 2, 3} na que aparece o valor 3.",
            "Code": "List.PositionOf({1, 2, 3}, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "value": "any",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "List.PositionOfAny",
        "Documentation.Description": "Devolve o primeiro desprazamento dun valor da lista.",
        "Documentation.LongDescription": "Devolve o desprazamento na lista <code>list</code> da primeira ocorrencia dun valor da lista <code>values</code>. Devolve -1 se non se localiza ningunha ocorrencia.\r\n    Tamén se pode especificar un parámetro de ocorrencia opcional, <code>occurrence</code>.\r\n<ul>\r\n   <li><code>occurrence</code>: o número máximo de ocorrencias que se poden devolver.</li>\r\n</ul>",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Buscar a primeira posición na lista {1, 2, 3} na que aparece o valor 2 ou 3.",
            "Code": "List.PositionOfAny({1, 2, 3}, {2, 3})",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "values": "list",
        "occurrence": "Occurrence.Type",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Range",
      "Documentation": {
        "Documentation.Name": "List.Range",
        "Documentation.Description": "Devolve un subconxunto da lista comezando nun desprazamento.",
        "Documentation.LongDescription": "Devolve un subconxunto da lista comezando no desprazamento <code>list</code>. Un parámetro opcional, <code>offset</code>, establece o número máximo de elementos no subconxunto.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar o subconxunto, comezando no desprazamento 6, da lista de números de 1 a 10.",
            "Code": "List.Range({1..10}, 6)",
            "Result": "{7, 8, 9, 10}"
          },
          {
            "Description": "Buscar o subconxunto de lonxitude 2 dende o desprazamento 6, da lista de números de 1 a 10.",
            "Code": "List.Range({1..10}, 6, 2)",
            "Result": "{7, 8}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveItems",
        "Documentation.Description": "Elimina os elementos de list1 que están presentes na lista.",
        "Documentation.LongDescription": "Elimina todas as ocorrencias dos valores indicados no <code>list2</code> dende <code>list1</code>. Se os valores en <code>list2</code> non existen en <code>list1</code>, devólvese a lista orixinal.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Eliminar os elementos da lista, {2, 4, 6} da lista {1, 2, 3, 4, 2, 5, 5}.",
            "Code": "List.RemoveItems({1, 2, 3, 4, 2, 5, 5}, {2, 4, 6})",
            "Result": "{1, 3, 5, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.RemoveMatchingItems",
        "Documentation.Description": "Elimina todas as ocorrencias dos valores de entrada.",
        "Documentation.LongDescription": "Elimina todas as ocorrencias dos valores indicados en <code>list2</code> da lista <code>list1</code>. Se os valores en <code>list2</code> non existen en <code>list1</code>, devólvese a lista orixinal.\r\n    Pódese indicar un valor de criterio de ecuación opcional, <code>equationCriteria</code>, para controlar probas de igualdade. ",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de {1, 2, 3, 4, 5, 5} sen {1, 5}.",
            "Code": "List.RemoveMatchingItems({1, 2, 3, 4, 5, 5}, {1, 5})",
            "Result": "{2, 3, 4}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list1": "list",
        "list2": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.RemoveRange",
      "Documentation": {
        "Documentation.Name": "List.RemoveRange",
        "Documentation.Description": "Elimina o número de valores de conta comezando na posición especificada.",
        "Documentation.LongDescription": "Elimina os valores <code>count</code> na <code>list</code> comezando na posición especificada, <code>index</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Eliminar 3 valores da lista {1, 2, 3, 4, -6, -2, -1, 5} comezando no índice 4.",
            "Code": "List.RemoveRange({1, 2, 3, 4, -6, -2, -1, 5}, 4, 3)",
            "Result": "{1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "index": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Repeat",
      "Documentation": {
        "Documentation.Name": "List.Repeat",
        "Documentation.Description": "Devolve unha lista que conta as repeticións da lista orixinal.",
        "Documentation.LongDescription": "Devolve unha lista que ten <code>count</code> repeticións da lista orixinal, <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista que ten {1, 2} repetidos 3 veces.",
            "Code": "List.Repeat({1, 2}, 3)",
            "Result": "{1, 2, 1, 2, 1, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.ReplaceMatchingItems",
      "Documentation": {
        "Documentation.Name": "List.ReplaceMatchingItems",
        "Documentation.Description": "Aplica cada substitución de { old, new }.",
        "Documentation.LongDescription": "Realiza as substitucións indicadas na lista <code>list</code>. Unha operación de substitución <code>replacements</code> consta dunha lista de dous valores, o valor antigo e o valor novo, fornecidos nunha lista.\r\n    Pódese indicar un valor de criterio de ecuación opcional, <code>equationCriteria</code>, para controlar probas de igualdade.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de {1, 2, 3, 4, 5} substituíndo o valor 5 con -5 e o valor 1 con -1.",
            "Code": "List.ReplaceMatchingItems({1, 2, 3, 4, 5}, {{5, -5}, {1, -1}})",
            "Result": "{-1, 2, 3, 4, -5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "replacements": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Select",
      "Documentation": {
        "Documentation.Name": "List.Select",
        "Documentation.Description": "Devolve unha lista de valores que cumpren a condición.",
        "Documentation.LongDescription": "Devolve unha lista de valores da lista <code>list</code> que cumpren a condición de selección <code>selection</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar os valores da lista {1, -3, 4, 9, -2} que son maiores que 0.",
            "Code": "List.Select({1, -3, 4, 9, -2}, each _ > 0)",
            "Result": "{1, 4, 9}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "selection": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Split",
      "Documentation": {
        "Documentation.Name": "List.Split",
        "Documentation.Description": "Divide a lista especificada nunha lista de listas co tamaño de páxina especificado.",
        "Documentation.LongDescription": "Divide <code>list</code> nunha lista de listas onde o primeiro elemento da lista de saída é unha lista que contén os primeiros <code>pageSize</code> elementos da\r\n    lista de orixe, o seguinte elemento da lista de saída é unha lista que contén os seguintes <code>pageSize</code> elementos da lista de orixe etc.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "List.Transform",
      "Documentation": {
        "Documentation.Name": "List.Transform",
        "Documentation.Description": "Devolve unha nova lista de valores calculados dende esta lista.",
        "Documentation.LongDescription": "Devolve unha nova lista de valores aplicando a función de transformación <code>transform</code> á lista, <code>list</code>.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Engadir 1 a cada valor da lista {1, 2}.",
            "Code": "List.Transform({1, 2}, each _ + 1)",
            "Result": "{2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Mixpanel.Export",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "fromDate": "text",
        "toDate": "text",
        "events": "list",
        "bucket": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Atan2",
      "Documentation": {
        "Documentation.Name": "Number.Atan2",
        "Documentation.Description": "Devolve a arcotanxente da división de dous números.",
        "Documentation.LongDescription": "Devolve a arcotanxente da división de dous números, <code>y</code> e <code>x</code>. A división construírase como <code>y</code>/<code>x</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "y": "number",
        "x": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseAnd",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseAnd",
        "Documentation.Description": "Devolve o resultado de realizar unha operación \"And\" bit a bit entre as dúas entradas.",
        "Documentation.LongDescription": "Devolve o resultado de realizar unha operación \"And\" bit a bit entre <code>number1</code> e <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseOr",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseOr",
        "Documentation.Description": "Devolve o resultado de realizar unha operación \"Or\" bit a bit entre as dúas entradas.",
        "Documentation.LongDescription": "Devolve o resultado de realizar un \"Or\" bit a bit entre <code>number1</code> e <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftLeft",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftLeft",
        "Documentation.Description": "Despraza os bits definidos á esquerda.",
        "Documentation.LongDescription": "Devolve o resultado de realizar un desprazamento bit a bit á esquerda en <code>number1</code>, o número especificado de bits <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseShiftRight",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseShiftRight",
        "Documentation.Description": "Despraza os bits definidos á dereita.",
        "Documentation.LongDescription": "Devolve o resultado de realizar un desprazamento bit a bit á dereita en <code>number1</code>, o número especificado de bits <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.BitwiseXor",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseXor",
        "Documentation.Description": "Devolve o resultado de realizar unha operación \"XOR\" (OR exclusivo) bit a bit entre as dúas entradas.",
        "Documentation.LongDescription": "Devolve o resultado de realizar un \"XOR\" (OR exclusivo) bit a bit entre <code>number1</code> e <code>number2</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Combinations",
      "Documentation": {
        "Documentation.Name": "Number.Combinations",
        "Documentation.Description": "Devolve o número de combinacións únicas.",
        "Documentation.LongDescription": "Devolve o número de combinacións únicas dunha lista de elementos, <code>setSize</code> co tamaño da combinación especificada, <code>combinationSize</code>.\r\n<ul>\r\n    <li><code>setSize</code>: o número de elementos na lista.</li>\r\n    <li><code>combinationSize</code>: o número de elementos en cada combinación.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar o número de combinacións dun total de 5 elementos cando cada combinación está nun grupo de 3.",
            "Code": "Number.Combinations(5, 3)",
            "Result": "10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "combinationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.IntegerDivide",
      "Documentation": {
        "Documentation.Name": "Number.IntegerDivide",
        "Documentation.Description": "Divide dous números e devolve a parte enteira do resultado.",
        "Documentation.LongDescription": "Devolve a parte enteira do resultado da división dun número, <code>number1</code>, entre outro número, <code>number2</code>.\r\n    Se <code>number1</code> ou <code>number2</code> son nulos, <code>Number.IntegerDivide</code> devolve nulo.\r\n      <ul>\r\n        <li><code>number1</code>: o dividendo.</li>\r\n        <li><code>number2</code>: o divisor.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Dividir 6 entre 4.",
            "Code": "Number.IntegerDivide(6, 4)",
            "Result": "1"
          },
          {
            "Description": "Dividir 8,3 entre 3.",
            "Code": "Number.IntegerDivide(8.3, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number1": "number",
        "number2": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Mod",
      "Documentation": {
        "Documentation.Name": "Number.Mod",
        "Documentation.Description": "Divide de maneira enteira dous números e devolve o resto.",
        "Documentation.LongDescription": "Devolve o resto resultante da división enteira de <code>number</code> entre <code>divisor</code>.\r\n    Se <code>number</code> ou <code>divisor</code> son nulos, <code>Number.Mod</code> devolve nulo.\r\n      <ul>\r\n        <li><code>number</code>: o dividendo.</li>\r\n        <li><code>divisor</code>: o divisor.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar o resto cando divide 5 entre 3.",
            "Code": "Number.Mod(5, 3)",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "divisor": "number",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Permutations",
      "Documentation": {
        "Documentation.Name": "Number.Permutations",
        "Documentation.Description": "Devolve o número de permutacións.",
        "Documentation.LongDescription": "Devolve o número de permutacións que se poden xerar a partir dun número de elementos, <code>setSize</code>, cun tamaño de permutacións especificado, <code>permutationSize</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar o número de permutacións de un total de 5 elementos en grupos de 3.",
            "Code": "Number.Permutations(5, 3)",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "setSize": "number",
        "permutationSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.Power",
      "Documentation": {
        "Documentation.Name": "Number.Power",
        "Documentation.Description": "Eleva un número á potencia indicada.",
        "Documentation.LongDescription": "Devolve o resultado de elevar <code>number</code> á potencia de <code>power</code>.\r\n    Se <code>number</code> ou <code>power</code> son nulos, <code>Number.Power</code> devolve nulo.\r\n      <ul>\r\n        <li><code>number</code>: a base.</li>\r\n        <li><code>power</code>: o expoñente.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar o valor de 5 elevado á potencia de 3 (5 ao cubo).",
            "Code": "Number.Power(5, 3)",
            "Result": "125"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "power": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Number.RandomBetween",
      "Documentation": {
        "Documentation.Name": "Number.RandomBetween",
        "Documentation.Description": "Devolve un número aleatorio entre dous números.",
        "Documentation.LongDescription": "Devolve un número aleatorio entre <code>bottom</code> e <code>top</code>.",
        "Documentation.Category": "Number.Random",
        "Documentation.Examples": [
          {
            "Description": "Obter un número aleatorio entre 1 e 5.",
            "Code": "Number.RandomBetween(1, 5)",
            "Result": "2.546797"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "bottom": "number",
        "top": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.Field",
      "Documentation": {
        "Documentation.Name": "Record.Field",
        "Documentation.Description": "Devolve o valor do campo especificado nun rexistro.",
        "Documentation.LongDescription": "Devolve o valor do <code>field</code> especificado no <code>record</code>. Se o campo non se localiza, xérase unha excepción.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar o valor do campo \"CustomerID\" no rexistro.",
            "Code": "Record.Field([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FieldOrDefault",
      "Documentation": {
        "Documentation.Name": "Record.FieldOrDefault",
        "Documentation.Description": "Devolve o valor do campo especificado nun rexistro ou o valor predefinido se o campo non se localiza.",
        "Documentation.LongDescription": "Devolve o valor do campo especificado <code>field</code> no rexistro <code>record</code>. Se o campo non se localiza, devólvese o <code>defaultValue</code> opcional.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar o valor do campo \"Teléfono\" no rexistro ou devolver nulo se non existe.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\")",
            "Result": "null"
          },
          {
            "Description": "Buscar o valor do campo \"Teléfono\" no rexistro ou devolver o valor predefinido se non existe.",
            "Code": "Record.FieldOrDefault([CustomerID = 1, Name = \"Bob\"], \"Phone\", \"123-4567\")",
            "Result": "\"123-4567\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "record": "record",
        "field": "text",
        "defaultValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.FromList",
      "Documentation": {
        "Documentation.Name": "Record.FromList",
        "Documentation.Description": "Devolve un rexistro indicada unha lista de valores de campo e un conxunto de campos.",
        "Documentation.LongDescription": "Devolve un rexistro indicada unha <code>list</code> de valores de campo e un conxunto de campos.  <code>fields</code> pode especificarse cunha lista de valores de texto ou un tipo de rexistro.  Se o campo non é único, xérase un erro.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Xera un rexistro dunha lista de valores de campo e unha lista de nomes de campo.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, {\"CustomerID\", \"Name\", \"Phone\"})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Xera un rexistro dunha lista de valores de campo e un tipo de rexistro.",
            "Code": "Record.FromList({1, \"Bob\", \"123-4567\"}, type [CustomerID = number, Name = text, Phone = number])",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "list": "list",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.HasFields",
      "Documentation": {
        "Documentation.Name": "Record.HasFields",
        "Documentation.Description": "Indica se o rexistro ten os campos especificados.",
        "Documentation.LongDescription": "Indica se o rexistro <code>record</code> ten os campos especificados en <code>fields</code> devolvendo un valor lóxico (verdadeiro ou falso)\r\n    Utilizando unha lista poden especificarse varios valores de campo.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Comprobar se o rexistro ten o campo \"CustomerID\".",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], \"CustomerID\")",
            "Result": "true"
          },
          {
            "Description": "Comprobar se o rexistro ten os campos \"CustomerID\" e \"Address\".",
            "Code": "Record.HasFields([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"], {\"CustomerID\", \"Address\"})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "record": "record",
        "fields": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RemoveFields",
      "Documentation": {
        "Documentation.Name": "Record.RemoveFields",
        "Documentation.Description": "Elimina o(s) campo(s) especificado(s) do rexistro de entrada.",
        "Documentation.LongDescription": "Devolve un rexistro que elimina todos os campos especificados na lista <code>fields</code> da entrada <code>record</code>. Se o campo especificado non existe, xérase unha excepción.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Eliminar o campo \"Price\" do rexistro.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], \"Price\")",
            "Result": "[CustomerID = 1, Item = \"Fishing rod\"]"
          },
          {
            "Description": "Eliminar os campos \"Price\" e \"Item\" do rexistro.",
            "Code": "Record.RemoveFields([CustomerID = 1, Item = \"Fishing rod\", Price = 18.00], {\"Price\", \"Item\"})",
            "Result": "[CustomerID = 1]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.RenameFields",
      "Documentation": {
        "Documentation.Name": "Record.RenameFields",
        "Documentation.Description": "Aplica o(s) renomeamento(s) da lista no formato { old, new }.",
        "Documentation.LongDescription": "Devolve un rexistro despois de renomear campos da entrada <code>record</code> aos novos nomes de campo especificados na lista <code>renames</code>. Para renomear varios, pódese utilizar unha lista aniñada ({ {old1, new1}, {old2, new2} }.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Renomear o campo \"UnitPrice\" a \"Price\" do rexistro.",
            "Code": "Record.RenameFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\"UnitPrice\", \"Price\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          },
          {
            "Description": "Renomear os campos \"UnitPrice\" a \"Price\" e \"OrderNum\" a \"OrderID\"  do rexistro.",
            "Code": "Record.RenameFields(\r\n    [OrderNum = 1, CustomerID = 1, Item = \"Fishing rod\", UnitPrice = 100.0],\r\n    {\r\n        {\"UnitPrice\", \"Price\"},\r\n        {\"OrderNum\", \"OrderID\"}\r\n    }\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "renames": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.ReorderFields",
      "Documentation": {
        "Documentation.Name": "Record.ReorderFields",
        "Documentation.Description": "Reordena o(s) campo(s) especificados na nova orde.",
        "Documentation.LongDescription": "Devolve un rexistro despois de reordenar os campos de <code>record</code> na orde de campos especificada na lista <code>fieldOrder</code> Os valores de campo mantéñense e os campos non listados en <code>fieldOrder</code> déixanse na súa posición orixinal.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Reordenar algúns dos campos do rexistro.",
            "Code": "Record.ReorderFields(\r\n    [CustomerID = 1, OrderID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"OrderID\", \"CustomerID\"}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fieldOrder": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.SelectFields",
      "Documentation": {
        "Documentation.Name": "Record.SelectFields",
        "Documentation.Description": "Devolve o rexistro que contén só os campos especificados.",
        "Documentation.LongDescription": "Devolve un rexistro que só inclúe os campos especificados na lista <code>fields</code> da entrada <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Seleccionar os campos \"Item\" e \"Price\" do rexistro.",
            "Code": "Record.SelectFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0],\r\n    {\"Item\", \"Price\"}\r\n)",
            "Result": "[Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "fields": "any",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Record.TransformFields",
      "Documentation": {
        "Documentation.Name": "Record.TransformFields",
        "Documentation.Description": "Devolve un rexistro despois de aplicar as transformacións especificadas.",
        "Documentation.LongDescription": "Devolve un rexistro despois de aplicar as transformacións especificadas na lista <code>transformOperations</code> a <code>record</code>.\r\n    Pódense transformar un ou máis campos nun momento determinado.\r\n      <div>No caso de transformar un único campo, espérase que <code>transformOperations</code> sexa unha lista con dous elementos. O primeiro elemento de <code>transformOperations</code> especifica un nome de campo e o segundo elemento de <code>transformOperations</code> especifica a función que se vai usar para a transformación. Por exemplo, <code>{\"Quantity\", Number.FromText}</code></div>\r\n      <div>No caso de transformar varios campos, espérase que <code>transformOperations</code> sexa unha lista de listas, onde cada lista interna é unha parella de nome de campo e operación de transformación. Por exemplo, <code>{{\"Quantity\",Number.FromText},{\"UnitPrice\", Number.FromText}}</code></div>",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Converta o campo \"Price\" a un número.",
            "Code": "Record.TransformFields(\r\n    [OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {\"Price\", Number.FromText}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          },
          {
            "Description": "Converter os campos \"OrderID\" e \"Price\" a números.",
            "Code": "Record.TransformFields(\r\n    [OrderID = \"1\", CustomerID = 1, Item = \"Fishing rod\", Price = \"100.0\"],\r\n    {{\"OrderID\", Number.FromText}, {\"Price\", Number.FromText}}\r\n)",
            "Result": "[OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "record": "record",
        "transformOperations": "list",
        "missingField": "MissingField.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Splitter.SplitTextByCharacterTransition",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByCharacterTransition",
        "Documentation.Description": "Devolve unha función que divide texto nunha lista de texto segundo unha transición desde un tipo de carácter a outro. Os parámetros {0} e {1} poden ser unha lista de caracteres ou unha función que toma un carácter e devolve true ou false.",
        "Documentation.LongDescription": "Devolve unha función que divide texto nunha lista de texto segundo unha transición desde un tipo de carácter a outro. Os parámetros <code>before</code> e <code>after</code> poden ser unha lista de caracteres ou unha función que toma un carácter e devolve true ou false.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Divide a entrada sempre que unha letra maiúscula ou minúscula vaia seguida dun díxito.",
            "Code": "Splitter.SplitTextByCharacterTransition({\"A\"..\"Z\", \"a\"..\"z\"}, {\"0\"..\"9\"})(\"Abc123\")",
            "Result": "{\"Abc\", \"123\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "before": "any",
        "after": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "SqlExpression.ToExpression",
      "Documentation": {
        "Documentation.Name": "SqlExpression.ToExpression",
        "Documentation.Description": "Converte a consulta SQL proporcionada a código M. Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Converte a consulta <code>sql</code> proporcionada a código M, cos identificadores dispoñibles definidos por <code>environment</code>. Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "sql": "text",
        "environment": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Column",
      "Documentation": {
        "Documentation.Name": "Table.Column",
        "Documentation.Description": "Devolve unha columna específica de datos da táboa como unha lista.",
        "Documentation.LongDescription": "Devolve a columna de datos especificada por <code>column</code> da táboa <code>table</code> como unha lista.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Devolve os valores da columna [Name] da táboa.",
            "Code": "Table.Column(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "{\"Bob\", \"Jim\", \"Paul\", \"Ringo\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ColumnsOfType",
      "Documentation": {
        "Documentation.Name": "Table.ColumnsOfType",
        "Documentation.Description": "Devolve unha lista cos nomes das columnas que coinciden cos tipos especificados.",
        "Documentation.LongDescription": "Devolve unha lista cos nomes das columnas da táboa <code>table</code> que coinciden cos tipos especificados en <code>listOfTypes</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Devolver os nomes das columnas de tipo Number.Type da táboa.",
            "Code": "Table.ColumnsOfType(\r\n    Table.FromRecords(\r\n        {[a = 1, b = \"hello\"]},\r\n        type table[a = Number.Type, b = Text.Type]\r\n    ),\r\n    {type number}\r\n)",
            "Result": "{\"a\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "listOfTypes": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Contains",
      "Documentation": {
        "Documentation.Name": "Table.Contains",
        "Documentation.Description": "Indica se o rexistro especificado aparece como unha fila na táboa.",
        "Documentation.LongDescription": "Indica se o rexistro especificado, <code>row</code>, aparece como unha fila en <code>table</code>.\r\n    Pódese especificar un parámetro opcional <code>equationCriteria</code> para controlar a comparación entre as filas da táboa.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a táboa contén a fila.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Bob\"]\r\n)",
            "Result": "true"
          },
          {
            "Description": "Determinar se a táboa contén a fila.",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [Name = \"Ted\"]\r\n)",
            "Result": "false"
          },
          {
            "Description": "Determinar se a táboa contén a fila comparando só a columna [Name].",
            "Code": "Table.Contains(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    [CustomerID = 4, Name = \"Bob\"],\r\n    \"Name\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "row": "record",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAll",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAll",
        "Documentation.Description": "Indica se todos os rexistros especificados aparecen como filas na táboa.",
        "Documentation.LongDescription": "Indica se todos os rexistros especificados na lista de rexistros <code>rows</code> aparecen como filas en <code>table</code>.\r\n    Pódese especificar un parámetro opcional <code>equationCriteria</code> para controlar a comparación entre as filas da táboa.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Determine se a táboa contén todas as filas comparando só a columna [CustomerID].",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    },\r\n    \"CustomerID\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Determinar se a táboa contén todas as filas.",
            "Code": "Table.ContainsAll(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\r\n        [CustomerID = 1, Name = \"Bill\"],\r\n        [CustomerID = 2, Name = \"Fred\"]\r\n    }\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ContainsAny",
      "Documentation": {
        "Documentation.Name": "Table.ContainsAny",
        "Documentation.Description": "Indica se algún dos rexistros especificados aparece como filas na táboa.",
        "Documentation.LongDescription": "Indica se algún dos rexistros especificados na lista de rexistros <code>rows</code> aparece como filas en <code>table</code>.\r\n    Pódese especificar un parámetro opcional <code>equationCriteria</code> para controlar a comparación entre as filas da táboa.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a táboa <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> contén as filas <code>[a = 1, b = 2]</code> ou <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "true"
          },
          {
            "Description": "Determinar se a táboa <code>({[a = 1, b = 2], [a = 3, b = 4]})</code> contén as filas <code>[a = 1, b = 3]</code> ou <code>[a = 3, b = 5]</code>.",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    }\r\n)",
            "Result": "false"
          },
          {
            "Description": "Determinar se a táboa <code>(Table.FromRecords({[a = 1, b = 2], [a = 3, b = 4]}))</code> contén as filas <code>[a = 1, b = 3]</code> e <code>[a = 3, b = 5]</code> comparando só a columna [a].",
            "Code": "Table.ContainsAny(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = 3, b = 4]\r\n    }),\r\n    {\r\n        [a = 1, b = 3],\r\n        [a = 3, b = 5]\r\n    },\r\n    \"a\"\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.FilterWithDataTable",
      "Documentation": {
        "Documentation.Name": "Table.FilterWithDataTable",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "dataTableIdentifier": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.HasColumns",
      "Documentation": {
        "Documentation.Name": "Table.HasColumns",
        "Documentation.Description": "Indica se a táboa contén a(s) columna(s) especificada(s).",
        "Documentation.LongDescription": "Indica se a <code>table</code> contén a(s) columna(s) especificada(s), <code>columns</code>. Devolve <code>true</code> se a táboa contén a(s) columna(s), se non, <code>false</code>.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a táboa ten a columna [Name].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "true"
          },
          {
            "Description": "Buscar se a táboa ten as columnas [Name] e [PhoneNumber].",
            "Code": "Table.HasColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    }),\r\n    {\"Name\", \"PhoneNumber\"}\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "columns": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAllRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAllRows",
        "Documentation.Description": "Indica se todos os rexistros da táboa cumpren a condición especificada.",
        "Documentation.LongDescription": "Indica se todos os rexistros da <code>table</code> coinciden coa <code>condition</code> indicada. Devolve <code>true</code> se todas as filas coinciden, se non, <code>false</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Determinar se todos os valores de fila na columna [a] son pares na táboa.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "true"
          },
          {
            "Description": "Buscar se todos os valores de fila son [a = 1, b = 2],na táboa <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAllRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.MatchesAnyRows",
      "Documentation": {
        "Documentation.Name": "Table.MatchesAnyRows",
        "Documentation.Description": "Indica se algunha das filas da táboa cumpre a condición especificada.",
        "Documentation.LongDescription": "Indica se algunha das filas da <code>table</code> coinciden coa <code>condition</code> indicada. Devolve <code>true</code> se algunha das filas coinciden, se non, <code>false</code>.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Determinar se algún dos valores de fila na columna [a] son pares na táboa <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 4],\r\n        [a = 3, b = 8]\r\n    }),\r\n    each Number.Mod([a], 2) = 0\r\n)",
            "Result": "false"
          },
          {
            "Description": "Determinar se algún dos valores de fila son [a = 1, b = 2] na táboa <code>({[a = 1, b = 2], [a = 3, b = 4]})</code>.",
            "Code": "Table.MatchesAnyRows(\r\n    Table.FromRecords({\r\n        [a = 1, b = 2],\r\n        [a = -3, b = 4]\r\n    }),\r\n    each _ = [a = 1, b = 2]\r\n)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "condition": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Max",
      "Documentation": {
        "Documentation.Name": "Table.Max",
        "Documentation.Description": "Devolve a fila maior ou o valor predefinido usando os criterios indicados.",
        "Documentation.LongDescription": "Devolve a fila maior da <code>table</code>, dados os <code>comparisonCriteria</code>. Se a táboa está baleira, devólvese o valor opcional <code>default</code>. ",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Buscar a fila co maior valor na columna [a] da táboa <code>({[a = 2, b = 4], [a = 6, b = 8]})</code>.",
            "Code": "Table.Max(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 6, b = 8]"
          },
          {
            "Description": "Buscar a fila co maior valor na columna [a] da táboa <code>({})</code>. Devolver -1 se está baleira.",
            "Code": "Table.Max(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Min",
      "Documentation": {
        "Documentation.Name": "Table.Min",
        "Documentation.Description": "Devolve a fila máis pequena ou un valor predefinido usando os criterios indicados.",
        "Documentation.LongDescription": "Devolve a(s) fila(s) máis pequena(s) da <code>table</code>, indicados os <code>comparisonCriteria</code>. Se a táboa está baleira, devólvese o valor opcional <code>default</code>.",
        "Documentation.Category": "Table.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Buscar a fila co valor máis pequeno na columna [a] da táboa.",
            "Code": "Table.Min(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }),\r\n    \"a\"\r\n)",
            "Result": "[a = 2, b = 4]"
          },
          {
            "Description": "Buscar a fila co valor máis pequeno na columna [a] da táboa. Devolver -1 se está baleira.",
            "Code": "Table.Min(#table({\"a\"}, {}), \"a\", -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any",
        "default": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOf",
      "Documentation": {
        "Documentation.Name": "Table.PositionOf",
        "Documentation.Description": "Devolve a posición ou as posicións da fila dentro da táboa.",
        "Documentation.LongDescription": "Devolve a posición da fila da primeira ocorrencia de <code>row</code> na <code>table</code> especificada. Devolve -1 se non se localiza ningunha ocorrencia.\r\n    <ul>\r\n       <li><code>table</code>: a táboa de entrada.</li>\r\n       <li><code>row</code>: a fila na táboa para a que se vai buscar a posición.</li>\r\n       <li><code>occurrence</code>: <i>[Optional]</i> especifica que ocorrencias da fila se van devolver.</li>\r\n       <li><code>equationCriteria</code>: <i>[Optional]</i> controla a comparación entre as filas da táboa.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Buscar a posición da primeira ocorrencia de [a = 2, b = 4] na táboa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4]\r\n)",
            "Result": "0"
          },
          {
            "Description": "Buscar a posición da segunda ocorrencia de [a = 2, b = 4] na táboa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    1\r\n)",
            "Result": "2"
          },
          {
            "Description": "Buscar a posición de todas as ocorrencias de [a = 2, b = 4] na táboa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOf(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    [a = 2, b = 4],\r\n    Occurrence.All\r\n)",
            "Result": "{0, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "row": "record",
        "occurrence": "any",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Table.PositionOfAny",
        "Documentation.Description": "Devolve a posición ou as posicións de calquera das filas especificadas dentro da táboa.",
        "Documentation.LongDescription": "Devolve as posicións das filas de <code>table</code> da primeira ocorrencia da lista de <code>rows</code>. Devolve -1 se non se localiza ningunha ocorrencia.\r\n    <ul>\r\n    <li><code>table</code>: a táboa de entrada.</li>\r\n       <li><code>rows</code>: a lista de filas na táboa para as que se van buscar as posicións.</li>\r\n       <li><code>occurrence</code>: <i>[Optional]</i> especifica que ocorrencias da fila se van devolver.</li>\r\n       <li><code>equationCriteria</code>: <i>[Optional]</i> controla a comparación entre as filas da táboa.</li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Buscar a posición da primeira ocorrencia de [a = 2, b = 4] ou [a = 6, b = 8] na táboa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]})</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    }\r\n)",
            "Result": "0"
          },
          {
            "Description": "Buscar a posición de todas as ocorrencias de [a = 2, b = 4] ou [a = 6, b = 8] na táboa <code>({[a = 2, b = 4], [a = 6, b = 8], [a = 2, b = 4], [a = 1, b = 4]}</code>.",
            "Code": "Table.PositionOfAny(\r\n    Table.FromRecords({\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8],\r\n        [a = 2, b = 4],\r\n        [a = 1, b = 4]\r\n    }),\r\n    {\r\n        [a = 2, b = 4],\r\n        [a = 6, b = 8]\r\n    },\r\n    Occurrence.All\r\n)",
            "Result": "{0, 1, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "rows": "list",
        "occurrence": "number",
        "equationCriteria": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.ReplaceRelationshipIdentity",
      "Documentation": {
        "Documentation.Name": "Table.ReplaceRelationshipIdentity",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "identity": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.Split",
      "Documentation": {
        "Documentation.Name": "Table.Split",
        "Documentation.Description": "Divide a táboa especificada nunha lista de táboas co tamaño de páxina especificado.",
        "Documentation.LongDescription": "Divide <code>table</code> nunha lista de táboas onde o primeiro elemento da lista é unha táboa que contén as primeiras <code>pageSize</code> filas da\r\n    táboa de orixe, o seguinte elemento da lista é unha táboa que contén as seguintes <code>pageSize</code> filas da táboa de orixe etc.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Divida unha táboa de cinco rexistros en táboas con dous rexistros cada unha.",
            "Code": "let\r\n    Customers = Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"],\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\nin\r\n    Table.Split(Customers, 2)",
            "Result": "{\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Cristina\", Phone = \"232-1550\"]\r\n    }),\r\n    Table.FromRecords({\r\n        [CustomerID = 5, Name = \"Anita\", Phone = \"530-1459\"]\r\n    })\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "pageSize": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.SplitAt",
      "Documentation": {
        "Documentation.Name": "Table.SplitAt",
        "Documentation.Description": "Devolve unha lista que contén as primeiras filas de recontos especificadas e as filas restantes.",
        "Documentation.LongDescription": "Devolve unha lista que contén dúas táboas: unha táboa coas N primeiras filas de <code>table</code> (segundo especifica <code>count</code>) e unha táboa que contén as filas restantes de <code>table</code>.\r\n\r\nSe as táboas da lista resultante se enumeran exactamente unha vez e en orde, a función enumerará <code>table</code> só unha vez.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Devolva as dúas primeiras filas da táboa e as filas restantes desta.",
            "Code": "Table.SplitAt(#table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}), 2)",
            "Result": "{\r\n    #table({\"a\", \"b\", \"c\"}, {{1, 2, 3}, {4, 5, 6}}),\r\n    #table({\"a\", \"b\", \"c\"}, {{7, 8, 9}})\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.TransformRows",
      "Documentation": {
        "Documentation.Name": "Table.TransformRows",
        "Documentation.Description": "Transforma as filas da táboa usando a función de transformación especificada.",
        "Documentation.LongDescription": "Crea unha <code>list</code> aplicando a operación <code>transform</code> a cada fila en <code>table</code>.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Transformar as filas dunha táboa nunha lista de números.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    each [a]\r\n)",
            "Result": "{1, 2, 3, 4, 5}"
          },
          {
            "Description": "Transformar as filas dunha táboa numérica en rexistros textuais.",
            "Code": "Table.TransformRows(\r\n    Table.FromRecords({\r\n        [a = 1],\r\n        [a = 2],\r\n        [a = 3],\r\n        [a = 4],\r\n        [a = 5]\r\n    }),\r\n    (row) as record => [B = Number.ToText(row[a])]\r\n)",
            "Result": "{\r\n    [B = \"1\"],\r\n    [B = \"2\"],\r\n    [B = \"3\"],\r\n    [B = \"4\"],\r\n    [B = \"5\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "transform": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Table.WithErrorContext",
      "Documentation": {
        "Documentation.Name": "Table.WithErrorContext",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "context": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.AfterDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.AfterDelimiter",
        "Documentation.Description": "Text.AfterDelimiter",
        "Documentation.LongDescription": "Devolve a parte de <code>text</code> que está despois do <code>delimiter</code> que se especifique.\r\n    Un <code>index</code> numérico opcional indica o <code>delimiter</code> que se debe considerar.\r\n    Unha lista opcional <code>index</code> indica o <code>delimiter</code> que se debe considerar, e tamén se a indexación se debe facer desde o principio ou desde o final da entrada.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Obteña a parte de \"111-222-333\" que está despois do (primeiro) trazo.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"222-333\""
          },
          {
            "Description": "Obteña a parte de \"111-222-333\" que está despois do segundo trazo.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"333\""
          },
          {
            "Description": "Obteña a parte de \"111-222-333\" que está despois do segundo trazo comezando desde o final.",
            "Code": "Text.AfterDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"222-333\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.At",
      "Documentation": {
        "Documentation.Name": "Text.At",
        "Documentation.Description": "Devolve o carácter que está na posición especificada.",
        "Documentation.LongDescription": "Devolve o carácter no valor de texto, <code>text</code>, que está na posición <code>index</code>. O primeiro carácter do texto que está na posición 0.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Buscar o carácter que está na posición 4 na cadea \"Ola, mundo\".",
            "Code": "Text.At(\"Hello, World\", 4)",
            "Result": "\"o\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "index": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.BeforeDelimiter",
      "Documentation": {
        "Documentation.Name": "Text.BeforeDelimiter",
        "Documentation.Description": "Text.BeforeDelimiter",
        "Documentation.LongDescription": "Devolve a parte de <code>text</code> que está antes do <code>delimiter</code> que se especifique.\r\n    Un <code>index</code> numérico opcional indica o <code>delimiter</code> que se debe considerar.\r\n    Unha lista opcional <code>index</code> indica o <code>delimiter</code> que se debe considerar, e tamén se a indexación se debe facer desde o principio ou desde o final da entrada.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Obteña a parte de \"111-222-333\" que está antes do (primeiro) trazo.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\")",
            "Result": "\"111\""
          },
          {
            "Description": "Obteña a parte de \"111-222-333\" que está antes do segundo trazo.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", 1)",
            "Result": "\"111-222\""
          },
          {
            "Description": "Obteña a parte de \"111-222-333\" que está antes do segundo trazo comezando desde o final.",
            "Code": "Text.BeforeDelimiter(\"111-222-333\", \"-\", {1, RelativePosition.FromEnd})",
            "Result": "\"111\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "delimiter": "text",
        "index": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Contains",
      "Documentation": {
        "Documentation.Name": "Text.Contains",
        "Documentation.Description": "Devolve se o texto contén a subcadea.",
        "Documentation.LongDescription": "Detecta se <code>text</code> contén o valor <code>substring</code>. Devolve \"true\" se se atopa o valor. Esta función non admite comodíns nin expresións regulares.\r\n      <br>\r\n      <br>\r\n      O argumento opcional <code>comparer</code> pode usarse para especificar comparacións que non distingan maiúsculas de minúsculas ou que teñan en conta a referencia cultural e a configuración rexional.\r\n      Os seguintes comparadores integrados están dispoñibles na linguaxe da fórmula:\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: úsase para realizar unha comparación ordinal que distingue entre maiúsculas e minúsculas</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>:  úsase para realizar unha comparación ordinal que non distingue maiúsculas de minúsculas</li>\r\n        <li> <code>Comparer.FromCulture</code>: úsase para realizar unha comparación de recoñecemento de referencias culturais</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Buscar se o texto \"Ola, mundo\" contén \"Ola\".",
            "Code": "Text.Contains(\"Hello World\", \"Hello\")",
            "Result": "true"
          },
          {
            "Description": "Buscar se o texto \"Ola, mundo\" contén \"ola\".",
            "Code": "Text.Contains(\"Hello World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Busque se o texto “Ola mundo” contén “ola” usando un comparador que non distingue entre maiúsculas e minúsculas.",
            "Code": "Text.Contains(\"Hello World\", \"hello\", Comparer.OrdinalIgnoreCase)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.End",
      "Documentation": {
        "Documentation.Name": "Text.End",
        "Documentation.Description": "Devolve o último carácter do texto.",
        "Documentation.LongDescription": "Devolve un valor <code>text</code> que é o último carácter <code>count</code> do valor <code>text</code> <code>text</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Obter os últimos cinco caracteres do texto \"Ola, mundo\".",
            "Code": "Text.End(\"Hello, World\", 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.EndsWith",
      "Documentation": {
        "Documentation.Name": "Text.EndsWith",
        "Documentation.Description": "Indica se o texto finaliza no valor especificado.",
        "Documentation.LongDescription": "Indica se o texto indicado, <code>text</code>, finaliza co valor especificado, <code>substring</code>. A indicación diferencia maiúsculas de minúsculas.\r\n\r\n      <div>\r\n        <code>comparer</code> é un <code>Comparer</code> que se usa para controlar a comparación. Os comparadores pódense usar para comparacións que non diferencian maiúsculas de minúsculas ou que recoñecen referencias culturais e a configuración rexional.\r\n      </div>\r\n      <div>\r\n        Os seguintes comparadores incorporados están dispoñibles na linguaxe da fórmula:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: úsase para realizar unha comparación ordinal exacta</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: úsase para realizar unha comparación ordinal exacta que non diferencie maiúsculas de minúsculas</li>\r\n        <li> <code>Comparer.FromCulture</code>: úsase para realizar unha comparación ordinal exacta que non diferencie maiúsculas de minúsculas</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Comprobar se \"Ola, mundo\" finaliza con \"mundo\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"world\")",
            "Result": "false"
          },
          {
            "Description": "Comprobe se \"Ola, mundo\" finaliza con \"Mundo\".",
            "Code": "Text.EndsWith(\"Hello, World\", \"World\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Format",
      "Documentation": {
        "Documentation.Name": "Text.Format",
        "Documentation.Description": "Devolve texto con formato a partir de argumentos e unha cadea de formato.",
        "Documentation.LongDescription": "Devolve texto con formato que se crea ao aplicar <code>arguments</code> dunha lista ou rexistro a unha cadea de formato <code>formatString</code>. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Dea formato a unha lista de números.",
            "Code": "Text.Format(\"#{0}, #{1}, and #{2}.\", {17, 7, 22})",
            "Result": "\"17, 7, and 22.\""
          },
          {
            "Description": "Dea formato aos diferentes tipos de datos dun rexistro segundo a referencia cultural Estados Unidos (inglés).",
            "Code": "Text.Format(\r\n    \"The time for the #[distance] km run held in #[city] on #[date] was #[duration].\",\r\n    [\r\n        city = \"Seattle\",\r\n        date = #date(2015, 3, 10),\r\n        duration = #duration(0, 0, 54, 40),\r\n        distance = 10\r\n    ],\r\n    \"en-US\"\r\n)",
            "Result": "\"The time for the 10 km run held in Seattle on 3/10/2015 was 00:54:40.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "formatString": "text",
        "arguments": "any",
        "culture": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Middle",
      "Documentation": {
        "Documentation.Name": "Text.Middle",
        "Documentation.Description": "Devolve a subcadea ata unha lonxitude específica.",
        "Documentation.LongDescription": "Devolve <code>count</code> caracteres ou ata o final de <code>text</code>; no desprazamento <code>start</code>.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Busque a subcadea no texto \"Hello World\" comezando polo índice 6 abarcando 5 caracteres.",
            "Code": "Text.Middle(\"Hello World\", 6, 5)",
            "Result": "\"World\""
          },
          {
            "Description": "Busque a subcadea no texto \"Hello World\" comezando polo índice 6 ata o final.",
            "Code": "Text.Middle(\"Hello World\", 6, 20)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "start": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadEnd",
      "Documentation": {
        "Documentation.Name": "Text.PadEnd",
        "Documentation.Description": "Devolve un texto dunha lonxitude especificada polo enchemento ao final do texto seleccionado.",
        "Documentation.LongDescription": "Devolve un valor <code>text</code> enchido ata <code>count</code> de lonxitude ao inserir espazos ao final do valor de texto <code>text</code>.\r\n    O parámetro opcional <code>character</code> pódese utilizar para especificar o carácter usado para o enchemento. O carácter de enchemento predefinido é un espazo.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Encher o final dun valor de texto para que teña 10 caracteres de lonxitude.",
            "Code": "Text.PadEnd(\"Name\", 10)",
            "Result": "\"Name      \""
          },
          {
            "Description": "Encher o final dun valor de texto con \"|\" para que teña 10 caracteres de lonxitude.",
            "Code": "Text.PadEnd(\"Name\", 10, \"|\")",
            "Result": "\"Name||||||\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PadStart",
      "Documentation": {
        "Documentation.Name": "Text.PadStart",
        "Documentation.Description": "Devolve un texto dunha lonxitude especificada polo enchemento ao inicio do texto seleccionado.",
        "Documentation.LongDescription": "Devolve un valor <code>text</code> enchido ata <code>count</code> de lonxitude ao inserir espazos ao inicio do valor de texto <code>text</code>.\r\n    O parámetro opcional <code>character</code> pódese utilizar para especificar o carácter usado para o enchemento. O carácter de enchemento predefinido é un espazo.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Encher o inicio dun valor de texto para que teña 10 caracteres de lonxitude.",
            "Code": "Text.PadStart(\"Name\", 10)",
            "Result": "\"      Name\""
          },
          {
            "Description": "Encher o inicio dun valor de texto con \"|\" para que teña 10 caracteres de lonxitude.",
            "Code": "Text.PadStart(\"Name\", 10, \"|\")",
            "Result": "\"||||||Name\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number",
        "character": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOf",
      "Documentation": {
        "Documentation.Name": "Text.PositionOf",
        "Documentation.Description": "Devolve a primeira posición do valor (-1 se non se localiza).",
        "Documentation.LongDescription": "Devolve a posición da ocorrencia especificada do valor de texto <code>substring</code> localizado en <code>text</code>.\r\n    O parámetro opcional <code>occurrence</code> pódese usar para especificar que posición da ocorrencia se vai devolver (por defecto, a primeira ocorrencia).\r\n    Devolve -1 se non se atopou <code>substring</code>.\r\n\r\n      <div>\r\n        <code>comparer</code> é un <code>Comparer</code> que se usa para controlar a comparación. Os comparadores pódense usar para comparacións que non diferencian maiúsculas de minúsculas ou que recoñecen referencias culturais e a configuración rexional.\r\n      </div>\r\n      <div>\r\n        Os seguintes comparadores incorporados están dispoñibles na linguaxe da fórmula:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: úsase para realizar unha comparación ordinal exacta</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: úsase para realizar unha comparación ordinal exacta que non diferencie maiúsculas de minúsculas</li>\r\n        <li> <code>Comparer.FromCulture</code>: úsase para realizar unha comparación de recoñecemento de referencias culturais</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Obter a posición da primeira ocorrencia de \"Mundo\" no texto \"Ola, Mundo!\". \"Ola, Mundo!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\")",
            "Result": "7"
          },
          {
            "Description": "Obter a posición da última ocorrencia de \"Mundo\" en \"Ola, Mundo!\". \"Ola, Mundo!\".",
            "Code": "Text.PositionOf(\"Hello, World! Hello, World!\", \"World\", Occurrence.Last)",
            "Result": "21"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "occurrence": "Occurrence.Type",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.PositionOfAny",
      "Documentation": {
        "Documentation.Name": "Text.PositionOfAny",
        "Documentation.Description": "Devolve a primeira posición do valor de texto de calquera carácter listado (-1 se non se localiza).",
        "Documentation.LongDescription": "Devolve a primeira posición de calquera carácter da lista <code>characters</code> que se atopa en <code>text</code>.\n     Pódese utilizar un parámetro opcional <code>occurrence</code> para especificar a posición de ocorrencia que se devolverá.",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Buscar a primeira posición de \"O\" ou \"M\" no texto \"Ola, Mundo!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"})",
            "Result": "0"
          },
          {
            "Description": "Buscar todas as posicións de \"O\" ou \"M\" no texto \"Ola, Mundo!\".",
            "Code": "Text.PositionOfAny(\"Hello, World!\", {\"H\", \"W\"}, Occurrence.All)",
            "Result": "{0, 7}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "text",
        "characters": "list",
        "occurrence": "Occurrence.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Range",
      "Documentation": {
        "Documentation.Name": "Text.Range",
        "Documentation.Description": "Devolve a subcadea localizada no desprazamento.",
        "Documentation.LongDescription": "Devolve a subcadea do texto <code>text</code> localizada no desprazamento <code>offset</code>.\r\n    O parámetro opcional <code>count</code> pódese incluír para especificar o número de caracteres que se van devolver. Xera un erro se non hai caracteres suficientes.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Buscar a subcadea do texto \"Ola, Mundo\" comezando no índice 6.",
            "Code": "Text.Range(\"Hello World\", 6)",
            "Result": "\"World\""
          },
          {
            "Description": "Buscar a subcadea do texto \"Ola, Mundo, Ola\" comezando no índice 6 expandindo 5 caracteres.",
            "Code": "Text.Range(\"Hello World Hello\", 6, 5)",
            "Result": "\"World\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Remove",
      "Documentation": {
        "Documentation.Name": "Text.Remove",
        "Documentation.Description": "Elimina todas as ocorrencias do carácter indicado ou da lista de caracteres a partir do valor de entrada de texto.",
        "Documentation.LongDescription": "Devolve unha copia do valor de texto <code>text</code> eliminados todos os caracteres dende <code>removeChars</code>.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Eliminar os caracteres , e ; do valor de texto.",
            "Code": "Text.Remove(\"a,b;c\", {\",\",\";\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "removeChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.RemoveRange",
      "Documentation": {
        "Documentation.Name": "Text.RemoveRange",
        "Documentation.Description": "Eliminar a conta de caracteres comezando no desprazamento indicado.",
        "Documentation.LongDescription": "Devolve unha copia do valor de texto <code>text</code> con todos os caracteres desde a posición <code>offset</code> eliminados.\r\n    O parámetro opcional <code>count</code> pódese usar para especificar o número de caracteres que se van eliminar. O valor predefinido de <code>count</code> é 1. Os valores de posición comezan en 0.",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Eliminar un carácter do valor de texto \"ABEFC\" na posición 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2)",
            "Result": "\"ABFC\""
          },
          {
            "Description": "Eliminar dous caracteres do valor de texto \"ABEFC\" comezando na posición 2.",
            "Code": "Text.RemoveRange(\"ABEFC\", 2, 2)",
            "Result": "\"ABC\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "offset": "number",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Repeat",
      "Documentation": {
        "Documentation.Name": "Text.Repeat",
        "Documentation.Description": "Devolve un valor de texto composto polo texto de entrada repetido un número de veces especificado.",
        "Documentation.LongDescription": "Devolve un valor de texto composto polo texto de entrada <code>text</code> repetido <code>count</code> veces.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Repetir o texto \"a\" cinco veces.",
            "Code": "Text.Repeat(\"a\", 5)",
            "Result": "\"aaaaa\""
          },
          {
            "Description": "Repetir o texto \"olamundo\" tres veces.",
            "Code": "Text.Repeat(\"helloworld.\", 3)",
            "Result": "\"helloworld.helloworld.helloworld.\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Select",
      "Documentation": {
        "Documentation.Name": "Text.Select",
        "Documentation.Description": "Seleccione todas as ocorrencias do carácter indicado ou da lista de caracteres a partir do valor de entrada de texto.",
        "Documentation.LongDescription": "Devolve unha copia do valor de texto <code>text</code> eliminados todos os caracteres non incluídos en <code>selectChars</code>.  ",
        "Documentation.Category": "Text.Modification",
        "Documentation.Examples": [
          {
            "Description": "Seleccione todos os caracteres no intervalo de \"a\" a \"z\" do valor de texto.",
            "Code": "Text.Select(\"a,b;c\", {\"a\"..\"z\"})",
            "Result": "\"abc\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "selectChars": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Split",
      "Documentation": {
        "Documentation.Name": "Text.Split",
        "Documentation.Description": "Divide texto nunha lista de valores de texto baseándose nun delimitador especificado.",
        "Documentation.LongDescription": "Devolve unha lista de valores de texto resultantes da división dun valor de texto <code>text</code> baseándose no delimitador especificado, <code>separator</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista do valor de texto \"Nome | Dirección | PhoneNumber\" delimitado por \"|\".",
            "Code": "Text.Split(\"Name|Address|PhoneNumber\", \"|\")",
            "Result": "{\r\n    \"Name\",\r\n    \"Address\",\r\n    \"PhoneNumber\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separator": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.SplitAny",
      "Documentation": {
        "Documentation.Name": "Text.SplitAny",
        "Documentation.Description": "Devolve unha lista de valores de texto, dividido por calquera dos caracteres do delimitador.",
        "Documentation.LongDescription": "Devolve unha lista de valores de texto resultantes da división dun valor de texto <code>text</code> baseándose nun carácter do delimitador especificado, <code>separators</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Cre unha lista do valor de texto \"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\".",
            "Code": "Text.SplitAny(\"Jamie|Campbell|Admin|Adventure Works|www.adventure-works.com\", \"|\")",
            "Result": "{\r\n    \"Jamie\",\r\n    \"Campbell\",\r\n    \"Admin\",\r\n    \"Adventure Works\",\r\n    \"www.adventure-works.com\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "separators": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.Start",
      "Documentation": {
        "Documentation.Name": "Text.Start",
        "Documentation.Description": "Devolve o inicio do texto.",
        "Documentation.LongDescription": "Devolve os <code>count</code> primeiros caracteres de <code>text</code> como un valor de texto.",
        "Documentation.Category": "Text.Extraction",
        "Documentation.Examples": [
          {
            "Description": "Obter os 5 primeiros caracteres de \"Ola, mundo\".",
            "Code": "Text.Start(\"Hello, World\", 5)",
            "Result": "\"Hello\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "count": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Text.StartsWith",
      "Documentation": {
        "Documentation.Name": "Text.StartsWith",
        "Documentation.Description": "Indica se o texto comeza cun valor especificado.",
        "Documentation.LongDescription": "Devolve true se o valor de texto <code>text</code> comeza co valor de texto <code>substring</code>.\r\n      <ul>\r\n        <li><code>text</code>: <i></i> un valor <code>text</code> que se vai buscar</li>\r\n        <li><code>substring</code>: <i></i> un valor <code>text</code> que é a subcadea que se vai buscar en <code>substring</code></li>\r\n        <li><code>comparer</code>: <i>[opcional]</i> un <code>Comparer</code> que se usa para controlar a comparación. Por exemplo, pódese usar <code>Comparer.IgnoreCase</code> para realizar buscas que non diferencian maiúsculas de minúsculas</li>\r\n      </ul>\r\n      <div>\r\n        <code>comparer</code> é un <code>Comparer</code> que se usa para controlar a comparación. Os comparadores pódense usar para comparacións que non diferencian maiúsculas de minúsculas ou que recoñecen referencias culturais e a configuración rexional.\r\n      </div>\r\n      <div>\r\n        Os seguintes comparadores incorporados están dispoñibles na linguaxe da fórmula:\r\n      </div>\r\n      <ul>\r\n        <li><code>Comparer.Ordinal</code>: úsase para realizar unha comparación ordinal exacta</li>\r\n        <li><code>Comparer.OrdinalIgnoreCase</code>: úsase para realizar unha comparación ordinal exacta que non diferencie maiúsculas de minúsculas</li>\r\n        <li> <code>Comparer.FromCulture</code>: úsase para realizar unha comparación de recoñecemento de referencias culturais</li>\r\n      </ul>",
        "Documentation.Category": "Text.Membership",
        "Documentation.Examples": [
          {
            "Description": "Comprobar se o texto \"Ola, mundo\" comeza co texto \"ola\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"hello\")",
            "Result": "false"
          },
          {
            "Description": "Comprobe se o texto \"Ola, mundo\" comeza co texto \"Ola\".",
            "Code": "Text.StartsWith(\"Hello, World\", \"Hello\")",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text",
        "substring": "text",
        "comparer": "function"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Twilio.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "any",
        "collectionName": "any",
        "historyInMonths": "any",
        "dateLabel": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForFunction",
      "Documentation": {
        "Documentation.Name": "Type.ForFunction",
        "Documentation.Description": "Devolve un tipo que representa as funcións con restricións específicas de tipo de devolución e parámetro.",
        "Documentation.LongDescription": "Crea un <code>tipo de función</code> a partir de <code>signature</code>, un rexistro de <code>ReturnType</code> e <code>Parámetros</code> e <code>min</code>, o número mínimo de argumentos requiridos para invocar a función.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Crea o tipo para a función que colle un parámetro de número denominado X e devolve un número.",
            "Code": "Type.ForFunction([ReturnType = type number, Parameters = [X = type number]], 1)",
            "Result": "type function (X as number) as number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "signature": "record",
        "min": "number"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ForRecord",
      "Documentation": {
        "Documentation.Name": "Type.ForRecord",
        "Documentation.Description": "Devolve un tipo que representa rexistros con restricións específicas de tipo nos campos.",
        "Documentation.LongDescription": "Devolve un tipo que representa rexistros con restricións específicas de tipo nos campos.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Xerar un tipo de táboa de forma dinámica.",
            "Code": "let\r\n    columnNames = {\"Name\", \"Score\"},\r\n    columnTypes = {type text, type number},\r\n    rowColumnTypes = List.Transform(columnTypes, (t) => [Type = t, Optional = false]),\r\n    rowType = Type.ForRecord(Record.FromList(rowColumnTypes, columnNames), false)\r\nin\r\n    #table(type table rowType, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})",
            "Result": "#table(\r\n    type table [Name = text, Score = number],\r\n    {{\"Betty\", 90.3}, {\"Carl\", 89.5}}\r\n)"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "fields": "record",
        "open": "logical"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.Is",
      "Documentation": {
        "Documentation.Name": "Type.Is",
        "Documentation.Description": "Conclúe se un valor do primeiro tipo sempre é compatible co segundo tipo.",
        "Documentation.LongDescription": "Conclúe se o valor <code>type1</code> é sempre compatible con <code>type2</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Conclúe se un valor de número de tipo se pode tratar sempre coma un tipo calquera.",
            "Code": "Type.Is(type number, type any)",
            "Result": "true"
          },
          {
            "Description": "Conclúe se un valor de calquera tipo se pode tratar sempre como número de tipo.",
            "Code": "Type.Is(type any, type number)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type1": "type",
        "type2": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceFacets",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceFacets",
        "Documentation.Description": "Substitúe as facetas dun tipo.",
        "Documentation.LongDescription": "Substitúe as facetas de <code>type</code> coas facetas que contén o rexistro <code>facets</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type",
        "facets": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.ReplaceTableKeys",
      "Documentation": {
        "Documentation.Name": "Type.ReplaceTableKeys",
        "Documentation.Description": "Devolve un novo tipo de táboa con todas as claves substituídas pola lista de claves especificada.",
        "Documentation.LongDescription": "Devolve un novo tipo de táboa con todas as claves substituídas pola lista de claves especificada.<br>\r\n    <br>\r\n    Cada clave defínese mediante un rexistro no seguinte formulario:\r\n    <ul>\r\n      <li>\r\n        <code>Columnas</code>: lista dos nomes de columnas que definen a clave\r\n      </li>\r\n      <li>\r\n        <code>Primaria</code>: <code>true</code> se é a clave principal da táboa, se non, <code>false</code>\r\n      </li>\r\n    </ul>\r\n    A lista de claves especificada valídase para garantir que non se define máis dunha clave principal e que todos os nomes de columnas existen no tipo de táboa.\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Substituír a información de clave sobre un tipo de táboa.",
            "Code": "let\r\n    BaseType = type table [ID = number, FirstName = text, LastName = text],\r\n    KeysAdded = Type.ReplaceTableKeys(\r\n        BaseType, \r\n        {\r\n            [Columns = {\"ID\"}, Primary = true],\r\n            [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n        }\r\n    ),\r\n    DetailsOfKeys = Type.TableKeys(KeysAdded)\r\nin\r\n    DetailsOfKeys",
            "Result": "{\r\n    [Columns = {\"ID\"}, Primary = true],\r\n    [Columns = {\"FirstName\", \"LastName\"}, Primary = false]\r\n}"
          },
          {
            "Description": "Elimina a información de clave previamente definida sobre un tipo de táboa.",
            "Code": "let\r\n    TypeWithKey = Type.AddTableKey(type table [ID = number, Name = text], {\"ID\"}, true),\r\n    KeyRemoved = Type.ReplaceTableKeys(TypeWithKey, {}),\r\n    DetailsOfKeys = Type.TableKeys(KeyRemoved)\r\nin\r\n    DetailsOfKeys",
            "Result": "{}"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "keys": "list"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Type.TableColumn",
      "Documentation": {
        "Documentation.Name": "Type.TableColumn",
        "Documentation.Description": "Devolve o tipo de unha columna nunha táboa.",
        "Documentation.LongDescription": "Devolve o tipo da columna <code>column</code> no tipo de táboa <code>tableType</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "tableType": "type",
        "column": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Uri.Combine",
      "Documentation": {
        "Documentation.Name": "Uri.Combine",
        "Documentation.Description": "Devolve un URI absoluto que é a combinación do URI base de entrada e o URI relativo.",
        "Documentation.LongDescription": "Devolve un URI absoluto que é a combinación do <code>baseUri</code> de entrada e o <code>relativeUri</code>.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "baseUri": "text",
        "relativeUri": "text"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Add",
      "Documentation": {
        "Documentation.Name": "Value.Add",
        "Documentation.Description": "Devolve a suma dos dous valores.",
        "Documentation.LongDescription": "Devolve a suma de <code>value1</code> e <code>value2</code>. Pódese especificar un parámetro opcional <code>precision</code>, por defecto, utilízase <code>Precision.Double</code>.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.As",
      "Documentation": {
        "Documentation.Name": "Value.As",
        "Documentation.Description": "Devolve o valor se é compatible co tipo especificado.",
        "Documentation.LongDescription": "Devolve o valor se é compatible co tipo especificado. Isto equivale ao operador “as” en M, coa excepción de que pode aceptar referencias de tipo de identificador como Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Converter un número nun número.",
            "Code": "Value.As(123, Number.Type)",
            "Result": "123"
          },
          {
            "Description": "Intento de converter un valor de texto nun número.",
            "Code": "Value.As(\"abc\", type number)",
            "Result": "[Expression.Error] We cannot convert the value \"abc\" to type Number."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Compare",
      "Documentation": {
        "Documentation.Name": "Value.Compare",
        "Documentation.Description": "Devolve -1, 0 ou 1 en función de se o primeiro valor é menor, igual ou maior que o segundo.",
        "Documentation.LongDescription": "Devolve -1, 0 ou 1 en función de se o primeiro valor é menor, igual ou maior que o segundo.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Divide",
      "Documentation": {
        "Documentation.Name": "Value.Divide",
        "Documentation.Description": "Devolve o resultado de dividir o primeiro valor polo segundo.",
        "Documentation.LongDescription": "Devolve o resultado de dividir <code>value1</code> por <code>value2</code>. Pódese especificar un parámetro opcional <code>precision</code>, por defecto, utilízase <code>Precision.Double</code>.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Equals",
      "Documentation": {
        "Documentation.Name": "Value.Equals",
        "Documentation.Description": "Devolve se os dous valores son iguais.",
        "Documentation.LongDescription": "Devolve verdadeiro se o valor <code>value1</code> é igual que o valor <code>value2</code>, se non, devolve falso.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Is",
      "Documentation": {
        "Documentation.Name": "Value.Is",
        "Documentation.Description": "Conclúe se un valor é compatible co tipo especificado.",
        "Documentation.LongDescription": "Conclúe se un valor é compatible co tipo especificado. Isto equivale ao operador “is” en M, coa excepción de que pode aceptar referencias de tipo de identificador como Number.Type.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Compara dúas maneiras de concluír se un número é compatible co número de tipo.",
            "Code": "Value.Is(123, Number.Type) = (123 is number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Multiply",
      "Documentation": {
        "Documentation.Name": "Value.Multiply",
        "Documentation.Description": "Devolve o produto de dous valores.",
        "Documentation.LongDescription": "Devolve o produto de multiplicar <code>value1</code> por <code>value2</code>. Pódese especificar un parámetro opcional <code>precision</code>, por defecto, utilízase <code>Precision.Double</code>.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NativeQuery",
      "Documentation": {
        "Documentation.Name": "Value.NativeQuery",
        "Documentation.Description": "Avalía unha consulta nun destino.",
        "Documentation.LongDescription": "<p>Avalía <code>query</code> en <code>target</code> mediante os parámetros especificados en <code>parameters</code> e as opcións especificadas en <code>options</code>.</p>\r\n<p><code>target</code> define a saída da consulta.</p>\r\n<p><code>target</code> fornece o contexto da operación que describe <code>query</code>.</p>\r\n<p><code>query</code> describe a consulta que se vai executar en <code>target</code>. <code>query</code> exprésase dun xeito específico a <code>target</code> (p. ex., unha instrución T-SQL).</p>\r\n<p>O valor <code>parameters</code> opcional pode conter unha lista ou rexistro como apropiado para fornecer os valores do parámetro que espera <code>query</code>.</p>\r\n<p>O rexistro <code>options</code> opcional pode conter opcións que afecten ao comportamento da avaliación de <code>query</code> en <code>target</code>. Estas opcións son específicas de <code>target</code>.</p>",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "target": "any",
        "query": "text",
        "parameters": "any",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.NullableEquals",
      "Documentation": {
        "Documentation.Name": "Value.NullableEquals",
        "Documentation.Description": "Devolve se os dous valores son iguais.",
        "Documentation.LongDescription": "Devolve nulo se calquera argumento \"<code>value1</code>\", \"<code>value2</code>\" é nulo, se non, o equivalente a Value.Equals.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceMetadata",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceMetadata",
        "Documentation.Description": "Substitúe a información de metadatos da entrada.",
        "Documentation.LongDescription": "Substitúe a información de metadatos da entrada.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.ReplaceType",
      "Documentation": {
        "Documentation.Name": "Value.ReplaceType",
        "Documentation.Description": "Substitúe o tipo de valor.",
        "Documentation.LongDescription": "Substitúe o tipo de <code>value</code> con <code>type</code> que se forneceu.",
        "Documentation.Category": "Values.Types",
        "Documentation.Examples": [
          {
            "Description": "Substitúe o tipo predefinido dun rexistro por un tipo máis específico.",
            "Code": "Type.RecordFields(\r\n    Value.Type(\r\n        Value.ReplaceType(\r\n            [Column1 = 123],\r\n            type [Column1 = number]\r\n        )\r\n    )\r\n)[Column1][Type]",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "type": "type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Value.Subtract",
      "Documentation": {
        "Documentation.Name": "Value.Subtract",
        "Documentation.Description": "Devolve a diferenza dos dous valores.",
        "Documentation.LongDescription": "Devolve a diferenza de <code>value1</code> e <code>value2</code>. Pódese especificar un parámetro opcional <code>precision</code>, por defecto, utilízase <code>Precision.Double</code>.",
        "Documentation.Category": "Values.Arithmetic operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value1": "any",
        "value2": "any",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "WebAction.Request",
      "Documentation": {
        "Documentation.Name": "WebAction.Request",
        "Documentation.Description": "Crea unha acción que, ao executarse, devolverá os resultados da execución dunha solicitude HTTP como un valor binario.",
        "Documentation.LongDescription": "Crea unha acción que, cando se executa, devolve o resultado de realizar unha solicitude de <code>method</code> fronte a <code>url</code> usando HTTP como valor binario.\r\n    Pódese fornecer un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>Query</code> : Engada par&#225;metros de consulta mediante programaci&#243;n ao URL sen ter que preocuparse dos caracteres de escape.</li>\r\n<li><code>ApiKeyName</code> : Se o sitio de destino ten unha noci&#243;n dunha clave da API, este par&#225;metro p&#243;dese utilizar para especificar o nome (non o valor) do par&#225;metro clave que se debe usar no enderezo URL. O valor da clave real proporci&#243;nase na credencial.</li>\r\n<li><code>Headers</code> : Ao especificar este valor como un rexistro, forneceranse cabeceiras adicionais para unha solicitude HTTP.</li>\r\n<li><code>Timeout</code> : Ao especificar este valor como unha duraci&#243;n, modificarase o tempo de espera da solicitude HTTP. O valor predefinido &#233; 100&#160;segundos.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Ao especificar este valor como unha lista, exclu&#237;ranse estas claves de cabeceira HTTP do c&#225;lculo para o almacenamento en cach&#233; de datos.</li>\r\n<li><code>IsRetry</code> : Ao especificar este valor l&#243;xico como verdadeiro, ignoraranse as respostas existentes na cach&#233; ao obter datos.</li>\r\n<li><code>ManualStatusHandling</code> : Ao especificar este valor como unha lista, evitar&#225; o tratamento integrado de solicitudes HTTP cuxa resposta conte&#241;a un destes c&#243;digos de estado.</li>\r\n<li><code>RelativePath</code> : Ao especificar este valor como texto, an&#233;xase ao URL base antes de realizar a solicitude.</li>\r\n<li><code>Content</code> : Ao especificar este valor, provocar&#225; que o seu contido se converta no corpo da solicitude HTTP.</li>\r\n</ul>\r\n\r\n    <br>\r\n    Ten en conta que esta función está deshabilitada na maioría dos contextos. Considere usar Web.Contents no seu lugar.\r\n    ",
        "Documentation.Category": "Action",
        "Documentation.Examples": [
          {
            "Description": "Realiza una solicitude GET fronte a Bing.",
            "Code": "WebAction.Request(WebMethod.Get, \"https://bing.com\")",
            "Result": "Action"
          }
        ]
      },
      "ReturnType": "action",
      "Parameters": {
        "method": "text",
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "Zendesk.Collection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any",
        "collectionName": "any",
        "schema": "any"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "appFigures.Content",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "path": "text",
        "params": "record"
      },
      "RequiredParameters": "2"
    },
    {
      "Name": "AzureDataExplorer.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureEnterprise.Contents",
      "Documentation": {
        "Documentation.Description": "Escribe o URL do extremo da API de REST de Azure Enterprise asociado coa inscrición",
        "Documentation.DisplayName": "AzureEnterprise.Contents",
        "Documentation.Caption": "AzureEnterprise.Contents",
        "Documentation.Name": "AzureEnterprise.Contents",
        "Documentation.LongDescription": "Devolve os resultados binarios da chamada ao URL fornecido pola API de Azure Enterprise.",
        "Documentation.Examples": [
          {
            "Description": "Usar a función AzureEnterprise.Contents para devolver os resultados dun informe específico.",
            "Code": "        let\r\n            report = Table.FromColumns({Lines.FromBinary(Binary.Buffer(AzureEnterprise.Contents(\"https://ea.azure.com/rest/12345/usage-report\", [month=\"2014-04\", type=\"summary\", fmt=\"Csv\"])),null,null,1252)}),\r\n            skips = Table.Skip(report, 2),\r\n            split =  Table.SplitColumn(skips, \"Column1\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)),\r\n            promoted = Table.PromoteHeaders(split)\r\n        in\r\n            promoted",
            "Result": "Táboa"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.BlobContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.BlobContents",
        "Documentation.Description": "Devolve o contido do BLOB especificado dun almacén de Azure Storage.",
        "Documentation.LongDescription": "Devolve o contido do BLOB no URL, <code>url</code>, dun almacén de Azure Storage. Pódese especificar <code>options</code> para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>BlockSize</code> : N&#250;mero de bytes que se van ler antes de esperar o consumidor de datos. O valor predefinido &#233; 4 MB.</li>\r\n<li><code>RequestSize</code> : N&#250;mero de bytes que se van tentar ler nunha solicitude HTTP &#250;nica no servidor. O valor predefinido &#233; 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : A opci&#243;n ConcurrentRequests admite unha descarga m&#225;is r&#225;pida de datos mediante a especificaci&#243;n do n&#250;mero de solicitudes que se van realizar simultaneamente, en detrimento do uso da memoria. A memoria necesaria &#233; (ConcurrentRequest * RequestSize). O valor predefinido &#233; 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "AzureStorage.DataLakeContents",
      "Documentation": {
        "Documentation.Name": "AzureStorage.DataLakeContents",
        "Documentation.Description": "Devolve o contido do ficheiro especificado dun sistema de ficheiros de Azure Data Lake Storage.",
        "Documentation.LongDescription": "Devolve o contido do ficheiro no URL, <code>url</code>, dun sistema de ficheiros de Azure Data Lake Storage. Pódese especificar <code>options</code> para controlar as opcións seguintes:\r\n    <ul>\r\n<li><code>BlockSize</code> : N&#250;mero de bytes que se van ler antes de esperar o consumidor de datos. O valor predefinido &#233; 4 MB.</li>\r\n<li><code>RequestSize</code> : N&#250;mero de bytes que se van tentar ler nunha solicitude HTTP &#250;nica no servidor. O valor predefinido &#233; 4 MB.</li>\r\n<li><code>ConcurrentRequests</code> : A opci&#243;n ConcurrentRequests admite unha descarga m&#225;is r&#225;pida de datos mediante a especificaci&#243;n do n&#250;mero de solicitudes que se van realizar simultaneamente, en detrimento do uso da memoria. A memoria necesaria &#233; (ConcurrentRequest * RequestSize). O valor predefinido &#233; 16.</li>\r\n</ul>\r\n",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ApproximateLength",
      "Documentation": {
        "Documentation.Name": "Binary.ApproximateLength",
        "Documentation.Description": "Devolve a lonxitude aproximada do binario.",
        "Documentation.LongDescription": "Devolve a lonxitude aproximada de <code>binary</code>, ou un erro se a orixe de datos non admite unha lonxitude aproximada.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Obter a lonxitude aproximada do valor binario.",
            "Code": "Binary.ApproximateLength(Binary.FromText(\"i45WMlSKjQUA\", BinaryEncoding.Base64))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Buffer",
      "Documentation": {
        "Documentation.Name": "Binary.Buffer",
        "Documentation.Description": "Almacena no búfer o valor binario na memoria.",
        "Documentation.LongDescription": "Almacena no búfer o valor binario na memoria.  O resultado desta chamada é un valor binario estable, o que significa que terá unha lonxitude determinista e orde de bytes.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Crear unha versión estable do valor binario.",
            "Code": "Binary.Buffer(Binary.FromList({0..10}))",
            "Result": "#binary({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10})"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Combine",
      "Documentation": {
        "Documentation.Name": "Binary.Combine",
        "Documentation.Description": "Combina unha lista de binarios nun binario simple.",
        "Documentation.LongDescription": "Combina unha lista de binarios nun binario simple.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "binaries": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.From",
      "Documentation": {
        "Documentation.Name": "Binary.From",
        "Documentation.Description": "Crea un binario a partir do valor indicado",
        "Documentation.LongDescription": "Devolve un valor <code>binary</code> a partir do <code>value</code> indicado. Se o valor <code>value</code> é <code>null</code>, <code>Binary.From</code> devolve <code>null</code>.  Se o valor <code>value</code> é <code>binary</code>, devólvese <code>value</code>. Pódense converter a un valor <code>binary</code> os valores dos seguintes tipos:\r\n      <ul>\r\n        <li><code>text</code>: un valor <code>binary</code> a partir da representación de texto. Consulta <code>Binary.FromText</code> para obter máis información.</li>\r\n      </ul>\r\nSe <code>value</code> é de calquera outro tipo, devólvese un erro.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Obter o valor <code>binary</code> de <code>\"1011\"</code>.",
            "Code": "Binary.From(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromList",
      "Documentation": {
        "Documentation.Name": "Binary.FromList",
        "Documentation.Description": "Converte unha lista de números nun valor binario.",
        "Documentation.LongDescription": "Converte unha lista de números nun valor binario.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.FromText",
      "Documentation": {
        "Documentation.Name": "Binary.FromText",
        "Documentation.Description": "Descodifica datos a partir dun formato de texto en binario.",
        "Documentation.LongDescription": "Devolve o resultado de converter o valor de texto <code>text</code> nun binario (lista de <code>number</code>). Pódese especificar <code>encoding</code> para indicar a codificación usada no valor de texto.\r\n      Pódense usar os seguintes valores <code>BinaryEncoding</code> para <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: codificación base 64</li>\r\n        <li><code>BinaryEncoding.Hex</code>: codificación Hex</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": [
          {
            "Description": "Descodificar \"1011\" en binario.",
            "Code": "Binary.FromText(\"1011\")",
            "Result": "Binary.FromText(\"1011\", BinaryEncoding.Base64)"
          },
          {
            "Description": "Descodificar \"1011\" en binario con codificación Hex.",
            "Code": "Binary.FromText(\"1011\", BinaryEncoding.Hex)",
            "Result": "Binary.FromText(\"EBE=\", BinaryEncoding.Base64)"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.InferContentType",
      "Documentation": {
        "Documentation.Name": "Binary.InferContentType",
        "Documentation.Description": "Le a secuencia binaria e tenta determinar o tipo de contido e a información de formato da secuencia.",
        "Documentation.LongDescription": "Devolve un rexistro co campo Content.Type, que contén o tipo MIME inferido.\r\n    Se o tipo de contido inferido é text/* e se detecta unha páxina de códigos de codificación, ademais, devolve o campo Content.Encoding, que contén a codificación da secuencia.\r\n    Se o tipo de contido inferido é text/csv e o formato é delimitado, ademais, devolve o campo Csv.PotentialDelimiter, que contén unha táboa para a análise de delimitadores potenciais.\r\n    Se o tipo de contido inferido é text/csv e o formato é de largura fixa, ademais, devolve o campo Csv.PotentialPositions, que contén unha lista para a análise de posicións de columna de largura fixa potenciais.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "source": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.Length",
      "Documentation": {
        "Documentation.Name": "Binary.Length",
        "Documentation.Description": "Devolve o número de caracteres.",
        "Documentation.LongDescription": "Devolve o número de caracteres.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToList",
      "Documentation": {
        "Documentation.Name": "Binary.ToList",
        "Documentation.Description": "Converte un valor binario nunha lista de números.",
        "Documentation.LongDescription": "Converte un valor binario nunha lista de números.",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ToText",
      "Documentation": {
        "Documentation.Name": "Binary.ToText",
        "Documentation.Description": "Descodifica datos binarios nun formato de texto.",
        "Documentation.LongDescription": "Devolve o resultado de converter unha lista binaria de números <code>binary</code> nun valor de texto. Opcionalmente, pódese especificar <code>encoding</code> para indicar a codificación que se vai usar no valor de texto producido\r\n      Pódense usar os seguintes valores <code>BinaryEncoding</code> para <code>encoding</code>.\r\n      <ul>\r\n        <li><code>BinaryEncoding.Base64</code>: codificación base 64</li>\r\n        <li><code>BinaryEncoding.Hex</code>: codificación Hex</li>\r\n      </ul>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "BinaryEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewError",
      "Documentation": {
        "Documentation.Name": "Binary.ViewError",
        "Documentation.Description": "Crea un rexistro de erro modificado que non activará unha alternativa cando o lance un controlador definido nunha visualización (a través de Binary.View).",
        "Documentation.LongDescription": "Crea un rexistro de erro modificado desde <code>errorRecord</code> que non activará unha alternativa cando o lance un controlador definido nunha visualización (a través de Binary.View).",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Binary.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Binary.ViewFunction",
        "Documentation.Description": "Crea unha función que pode interceptar un controlador definido nunha visualización (mediante Binary.View).",
        "Documentation.LongDescription": "<p>Crea unha función de visualización baseada en <code>function</code> que se pode controlar nunha visualización creada por <code>Binary.View</code>.</p>\r\n<p>O controlador <code>OnInvoke</code> de <code>Binary.View</code> pode empregarse para definir un controlador para a función de visualización.</p>\r\n<p>Do mesmo modo que cos controladores para operacións integradas, se non se especifica ningún controlador <code>OnInvoke</code> ou se este non controla a función de visualización, ou se se se produce un erro no controlador, aplícase <code>function</code> sobre a visualización.</p>\r\n<p>Consulta a documentación publicada para ler una descrición máis completa de <code>Binary.View</code> e as funcións de visualización personalizadas.</p>",
        "Documentation.Category": "Binary",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedSignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedSignedInteger",
        "Documentation.Description": "Un formato binario que le un número enteiro con signo de 64 bits que se codificou utilizando unha codificación de lonxitude variable de 7 bits.",
        "Documentation.LongDescription": "Un formato binario que le un número enteiro con signo de 64 bits que se codificou utilizando unha codificación de lonxitude variable de 7 bits.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.7BitEncodedUnsignedInteger",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.7BitEncodedUnsignedInteger",
        "Documentation.Description": "Un formato binario que le un número enteiro sen signo de 64 bits que se codificou utilizando unha codificación de lonxitude variable de 7 bits.",
        "Documentation.LongDescription": "Un formato binario que le un número enteiro sen signo de 64 bits que se codificou utilizando unha codificación de lonxitude variable de 7 bits.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Byte",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Byte",
        "Documentation.Description": "Un formato binario que le un número enteiro sen signo de 8 bits.",
        "Documentation.LongDescription": "Un formato binario que le un número enteiro sen signo de 8 bits.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Decimal",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Decimal",
        "Documentation.Description": "Un formato binario que le un valor decimal .NET de 16 bytes.",
        "Documentation.LongDescription": "Un formato binario que le un valor decimal .NET de 16 bytes.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Double",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Double",
        "Documentation.Description": "Un formato binario que le un valor de punto flotante de precisión dupla IEEE de 8 bytes.",
        "Documentation.LongDescription": "Un formato binario que le un valor de punto flotante de precisión dupla IEEE de 8 bytes.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.List",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.List",
        "Documentation.Description": "Devolve un formato binario que le unha secuencia de elementos e devolve unha lista.",
        "Documentation.LongDescription": "Devolve un formato binario que le unha secuencia de elementos e devolve unha <code>list</code>.  O parámetro <code>binaryFormat</code> especifica o formato binario de cada elemento.  Hai tres formas de determinar o número de elementos lidos: <ul><li>Se non se especifica <code>countOrCondition</code> o formato binario vai ler ata que non haxa máis elementos.</li><li>Se <code>countOrCondition</code> é un número, o formato binario vai ler eses elementos.</li><li>Se <code>countOrCondition</code> é unha función, vaise chamar esa función para cada elemento lido.  A función devolve verdadeiro para continuar e falso para deixar de ler elementos.  O elemento final está incluído na lista.</li><li>Se <code>countOrCondition</code> está nun formato binario, a conta de elementos espérase que preceda á lista e úsase o formato especificado para ler a conta.</li></ul>",
        "Documentation.Category": "Binary Formats.Reading lists",
        "Documentation.Examples": [
          {
            "Description": "Ler bytes ata o final dos datos.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Ler dous bytes.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Ler bytes ata que o valor do byte sexa maior ou igual que dous.",
            "Code": "let\r\n    binaryData = #binary({1, 2, 3}),\r\n    listFormat = BinaryFormat.List(BinaryFormat.Byte, (x) => x < 2)\r\nin\r\n    listFormat(binaryData)",
            "Result": "{1, 2}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "binaryFormat": "function",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Null",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Null",
        "Documentation.Description": "Un formato binario que non le ningún byte e devolve nulo.",
        "Documentation.LongDescription": "Un formato binario que non le ningún byte e devolve nulo.",
        "Documentation.Category": "Binary Formats.Controlling what comes next",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Record",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Record",
        "Documentation.Description": "Devolve un formato binario que le un rexistro.",
        "Documentation.LongDescription": "Devolve un formato binario que le un rexistro.  O parámetro <code>record</code> especifica o formato do rexistro.  Cada campo do rexistro pode ter un formato binario distinto.  Se un campo contén un valor que non é un valor de formato binario, entón non se len datos deste campo e amósase o valor do campo no resultado.",
        "Documentation.Category": "Binary Formats.Reading records",
        "Documentation.Examples": [
          {
            "Description": "Ler un rexistro que contén un enteiro de 16 bits e un enteiro de 32 bits.",
            "Code": "let\r\n    binaryData = #binary({\r\n        0x00, 0x01,\r\n        0x00, 0x00, 0x00, 0x02\r\n    }),\r\n    recordFormat = BinaryFormat.Record([\r\n        A = BinaryFormat.UnsignedInteger16,\r\n        B = BinaryFormat.UnsignedInteger32\r\n    ])\r\nin\r\n    recordFormat(binaryData)",
            "Result": "[A = 1, B = 2]"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger16",
        "Documentation.Description": "Un formato binario que le un número enteiro con signo de 16 bits.",
        "Documentation.LongDescription": "Un formato binario que le un número enteiro con signo de 16 bits.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger32",
        "Documentation.Description": "Un formato binario que le un número enteiro con signo de 32 bits.",
        "Documentation.LongDescription": "Un formato binario que le un número enteiro con signo de 32 bits.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.SignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.SignedInteger64",
        "Documentation.Description": "Un formato binario que le un número enteiro con signo de 64 bits.",
        "Documentation.LongDescription": "Un formato binario que le un número enteiro con signo de 64 bits.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Single",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Single",
        "Documentation.Description": "Un formato binario que le un valor de punto flotante de precisión simple IEEE de 4 bytes.",
        "Documentation.LongDescription": "Un formato binario que le un valor de punto flotante de precisión simple IEEE de 4 bytes.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.Text",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.Text",
        "Documentation.Description": "Devolve un formato binario que le un valor de texto.",
        "Documentation.LongDescription": "Devolve un formato binario que le un valor de texto. <code>length</code> especifica o número de bytes que descodificar ou o formato binario da lonxitude que precede o texto. O valor opcional <code>encoding</code> especifica a codificación do texto. Se non se especifica <code>encoding</code>, as marcas de orde do byte Unicode determinan a codificación. Se non hai ningunha marca de orde de byte, utilízase <code>TextEncoding.Utf8</code>.",
        "Documentation.Category": "Binary Formats.Reading text",
        "Documentation.Examples": [
          {
            "Description": "Descodificar dous bytes como texto ASCII.",
            "Code": "let\r\n    binaryData = #binary({65, 66, 67}),\r\n    textFormat = BinaryFormat.Text(2, TextEncoding.Ascii)\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          },
          {
            "Description": "Descodificar texto ASCII onde a lonxitude do texto en bytes aparece antes do texto como un byte.",
            "Code": "let\r\n    binaryData = #binary({2, 65, 66}),\r\n    textFormat = BinaryFormat.Text(\r\n        BinaryFormat.Byte,\r\n        TextEncoding.Ascii\r\n    )\r\nin\r\n    textFormat(binaryData)",
            "Result": "\"AB\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger16",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger16",
        "Documentation.Description": "Un formato binario que le un número enteiro sen signo de 16 bits.",
        "Documentation.LongDescription": "Un formato binario que le un número enteiro sen signo de 16 bits.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger32",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger32",
        "Documentation.Description": "Un formato binario que le un número enteiro sen signo de 32 bits.",
        "Documentation.LongDescription": "Un formato binario que le un número enteiro sen signo de 32 bits.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "BinaryFormat.UnsignedInteger64",
      "Documentation": {
        "Documentation.Name": "BinaryFormat.UnsignedInteger64",
        "Documentation.Description": "Un formato binario que le un número enteiro sen signo de 64 bits.",
        "Documentation.LongDescription": "Un formato binario que le un número enteiro sen signo de 64 bits.",
        "Documentation.Category": "Binary Formats.Reading numbers",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Byte.From",
      "Documentation": {
        "Documentation.Name": "Byte.From",
        "Documentation.Description": "Crea un enteiro de 8 bits a partir do valor fornecido.",
        "Documentation.LongDescription": "Devolve un valor <code>number</code> enteiro de 8 bits a partir do <code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Byte.From</code> devolve <code>null</code>. Se o <code>value</code> indicado é un <code>number</code> dentro do intervalo dun enteiro de 8 bits sen unha parte fraccionaria, <code>value</code> devólvese. Se ten parte fraccionaria, entón o número arredondarase co modo de redondeo especificado. O modo de redondeo predeterminado é <code>RoundingMode.ToEven</code>. Se <code>value</code> é doutro tipo, primeiro converterase nun <code>number</code> usando <code>Number.FromText</code>. Consulta <code>Number.Round</code> para coñecer os modos de redondeo dispoñibles. Tamén se pode fornecer un <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obteña o valor <code>number</code> enteiro de 8 bits de <code>\"4\"</code>.",
            "Code": "Byte.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Obteña o valor <code>number</code> enteiro de 8 bits de <code>\"4.5\"</code> mediante <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Byte.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cds.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.FromNumber",
      "Documentation": {
        "Documentation.Name": "Character.FromNumber",
        "Documentation.Description": "Converte un número nun carácter de texto.",
        "Documentation.LongDescription": "Devolve o carácter equivalente do número.<br>\r\n    <br>\r\n    O <code>number</code> fornecido debe ser un punto de código Unicode de 21 bits.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Converte un número no seu valor de carácter equivalente.",
            "Code": "Character.FromNumber(9)",
            "Result": "\"#(tab)\""
          },
          {
            "Description": "Converte un carácter nun número e viceversa.",
            "Code": "Character.FromNumber(Character.ToNumber(\"A\"))",
            "Result": "\"A\""
          },
          {
            "Description": "Converte o punto de código hexadecimal para a emoticona de \"cara de risa\" ao seu par equivalente UTF-16.",
            "Code": "Character.FromNumber(0x1F600)",
            "Result": "\"#(0001F600)\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Character.ToNumber",
      "Documentation": {
        "Documentation.Name": "Character.ToNumber",
        "Documentation.Description": "Converte un carácter nun valor numérico.",
        "Documentation.LongDescription": "Devolve o número equivalente de <code>character</code>.<br>\r\n    <br>\r\n    O resultado será o punto de código Unicode de 21 bits representado polo carácter proporcionado ou parella subrogada.\r\n  ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Converte un carácter no seu valor numérico equivalente.",
            "Code": "Character.ToNumber(\"#(tab)\")",
            "Result": "9"
          },
          {
            "Description": "Converte o par subrogado UTF-16 para a emoticona de \"cara de risa\" ao seu código hexadecimal equivalente.",
            "Code": "Number.ToText(Character.ToNumber(\"#(0001F600)\"), \"X\")",
            "Result": "\"1F600\""
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "character": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByDelimiter",
        "Documentation.Description": "Devolve unha función que combina unha lista de texto utilizando o delimitador especificado.",
        "Documentation.LongDescription": "Devolve unha función que combina unha lista de valores de texto nun valor de texto único mediante o delimitador especificado.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Combinar unha lista de valores de texto usando un delimitador de punto e coma.",
            "Code": "Combiner.CombineTextByDelimiter(\";\")({\"a\", \"b\", \"c\"})",
            "Result": "\"a;b;c\""
          },
          {
            "Description": "Combine o texto de dúas columnas mediante un delimitador de comas e comiñas ao estilo CSV.",
            "Code": "let\r\n    Source = #table(\r\n        type table [Column1 = text, Column2 = text],\r\n        {{\"a\", \"b\"}, {\"c\", \"d,e,f\"}}\r\n    ),\r\n    Merged = Table.CombineColumns(\r\n        Source,\r\n        {\"Column1\", \"Column2\"},\r\n        Combiner.CombineTextByDelimiter(\",\", QuoteStyle.Csv),\r\n        \"Merged\"\r\n    )\r\nin\r\n    Merged",
            "Result": "#table(\r\n    type table [Merged = text],\r\n    {{\"a,b\"}, {\"c,\"\"d,e,f\"\"\"}}\r\n)"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByEachDelimiter",
        "Documentation.Description": "Devolve unha función que combina unha lista de texto utilizando a secuencia de delimitadores.",
        "Documentation.LongDescription": "Devolve unha función que combina unha lista de valores de texto nun valor de texto único mediante unha secuencia de delimitadores.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Combina unha lista de valores de texto usando un delimitador de secuencia.",
            "Code": "Combiner.CombineTextByEachDelimiter({\"=\", \"+\"})({\"a\", \"b\", \"c\"})",
            "Result": "\"a=b+c\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByLengths",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByLengths",
        "Documentation.Description": "Devolve unha función que combina unha lista de texto utilizando as lonxitudes especificadas.",
        "Documentation.LongDescription": "Devolve unha función que combina unha lista de valores de texto nun valor de texto único mediante as lonxitudes especificadas.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Combina unha lista dos valores de texto extraendo os números especificados de caracteres de cada valor de entrada.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3})({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc\""
          },
          {
            "Description": "Combina unha lista de valores de texto extraendo os números especificados de caracteres, despois de preencher o resultado co texto do modelo.",
            "Code": "Combiner.CombineTextByLengths({1, 2, 3}, \"*********\")({\"aaa\", \"bbb\", \"ccc\"})",
            "Result": "\"abbccc***\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByPositions",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByPositions",
        "Documentation.Description": "Devolve unha función que combina unha lista de texto utilizando as posicións de saída especificadas.",
        "Documentation.LongDescription": "Devolve unha función que combina unha lista de valores de texto nun valor de texto único mediante as posicións de saída.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Combina unha lista de valores de texto colocándoos na saída nas posicións especificadas.",
            "Code": "Combiner.CombineTextByPositions({0, 5, 10})({\"abc\", \"def\", \"ghi\"})",
            "Result": "\"abc  def  ghi\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Combiner.CombineTextByRanges",
      "Documentation": {
        "Documentation.Name": "Combiner.CombineTextByRanges",
        "Documentation.Description": "Devolve unha función que combina unha lista de texto utilizando as posicións e lonxitudes especificadas.",
        "Documentation.LongDescription": "Devolve unha función que combina unha lista de valores de texto nun valor de texto único mediante as posicións e lonxitudes de saída. Unha lonxitude nula indica que se debe incluír todo o valor do texto.",
        "Documentation.Category": "Combiner",
        "Documentation.Examples": [
          {
            "Description": "Combina unha lista dos valores de texto usando as posicións e lonxitudes de saída especificadas.",
            "Code": "Combiner.CombineTextByRanges({{0, 1}, {3, 2}, {6, null}})({\"abc\", \"def\", \"ghijkl\"})",
            "Result": "\"a  de ghijkl\""
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "template": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Comparer.FromCulture",
      "Documentation": {
        "Documentation.Name": "Comparer.FromCulture",
        "Documentation.Description": "Devolve unha función de comparación baseada na cultura especificada e na distinción entre maiúsculas e minúsculas.",
        "Documentation.LongDescription": "Devolve unha función de comparación que usa o <code>culture</code> e a case-sensibilidade especificada por <code>ignoreCase</code> para realizar comparacións.<br>\r\n      <br>\r\n      Unha función de comparación acepta dous argumentos e devolucións -1, 0 ou 1 en función de se o primeiro valor é menor, igual ou superior ao segundo.<br>\r\n      <br>\r\n      O valor por defecto para <code>ignoreCase</code> é falso. O <code>culture</code> debe ser un dos locais apoiados polo marco .NET (por exemplo, \"en-US\").\r\n    ",
        "Documentation.Category": "Comparer",
        "Documentation.Examples": [
          {
            "Description": "Compare \"a\" e \"A\" mediante a configuración rexional \"gl-ES\" para determinar se os valores son iguais.",
            "Code": "Comparer.FromCulture(\"en-US\")(\"a\", \"A\")",
            "Result": "-1"
          },
          {
            "Description": "Compare \"a\" e \"A\" mediante a configuración rexional \"gl-ES\" ignorando as maiúsculas e minúsculas para determinar se os valores son iguais.",
            "Code": "Comparer.FromCulture(\"en-US\", true)(\"a\", \"A\")",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "culture": "text",
        "ignoreCase": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.AttributeMemberId",
      "Documentation": {
        "Documentation.Name": "Cube.AttributeMemberId",
        "Documentation.Description": "Devolve o identificador de membro único do valor da propiedade dos membros.",
        "Documentation.LongDescription": "Devolve o identificador de membro único do valor da propiedade dun membro. <code>attribute</code>. Devolve un valor nulo para calquera outro valor.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "attribute": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Cube.PropertyKey",
      "Documentation": {
        "Documentation.Name": "Cube.PropertyKey",
        "Documentation.Description": "Devolve a chave dunha propiedade.",
        "Documentation.LongDescription": "Devolve a chave dunha propiedade <code>property</code>.",
        "Documentation.Category": "Cube",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "property": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Currency.From",
      "Documentation": {
        "Documentation.Name": "Currency.From",
        "Documentation.Description": "Devolve un valor de moeda para o valor dado.",
        "Documentation.LongDescription": "Devolve un valor de <code>currency</code> a partir do<code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Currency.From</code> devolve <code>null</code>. Se o <code>value</code> indicado é <code>number</code> dentro do intervalo de moeda, a parte fraccionaria de <code>value</code> arredóndase a 4 díxitos decimais e devólvese. Se <code>value</code> é doutro tipo, primeiro converterase nun <code>number</code> usando <code>Number.FromText</code>. O intervalo válido de moeda é de <code>-922.337.203.685.477,5808</code> a <code>922.337.203.685.477,5807</code>. Consulte <code>Number.Round</code> para coñecer os modos de arredondamento dispoñibles. O valor predefinido é <code>RoundingMode.ToEven</code>. Tamén se pode fornecer un <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obteña o valor <code>currency</code> de <code>\"1.23455\"</code>.",
            "Code": "Currency.From(\"1.23455\")",
            "Result": "1.2346"
          },
          {
            "Description": "Obteña o valor <code>currency</code> de <code>\"1.23455\"</code> mediante <code>RoundingMode.Down</code>.",
            "Code": "Currency.From(\"1.23455\", \"en-US\", RoundingMode.Down)",
            "Result": "1.2345"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Day",
      "Documentation": {
        "Documentation.Name": "Date.Day",
        "Documentation.Description": "Devolve o compoñente de día.",
        "Documentation.LongDescription": "Devolve o compoñente de día dun valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> a partir do que se extrae o compoñente de día.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Obter o compoñente de día dun valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que representa a data e a hora 14/05/2011 05:00:00 p.m.",
            "Code": "Date.Day(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "14"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeek",
        "Documentation.Description": "Devolve un número (do 0 ao 6) que indica o día da semana do valor fornecido.",
        "Documentation.LongDescription": "Devolve un número (do 0 ao 6) que indica o día da semana do valor <code>dateTime</code> fornecido.\r\n  <ul>\r\n        <li><code>dateTime</code>: un valor de <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>.</li>\r\n        <li><code>firstDayOfWeek</code>: un valor <code>Day</code> indica que día se debería considerar o primeiro día da semana. Os valores permitidos son Day.Sunday, Day.Monday, Day.Tuesday, Day.Wednesday, Day.Thursday, Day.Friday ou Day.Saturday. Se non se especifica, usarase un valor predefinido dependente da referencia cultural.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Obtén o día da semana que representado como luns, 21 de febreiro de 2011, tendo en conta que o domingo se considera o primeiro día da semana.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Sunday)",
            "Result": "1"
          },
          {
            "Description": "Obtén o día da semana que representado como luns, 21 de febreiro de 2011, tendo en conta que o luns se considera o primeiro día da semana.",
            "Code": "Date.DayOfWeek(#date(2011, 02, 21), Day.Monday)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "Day.Type",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfWeekName",
      "Documentation": {
        "Documentation.Name": "Date.DayOfWeekName",
        "Documentation.Description": "Devolve o nome do día da semana.",
        "Documentation.LongDescription": "Devolve o nome do día da semana para o <code>date</code> fornecido. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Obtén o nome do día da semana.",
            "Code": "Date.DayOfWeekName(#date(2011, 12, 31), \"en-US\")",
            "Result": "\"Saturday\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DayOfYear",
      "Documentation": {
        "Documentation.Name": "Date.DayOfYear",
        "Documentation.Description": "Devolve un número de 1 a 366 que representa o día do ano.",
        "Documentation.LongDescription": "Devolve un número que representa o día do ano no valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> fornecido, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Día do ano do 1 de marzo de 2011.",
            "Code": "Date.DayOfYear(#date(2011, 03, 01))",
            "Result": "60"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.DaysInMonth",
      "Documentation": {
        "Documentation.Name": "Date.DaysInMonth",
        "Documentation.Description": "Devolve un número de 28 a 31 que indica o número de días do mes.",
        "Documentation.LongDescription": "Devolve o número de días do mes no valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> para o que se devolve o número de días do mes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Número de días no mes de decembro representado por <code>#date(2011, 12, 01)></code>.",
            "Code": "Date.DaysInMonth(#date(2011, 12, 01))",
            "Result": "31"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfDay",
      "Documentation": {
        "Documentation.Name": "Date.EndOfDay",
        "Documentation.Description": "Devolve o final do día.",
        "Documentation.LongDescription": "Devolve o final do día representado por <code>dateTime</code>. Consérvase a información da zona horaria.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor de <code>data</code>, <code>datetime</code> ou <code>datetimezone</code> a partir do cal se calcula o final do día.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Obter o final do día para o 14/05/2011 05:00:00 p.m.",
            "Code": "Date.EndOfDay(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 23, 59, 59.9999999)"
          },
          {
            "Description": "Obter o final do día para o 17/05/2011 05:00:00 p.m. - 7:00.",
            "Code": "Date.EndOfDay(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.EndOfMonth",
        "Documentation.Description": "Devolve o final do mes.",
        "Documentation.LongDescription": "Devolve o final do mes que contén <code>dateTime</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: un valor de <code>data</code>, <code>datetime</code> ou <code>datetimezone</code> a partir do cal se calcula o final do mes</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Obter o final do mes para o 14/05/2011.",
            "Code": "Date.EndOfMonth(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 31)"
          },
          {
            "Description": "Obter o final do mes para o 17/05/2011 05:00:00 p.m. - 7:00.",
            "Code": "Date.EndOfMonth(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.EndOfQuarter",
        "Documentation.Description": "Devolve o final do trimestre.",
        "Documentation.LongDescription": "Devolve o final do trimestre que contén <code>dateTime</code>. Consérvase a información do fuso horario.\r\n      <ul>\r\n      <li><code>dateTime</code>: Un valor de <code>data</code>, <code>datetime</code> ou <code>datetimezone</code> a partir do cal se calcula o final do trimestre.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Busca o final do trimestre do 10 de outubro de 2011 ás 08:00 horas.",
            "Code": "Date.EndOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.EndOfWeek",
        "Documentation.Description": "Devolve o final da semana.",
        "Documentation.LongDescription": "Devolve o final da semana que contén <code>dateTime</code>.\r\n    Esta función leva un <code>día</code> opcional,<code>firstDayOfWeek</code>, para establecer como primeiro día da semana para este cálculo relativo. O valor predefinido é <code>Day.Sunday</code>.\r\n      <ul>\r\n        <li><code>dateTime</code>: A <code>date</code>, <code>datetime</code>, ou <code>datetimezone</code> valor a partir do cal se calcula o último día da semana</li>\r\n        <li><code>firstDayOfWeek</code>: <i>[Opcional]</i> Un valor <code>Day.Type</code> que representa o primeiro día da semana. Os valores posibles son <code>Day.Sunday</code>, <code>Day.Monday</code>, <code>Day.Tuesday</code>, <code>Day.Wednesday</code>, <code>Day.Thursday</code>, <code>Day.Friday</code> and <code>Day.Saturday.</code> . O valor predefinido é <code>Day.Sunday</code>.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Obter o final da semana para o 14/05/2011.",
            "Code": "Date.EndOfWeek(#date(2011, 5, 14))",
            "Result": "#date(2011, 5, 14)"
          },
          {
            "Description": "Obter o final da semana para o 17/05/2011 05:00:00 p.m. - 7:00, onde domingo é o primeiro día da semana.",
            "Code": "Date.EndOfWeek(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0), Day.Sunday)",
            "Result": "#datetimezone(2011, 5, 21, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.EndOfYear",
      "Documentation": {
        "Documentation.Name": "Date.EndOfYear",
        "Documentation.Description": "Devolve o final do ano.",
        "Documentation.LongDescription": "Devolve o final do ano que contén <code>dateTime</code>, incluíndo fraccións de segundo. Consérvase a información do fuso horario.\r\n      <ul>\r\n        <li><code>dateTime</code>: Un valor de <code>data</code>, <code>datetime</code> ou <code>datetimezone</code> a partir do cal se calcula o final do ano.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Obter o final do ano para o 14/05/2011 05:00:00 p.m.",
            "Code": "Date.EndOfYear(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 12, 31, 23, 59, 59.9999999)"
          },
          {
            "Description": "Obter o final da hora para o 17/05/2011 05:00:00 p.m. - 7:00.",
            "Code": "Date.EndOfYear(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 12, 31, 23, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.From",
      "Documentation": {
        "Documentation.Name": "Date.From",
        "Documentation.Description": "Crea una data a partir do valor indicado.",
        "Documentation.LongDescription": "Devolve un valor <code>date</code> a partir do <code>value</code> indicado. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").\r\nSe o valor <code>value</code> indicado é <code>null</code>, <code>Date.From</code> devolve <code>null</code>. Se o valor <code>value</code> indicado é <code>date</code>, devólvese <code>value</code>. Pódense converter a un valor <code>date</code> os valores dos seguintes tipos:\r\n      <ul>\r\n        <li><code>text</code>: valor <code>date</code> a partir da representación textual. Consulte <code>Date.FromText</code> para obter máis información.</li>\r\n        <li><code>datetime</code>: compoñente de data de <code>value</code>.</li>\r\n        <li><code>datetimezone</code>: compoñente de data da data e hora locais equivalente de <code>value</code>.</li>\r\n        <li><code>number</code>: compoñente de data da data e hora equivalente da data de OLE Automation expresado por <code>value</code>.</li>\r\n      </ul>\r\nSe <code>value</code> é de calquera outro tipo, devólvese un erro.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>43910</code> nun valor <code>date</code>.",
            "Code": "Date.From(43910)",
            "Result": "#date(2020, 3, 20)"
          },
          {
            "Description": "Converter <code>#datetime(1899, 12, 30, 06, 45, 12)</code> nun valor <code>date</code>.",
            "Code": "Date.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#date(1899, 12, 30)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.FromText",
      "Documentation": {
        "Documentation.Name": "Date.FromText",
        "Documentation.Description": "Crea unha data a partir de formatos de data locais, universais e personalizados.",
        "Documentation.LongDescription": "Crea un valor <code>date</code> a partir dunha representación textual, <code>text</code>. Pódese fornecer un parámetro <code>record</code> opcional, <code>options</code> para especificar propiedades adicionais. <code>record</code> pode conter os seguintes campos:\r\n<ul>\r\n   <li><code>Format</code>: Un valor de <code>text</code> que indica o formato a utilizar. Para obter máis información, visita https://go.microsoft.com/fwlink/?linkid=2180104 e https://go.microsoft.com/fwlink/?linkid=2180105. Omitir este campo ou fornecer <code>null</code> dará lugar a analizar a data facendo o todo o posible.</li>\r\n   <li><code>Culture</code>: Cando <code>Format</code> non é nulo, <code>Culture</code> controla algúns especificadores de formato. Por exemplo, en <code>\"en-US\"</code> <code>\"MMM\"</code> é <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, mentres que en <code>\"ru-RU\"</code> <code>\"MMM\"</code> é <code>\"янв\", \"фев\", \"мар\", ...</code>. Cando <code>Format</code> é <code>null</code>, <code>Culture</code> controla o formato predefinido a utilizar. Cando <code>Culture</code> é <code>null</code> ou se omite, utilízase <code>Culture.Current</code>.</li>\r\n</ul>\r\nPara admitir fluxos de traballo herdados, <code>options</code> tamén pode ser un valor de texto. Ten o mesmo comportamento coma se <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>\"2010-12-31\"</code> nun valor <code>date</code>.",
            "Code": "Date.FromText(\"2010-12-31\")",
            "Result": "#date(2010, 12, 31)"
          },
          {
            "Description": "Converter usando un formato personalizado e a cultura alemá.",
            "Code": "Date.FromText(\"30 Dez 2010\", [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "#date(2010, 12, 30)"
          },
          {
            "Description": "Busca a data no calendario gregoriano que corresponde a principios de 1400 no calendario Hijri.",
            "Code": "Date.FromText(\"1400\", [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "#date(1979, 11, 20)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentDay",
        "Documentation.Description": "Indica se esta data ocorre durante o día actual, como o determina a data e a hora actual do sistema.",
        "Documentation.LongDescription": "Indica se o valor de data e hora <code>dateTime</code> indicado ocorre durante o día actual, como o determina a data e a hora actual do sistema.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora actual do sistema está no día actual.",
            "Code": "Date.IsInCurrentDay(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentMonth",
        "Documentation.Description": "Indica se esta data ocorre durante o mes actual, como o determina a data e a hora actual do sistema.",
        "Documentation.LongDescription": "Indica se o valor de data e hora <code>dateTime</code> indicado ocorre durante o mes actual, como o determina a data e a hora actual do sistema.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora actual do sistema está no mes actual.",
            "Code": "Date.IsInCurrentMonth(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentQuarter",
        "Documentation.Description": "Indica se esta data ocorre durante o trimestre actual, como o determina a data e a hora actual do sistema.",
        "Documentation.LongDescription": "Indica se o valor de data e hora <code>dateTime</code> indicado ocorre durante o trimestre actual, como o determina a data e a hora actual do sistema.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora actual do sistema está no trimestre actual.",
            "Code": "Date.IsInCurrentQuarter(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentWeek",
        "Documentation.Description": "Indica se esta data ocorre durante a semana actual, como o determina a data e a hora actual do sistema.",
        "Documentation.LongDescription": "Indica se o valor de data e hora <code>dateTime</code> indicado ocorre durante a semana actual, como o determina a data e a hora actual do sistema.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora actual do sistema está na semana actual.",
            "Code": "Date.IsInCurrentWeek(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInCurrentYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInCurrentYear",
        "Documentation.Description": "Indica se esta data ocorre durante o ano actual, como o determina a data e a hora actual do sistema.",
        "Documentation.LongDescription": "Indica se o valor de data e hora <code>dateTime</code> indicado ocorre durante o ano actual, como o determina a data e a hora actual do sistema.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora actual do sistema está no ano actual.",
            "Code": "Date.IsInCurrentYear(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextDay",
        "Documentation.Description": "Indica se esta data ocorre durante o próximo día, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no día actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o próximo día, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no día actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o día despois da hora actual do sistema está no próximo día.",
            "Code": "Date.IsInNextDay(Date.AddDays(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextMonth",
        "Documentation.Description": "Indica se esta data ocorre durante o próximo mes, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no mes actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o próximo mes, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no mes actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o mes despois da hora actual do sistema está no próximo mes.",
            "Code": "Date.IsInNextMonth(Date.AddMonths(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextQuarter",
        "Documentation.Description": "Indica se esta data ocorre durante o próximo trimestre, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no trimestre actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o próximo trimestre, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no trimestre actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o trimestre despois da hora actual do sistema está no próximo trimestre.",
            "Code": "Date.IsInNextQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextWeek",
        "Documentation.Description": "Indica se esta data ocorre durante a próxima semana, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na semana actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante a próxima semana, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na semana actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a semana despois da hora actual do sistema está na próxima semana.",
            "Code": "Date.IsInNextWeek(Date.AddDays(DateTime.FixedLocalNow(), 7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInNextYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInNextYear",
        "Documentation.Description": "Indica se esta data ocorre durante o próximo ano, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no ano actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o próximo ano, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no ano actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o ano despois da hora actual do sistema está no próximo ano.",
            "Code": "Date.IsInNextYear(Date.AddYears(DateTime.FixedLocalNow(), 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousDay",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousDay",
        "Documentation.Description": "Indica se esta data ocorre durante o día anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no día actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o día anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no día actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o día antes da hora actual do sistema está no día anterior.",
            "Code": "Date.IsInPreviousDay(Date.AddDays(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousMonth",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousMonth",
        "Documentation.Description": "Indica se esta data ocorre durante o mes anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no mes actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o mes anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no mes actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o mes antes da hora actual do sistema está no mes anterior.",
            "Code": "Date.IsInPreviousMonth(Date.AddMonths(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousQuarter",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousQuarter",
        "Documentation.Description": "Indica se esta data ocorre durante o trimestre anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no trimestre actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o trimestre anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no trimestre actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o trimestre antes da hora actual do sistema está no trimestre anterior.",
            "Code": "Date.IsInPreviousQuarter(Date.AddQuarters(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousWeek",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousWeek",
        "Documentation.Description": "Indica se esta data ocorre durante a semana anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na semana actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante a semana anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na semana actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a semana antes da hora actual do sistema está na semana anterior.",
            "Code": "Date.IsInPreviousWeek(Date.AddDays(DateTime.FixedLocalNow(), -7))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInPreviousYear",
      "Documentation": {
        "Documentation.Name": "Date.IsInPreviousYear",
        "Documentation.Description": "Indica se esta data ocorre durante o ano anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no ano actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o ano anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no ano actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o ano antes da hora actual do sistema está no ano anterior.",
            "Code": "Date.IsInPreviousYear(Date.AddYears(DateTime.FixedLocalNow(), -1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsInYearToDate",
      "Documentation": {
        "Documentation.Name": "Date.IsInYearToDate",
        "Documentation.Description": "Indica se esta data ocorre durante o ano actual e está antes do día actual ou no día actual, como o determina a data e a hora actual do sistema.",
        "Documentation.LongDescription": "Indica se o valor de data e hora <code>dateTime</code> indicado ocorre durante o ano actual e está antes do día actual ou no día actual, como o determina a data e a hora actual do sistema.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora actual do sistema está até a data.",
            "Code": "Date.IsInYearToDate(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.IsLeapYear",
      "Documentation": {
        "Documentation.Name": "Date.IsLeapYear",
        "Documentation.Description": "Indica se esta data cae nun ano bisesto.",
        "Documentation.LongDescription": "Indica se o valor datetime <code>dateTime</code> indicado cae nun ano bisesto.\r\n <ul>\r\n        <li><code>dateTime</code>: un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> que se vai avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o ano 2012, representado por <code>#date(2012, 01, 01)</code>, é un ano bisesto.",
            "Code": "Date.IsLeapYear(#date(2012, 01, 01))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Month",
      "Documentation": {
        "Documentation.Name": "Date.Month",
        "Documentation.Description": "Devolve o compoñente de mes.",
        "Documentation.LongDescription": "Devolve o compoñente de mes do valor <code>datetime</code> fornecido, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Buscar o mes en #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Month(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "12"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.MonthName",
      "Documentation": {
        "Documentation.Name": "Date.MonthName",
        "Documentation.Description": "Devolve o nome do compoñente do mes.",
        "Documentation.LongDescription": "Devolve o nome do compoñente de mes para o <code>date</code> fornecido. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Obtén o nome do mes.",
            "Code": "Date.MonthName(#datetime(2011, 12, 31, 5, 0, 0), \"en-US\")",
            "Result": "\"December\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.QuarterOfYear",
      "Documentation": {
        "Documentation.Name": "Date.QuarterOfYear",
        "Documentation.Description": "Devolve un número que indica o trimestre do ano no que cae a data.",
        "Documentation.LongDescription": "Devolve un número de 1 a 4 que indica o trimestre do ano no que cae a data <code>dateTime</code>. <code>dateTime</code> pode ser un valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Buscar o trimestre do ano no que cae a data #date(2011, 12, 31).",
            "Code": "Date.QuarterOfYear(#date(2011, 12, 31))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfDay",
      "Documentation": {
        "Documentation.Name": "Date.StartOfDay",
        "Documentation.Description": "Devolve o inicio do día.",
        "Documentation.LongDescription": "Devolve o inicio do día representado por <code>dateTime</code>.\r\n    <code>dateTime</code> debe ser un valor de <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Busca o inicio do día do 10 de outubro de 2011 ás 08:00 horas.",
            "Code": "Date.StartOfDay(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.StartOfMonth",
        "Documentation.Description": "Devolve o inicio do mes.",
        "Documentation.LongDescription": "Devolve o inicio do mes que contén <code>dateTime</code>.\r\n    <code>dateTime</code> debe ser un valor de <code>data</code> ou <code>datetime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Busca o inicio do mes do 10 de outubro de 2011 ás 08:10:32.",
            "Code": "Date.StartOfMonth(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfQuarter",
      "Documentation": {
        "Documentation.Name": "Date.StartOfQuarter",
        "Documentation.Description": "Devolve o inicio do trimestre.",
        "Documentation.LongDescription": "Devolve o inicio do trimestre que contén <code>dateTime</code>.\r\n      <code>dateTime</code> debe ser un valor de <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Busca o inicio do trimestre do 10 de outubro de 2011 ás 08:00 horas.",
            "Code": "Date.StartOfQuarter(#datetime(2011, 10, 10, 8, 0, 0))",
            "Result": "#datetime(2011, 10, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfWeek",
      "Documentation": {
        "Documentation.Name": "Date.StartOfWeek",
        "Documentation.Description": "Devolve o inicio da semana.",
        "Documentation.LongDescription": "Devolve o inicio da semana que contén <code>dateTime</code>.\r\n      <code>dateTime</code> debe ser un valor de <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Buscar o inicio da semana do martes, 11 de outubro de 2011.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32))",
            "Result": "// Sunday, October 9th, 2011\r\n#datetime(2011, 10, 9, 0, 0, 0)"
          },
          {
            "Description": "Buscar o inicio da semana do martes, 11 de outubro de 2011, usando o luns como o inicio da semana.",
            "Code": "Date.StartOfWeek(#datetime(2011, 10, 11, 8, 10, 32), Day.Monday)",
            "Result": "// Monday, October 10th, 2011\r\n#datetime(2011, 10, 10, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.StartOfYear",
      "Documentation": {
        "Documentation.Name": "Date.StartOfYear",
        "Documentation.Description": "Devolve o inicio do ano.",
        "Documentation.LongDescription": "Devolve o inicio do ano que contén <code>dateTime</code>.\r\n      <code>dateTime</code> debe ser un valor de <code>date</code>, <code>datetime</code> ou <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Busca o inicio do ano do 10 de outubro de 2011 ás 08:10:32.",
            "Code": "Date.StartOfYear(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 1, 1, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToRecord",
      "Documentation": {
        "Documentation.Name": "Date.ToRecord",
        "Documentation.Description": "Devolve un rexistro que contén partes do valor de data.",
        "Documentation.LongDescription": "Devolve un rexistro que contén as partes do valor date indicado, <code>date</code>.\r\n <ul>\r\n        <li><code>date</code>: un valor <code>date</code> a partir do que se debe calcular o rexistro das súas partes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Converter o valor <code>#date(2011, 12, 31)</code> nun rexistro que contén partes do valor de data.",
            "Code": "Date.ToRecord(#date(2011, 12, 31))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "date": "date"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.ToText",
      "Documentation": {
        "Documentation.Name": "Date.ToText",
        "Documentation.Description": "Devolve unha representación textual do valor de data.",
        "Documentation.LongDescription": "Devolve unha representación textual de <code>date</code>. Pódese fornecer un parámetro <code>record</code> opcional, <code>options</code>, para especificar propiedades adicionais. <code>culture</code> utilízase só para fluxos de traballo herdados. O <code>record</code> pode conter os seguintes campos:\r\n<ul>\r\n   <li><code>Format</code>: Un valor de <code>text</code> que indica o formato a utilizar. Para obter máis información, visita https://go.microsoft.com/fwlink/?linkid=2180104 e https://go.microsoft.com/fwlink/?linkid=2180105. Omitir este campo ou fornecer <code>null</code> dará lugar a formatar a data usando o valor predeterminado definido por <code>Culture</code></li>.\r\n   <li><code>Culture</code>: Cando <code>Format</code> non é nulo, <code>Culture</code> controla algúns especificadores de formato. Por exemplo, en <code>\"en-US\"</code> <code>\"MMM\"</code> é <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, mentres que en <code>\"ru-RU\"</code> <code>\"MMM\"</code> é <code>\"янв\", \"фев\", \"мар\", ...</code>. Cando <code>Format</code> é <code>null</code>, <code>Culture</code> controla o formato predefinido a utilizar. Cando <code>Culture</code> é <code>null</code> ou se omite, utilízase <code>Culture.Current</code>.</li>\r\n</ul>\r\nPara admitir fluxos de traballo herdados, <code>options</code> e <code>culture</code> tamén poden ser valores de texto. Ten o mesmo comportamento coma se <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>#date(2010, 12, 31)</code> nun valor de <code>text</code>. <i>O resultado pode variar dependendo da cultura actual.</i>",
            "Code": "Date.ToText(#date(2010, 12, 31))",
            "Result": "\"12/31/2010\""
          },
          {
            "Description": "Converter usando un formato personalizado e a cultura alemá.",
            "Code": "Date.ToText(#date(2010, 12, 31), [Format=\"dd MMM yyyy\", Culture=\"de-DE\"])",
            "Result": "\"31 Dez 2010\""
          },
          {
            "Description": "Busca o ano no calendario Hijri que corresponde ao 1 de xaneiro de 2000 no calendario gregoriano.",
            "Code": "Date.ToText(#date(2000, 1, 1), [Format=\"yyyy\", Culture=\"ar-SA\"])",
            "Result": "\"1420\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "date": "date",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfMonth",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfMonth",
        "Documentation.Description": "Devolve un número do 1 ao 6 que indica a semana do mes na que cae esta data.",
        "Documentation.LongDescription": "Devolve un número do 1 ao 6 que indica a semana do mes na que cae a data <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: un valor <code>datetime</code> a partir do que se determina a semana do mes.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determina a semana do 15 de marzo de 2011.",
            "Code": "Date.WeekOfMonth(#date(2011, 03, 15))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.WeekOfYear",
      "Documentation": {
        "Documentation.Name": "Date.WeekOfYear",
        "Documentation.Description": "Devolve un número de 1 a 54 que indica a semana do ano no que cae esta data.",
        "Documentation.LongDescription": "Devolve un número de 1 a 54 que indica en que día da semana cae a data <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: Un valor <code>datetime</code> para o que se determina a semana do ano.</li>\r\n        <li><code>firstDayOfWeek</code>: Un valor opcional <code>Day.Type</code> que indica que día se considera o inicio dunha semana nova (por exemplo, <code>Day.Sunday</code>). Se non se especifica, usarase un valor predefinido dependendo da referencia cultural.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Determina que semana do ano contén o 27 de marzo de 2011.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27))",
            "Result": "14"
          },
          {
            "Description": "Determina que semana do ano contén o 27 de marzo de 2011, utilizando o luns como comezo da semana.",
            "Code": "Date.WeekOfYear(#date(2011, 03, 27), Day.Monday)",
            "Result": "13"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any",
        "firstDayOfWeek": "Day.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Date.Year",
      "Documentation": {
        "Documentation.Name": "Date.Year",
        "Documentation.Description": "Devolve o compoñente de ano.",
        "Documentation.LongDescription": "Devolve o compoñente de ano do valor <code>datetime</code> fornecido, <code>dateTime</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Buscar o ano en #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Date.Year(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "2011"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Date",
      "Documentation": {
        "Documentation.Name": "DateTime.Date",
        "Documentation.Description": "Devolve o compoñente de data do valor date, datetime ou datetimezone que se indique.",
        "Documentation.LongDescription": "Devolve o compoñente de data de <code>dateTime</code>, o valor <code>date</code>, <code>datetime</code> ou <code>datetimezone</code> indicado.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Buscar o valor de data de #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Date(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#date(2010, 12, 31)"
          }
        ]
      },
      "ReturnType": "date",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.From",
      "Documentation": {
        "Documentation.Name": "DateTime.From",
        "Documentation.Description": "Crea unha data e hora a partir do valor indicado.",
        "Documentation.LongDescription": "Devolve un valor <code>datetime</code> a partir do <code>value</code> indicado. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").\r\nSe o valor <code>value</code> indicado é <code>null</code>, <code>DateTime.From</code> devolve <code>null</code>. Se o valor <code>value</code> é <code>datetime</code>, devólvese <code>value</code>. Pódense converter a un valor <code>datetime</code> os valores dos seguintes tipos:\r\n      <ul>\r\n        <li><code>text</code>: un valor <code>datetime</code> a partir da representación textual. Consulte <code>DateTime.FromText</code> para obter máis información.</li>\r\n        <li><code>date</code>: un valor <code>datetime</code> con <code>value</code> como o compoñente de data e <code>12:00:00 AM</code> como o compoñente de hora.</li>\r\n        <li><code>datetimezone</code>: o valor <code>datetime</code> local equivalente de <code>value</code>.</li>\r\n        <li><code>time</code>: un valor <code>datetime</code> coa data equivalente da data de OLE Automation de <code>0</code> como o compoñente de data e <code>value</code> como o compoñente de hora.</li>\r\n        <li><code>number</code>: un valor <code>datetime</code> equivalente á data de OLE Automation expresado por <code>value</code>. </li>\r\n      </ul>\r\nSe <code>value</code> é de calquera outro tipo, devólvese un erro.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>#time(06, 45, 12)</code> nun valor <code>datetime</code>.",
            "Code": "DateTime.From(#time(06, 45, 12))",
            "Result": "#datetime(1899, 12, 30, 06, 45, 12)"
          },
          {
            "Description": "Converter <code>#date(1975, 4, 4)</code> nun valor <code>datetime</code>.",
            "Code": "DateTime.From(#date(1975, 4, 4))",
            "Result": "#datetime(1975, 4, 4, 0, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTime.FromFileTime",
        "Documentation.Description": "Crea unha data e hora a partir dun número longo de 64 bits.",
        "Documentation.LongDescription": "Crea un valor <code>datetime</code> a partir do valor <code>fileTime</code> e convérteo no fuso horario local. Filetime é un valor de tempo de ficheiros de Windows que representa o número de intervalos de 100 nanosegundos transcorridos desde a media noite, ás 00:00, do 1 de xaneiro de 1601 d. c. (C.E.) Hora Universal Coordinada (UTC).\r\n",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>129876402529842245</code> nun valor de data e hora.",
            "Code": "DateTime.FromFileTime(129876402529842245)",
            "Result": "#datetime(2012, 7, 24, 14, 50, 52.9842245)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.FromText",
      "Documentation": {
        "Documentation.Name": "DateTime.FromText",
        "Documentation.Description": "Crea unha data, hora e fuso a partir de formatos de data e hora universal e local.",
        "Documentation.LongDescription": "Crea un valor <code>datetime</code> a partir dunha representación textual, <code>text</code>. Pódese fornecer un parámetro <code>record</code> opcional, <code>options</code> para especificar propiedades adicionais. <code>record</code> pode conter os seguintes campos:\r\n<ul>\r\n   <li><code>Format</code>: Un valor de <code>text</code> que indica o formato a utilizar. Para obter máis información, visita https://go.microsoft.com/fwlink/?linkid=2180104 e https://go.microsoft.com/fwlink/?linkid=2180105. Omitir este campo ou fornecer <code>null</code> dará lugar a analizar a data facendo o todo o posible.</li>\r\n   <li><code>Culture</code>: Cando <code>Format</code> non é nulo, <code>Culture</code> controla algúns especificadores de formato. Por exemplo, en <code>\"en-US\"</code> <code>\"MMM\"</code> é <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, mentres que en <code>\"ru-RU\"</code> <code>\"MMM\"</code> é <code>\"янв\", \"фев\", \"мар\", ...</code>. Cando <code>Format</code> é <code>null</code>, <code>Culture</code> controla o formato predefinido a utilizar. Cando <code>Culture</code> é <code>null</code> ou se omite, utilízase <code>Culture.Current</code>.</li>\r\n</ul>\r\nPara admitir fluxos de traballo herdados, <code>options</code> tamén pode ser un valor de texto. Ten o mesmo comportamento coma se <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>\"2010-12-31T01:30:00\"</code> nun valor de data e hora.",
            "Code": "DateTime.FromText(\"2010-12-31T01:30:25\")",
            "Result": "#datetime(2010, 12, 31, 1, 30, 25)"
          },
          {
            "Description": "Converter <code>\"2010-12-31T01:30:00.121212\"</code> nun valor de data e hora.",
            "Code": "DateTime.FromText(\"30 Dez 2010 02:04:50.369730\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "#datetime(2010, 12, 30, 2, 4, 50.36973)"
          },
          {
            "Description": "Converter <code>\"2010-12-31T01:30:00\"</code> nun valor de data e hora.",
            "Code": "DateTime.FromText(\"2000-02-08T03:45:12Z\", [Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "#datetime(2000, 2, 8, 3, 45, 12)"
          },
          {
            "Description": "Converter <code>\"20101231T013000\"</code> nun valor de data e hora.",
            "Code": "DateTime.FromText(\"20101231T013000\", [Format=\"yyyyMMdd'T'HHmmss\", Culture=\"en-US\"])",
            "Result": "#datetime(2010, 12, 31, 1, 30, 0)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentHour",
        "Documentation.Description": "Indica se esta dataHora se atopa na hora actual, tal e como o determina a hora e data actual do sistema.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido se atopa na hora actual, tal e como o determina a hora e data actual do sistema.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> a avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determina se a hora actual do sistema se atopa dentro da hora actual.",
            "Code": "DateTime.IsInCurrentHour(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentMinute",
        "Documentation.Description": "Indica se esta dataHora se atopa no minuto actual, tal e como o determina a hora e data actual do sistema.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido se atopa no minuto actual, tal e como o determina a hora e data actual do sistema.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> a avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora do sistema actual se atopa dentro do minuto actual.",
            "Code": "DateTime.IsInCurrentMinute(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInCurrentSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInCurrentSecond",
        "Documentation.Description": "Indica se esta dataHora se atopa dentro do segundo actual, tal e como o determina a hora e data actual do sistema.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido se atopa durante o segundo actual, tal e como o determina a hora e data actual do sistema.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> a avaliar.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora do sistema actual se atopa no segundo actual.",
            "Code": "DateTime.IsInCurrentSecond(DateTime.FixedLocalNow())",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextHour",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante a próxima hora, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na hora actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante a próxima hora, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na hora actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora posterior á do sistema actual se atopa na próxima hora.",
            "Code": "DateTime.IsInNextHour(DateTime.FixedLocalNow() + #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextMinute",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o próximo minuto, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no minuto actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o próximo minuto, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no minuto actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o minuto posterior ao do sistema actual se atopa no próximo minuto.",
            "Code": "DateTime.IsInNextMinute(DateTime.FixedLocalNow() + #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInNextSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInNextSecond",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o próximo segundo, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no segundo actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o próximo segundo, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no segundo actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o segundo posterior ao da hora do sistema actual se atopa no próximo segundo.",
            "Code": "DateTime.IsInNextSecond(DateTime.FixedLocalNow() + #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousHour",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousHour",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante a hora anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na hora actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante a hora anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre na hora actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a hora anterior á do sistema actual se atopa na hora anterior.",
            "Code": "DateTime.IsInPreviousHour(DateTime.FixedLocalNow() - #duration(0, 1, 0, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousMinute",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousMinute",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o minuto anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no minuto actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o minuto anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no minuto actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o minuto anterior á hora do sistema actual se atopa no minuto anterior.",
            "Code": "DateTime.IsInPreviousMinute(DateTime.FixedLocalNow() - #duration(0, 0, 1, 0))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.IsInPreviousSecond",
      "Documentation": {
        "Documentation.Name": "DateTime.IsInPreviousSecond",
        "Documentation.Description": "Indica se este valor dataHora ocorre durante o segundo anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no segundo actual.",
        "Documentation.LongDescription": "Indica se o valor dataHora <code>dateTime</code> fornecido ocorre durante o segundo anterior, tal e como o determinan a data e hora actuais do sistema. Teña en conta que esta función devolverá false se se pasa un valor que ocorre no segundo actual.\r\n      <ul>\r\n      <li><code>dateTime</code>: un valor <code>datetime</code> ou <code>datetimezone</code> que se avaliará.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Determinar se o segundo anterior ao da hora do sistema actual se atopa no segundo anterior.",
            "Code": "DateTime.IsInPreviousSecond(DateTime.FixedLocalNow() - #duration(0, 0, 0, 1))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.Time",
      "Documentation": {
        "Documentation.Name": "DateTime.Time",
        "Documentation.Description": "Devolve a parte de hora do valor de data e hora indicado.",
        "Documentation.LongDescription": "Devolve a parte de hora do valor de data e hora indicado, <code>dateTime</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Busque o valor de hora de #datetime(2010, 12, 31, 11, 56, 02).",
            "Code": "DateTime.Time(#datetime(2010, 12, 31, 11, 56, 02))",
            "Result": "#time(11, 56, 2)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTime.ToRecord",
        "Documentation.Description": "Devolve un rexistro que contén partes do valor de data e hora.",
        "Documentation.LongDescription": "Devolve un rexistro que contén as partes do valor datetime indicado, <code>dateTime</code>.\r\n <ul>\r\n        <li><code>dateTime</code>: un valor <code>datetime</code> a partir do que se debe calcular o rexistro das súas partes.</li>\r\n      </ul>",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Converter o valor <code>#datetime(2011, 12, 31, 11, 56, 2)</code> nun rexistro que contén os valores de data e hora.",
            "Code": "DateTime.ToRecord(#datetime(2011, 12, 31, 11, 56, 2))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTime": "datetime"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTime.ToText",
      "Documentation": {
        "Documentation.Name": "DateTime.ToText",
        "Documentation.Description": "Devolve unha representación textual do valor de data e hora.",
        "Documentation.LongDescription": "Devolve unha representación textual de <code>dateTime</code>. Pódese fornecer un parámetro <code>record</code> opcional, <code>options</code>, para especificar propiedades adicionais. <code>culture</code> utilízase só para fluxos de traballo herdados. O <code>record</code> pode conter os seguintes campos:\r\n<ul>\r\n   <li><code>Format</code>: Un valor de <code>text</code> que indica o formato a utilizar. Para obter máis información, visita https://go.microsoft.com/fwlink/?linkid=2180104 e https://go.microsoft.com/fwlink/?linkid=2180105. Omitir este campo ou fornecer <code>null</code> dará lugar a formatar a data usando o valor predeterminado definido por <code>Culture</code></li>.\r\n   <li><code>Culture</code>: Cando <code>Format</code> non é nulo, <code>Culture</code> controla algúns especificadores de formato. Por exemplo, en <code>\"en-US\"</code> <code>\"MMM\"</code> é <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, mentres que en <code>\"ru-RU\"</code> <code>\"MMM\"</code> é <code>\"янв\", \"фев\", \"мар\", ...</code>. Cando <code>Format</code> é <code>null</code>, <code>Culture</code> controla o formato predefinido a utilizar. Cando <code>Culture</code> é <code>null</code> ou se omite, utilízase <code>Culture.Current</code>.</li>\r\n</ul>\r\nPara admitir fluxos de traballo herdados, <code>options</code> e <code>culture</code> tamén poden ser valores de texto. Ten o mesmo comportamento coma se <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTime",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>#datetime(2010, 12, 31, 01, 30, 25)</code> nun valor de <code>text</code>. <i>O resultado pode variar dependendo da cultura actual.</i>",
            "Code": "DateTime.ToText(#datetime(2010, 12, 31, 01, 30, 25))",
            "Result": "\"12/31/2010 1:30:25 AM\""
          },
          {
            "Description": "Converter usando un formato personalizado e a cultura alemá.",
            "Code": "DateTime.ToText(#datetime(2010, 12, 30, 2, 4, 50.36973), [Format=\"dd MMM yyyy HH:mm:ss.ffffff\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730\""
          },
          {
            "Description": "Converter usando o padrón ISO 8601.",
            "Code": "DateTime.ToText(#datetime(2000, 2, 8, 3, 45, 12),[Format=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12Z\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTime": "datetime",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.From",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.From",
        "Documentation.Description": "Crea un data, hora e fuso a partir do valor indicado.",
        "Documentation.LongDescription": "Devolve un valor <code>datetimezone</code> a partir do <code>value</code> indicado. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").\r\nSe o valor <code>value</code> é <code>null</code>, <code>DateTimeZone.From</code> devolve <code>null</code>. Se o valor <code>value</code> é <code>datetimezone</code>, devólvese <code>value</code>. Pódense converter a un valor <code>datetimezone</code> os valores dos seguintes tipos:\r\n      <ul>\r\n        <li><code>text</code>: un valor <code>datetimezone</code> a partir da representación textual. Consulte <code>DateTimeZone.FromText</code> para obter máis información.</li>\r\n        <li><code>date</code>: un valor <code>datetimezone</code> con <code>value</code> como o compoñente de data, <code>12:00:00 AM</code> como o compoñente de hora e o desprazamento correspondente ao fuso horario local.</li>\r\n        <li><code>datetime</code>: un valor <code>datetimezone</code> con <code>value</code> como data e hora e o desprazamento correspondente ao fuso horario local.</li>\r\n        <li><code>time</code>: un valor <code>datetimezone</code> coa data equivalente da data de OLE Automation de <code>0</code> como o compoñente de data, <code>value</code> como o compoñente de hora e o desprazamento correspondente ao fuso horario local.</li>\r\n        <li><code>number</code>: un valor <code>datetimezone</code> coa data e hora equivalente da data de OLE Automation expresado por <code>value</code> e o desprazamento correspondente ao fuso horario local.</li>\r\n      </ul>\r\nSe <code>value</code> é de calquera outro tipo, devólvese un erro.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>\"2020-10-30T01:30:00-08:00\"</code> nun valor <code>datetimezone</code>.",
            "Code": "DateTimeZone.From(\"2020-10-30T01:30:00-08:00\")",
            "Result": "#datetimezone(2020, 10, 30, 01, 30, 00, -8, 00)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromFileTime",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromFileTime",
        "Documentation.Description": "Crea un data, hora e fuso a partir dun número longo de 64 bits.",
        "Documentation.LongDescription": "Crea un valor <code>datetimezone</code> a partir do valor <code>fileTime</code> e convérteo no fuso horario local. Filetime é un valor de tempo de ficheiros de Windows que representa o número de intervalos de 100 nanosegundos transcorridos desde a media noite, ás 00:00, do 1 de xaneiro de 1601 d.C. (C.E.) Hora Universal Coordinada (UTC).\r\n    ",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>129876402529842245</code> nun valor data, hora e fuso.",
            "Code": "DateTimeZone.FromFileTime(129876402529842245)",
            "Result": "#datetimezone(2012, 7, 24, 14, 50, 52.9842245, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "fileTime": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.FromText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.FromText",
        "Documentation.Description": "Crea unha datetimezone a partir de formatos de datetimezone locais, universais e personalizados.",
        "Documentation.LongDescription": "Crea un valor <code>datetimezone</code> a partir dunha representación textual, <code>text</code>. Pódese fornecer un parámetro <code>record</code> opcional, <code>options</code> para especificar propiedades adicionais. <code>record</code> pode conter os seguintes campos:\r\n<ul>\r\n   <li><code>Format</code>: Un valor de <code>text</code> que indica o formato a utilizar. Para obter máis información, visita https://go.microsoft.com/fwlink/?linkid=2180104 e https://go.microsoft.com/fwlink/?linkid=2180105. Omitir este campo ou fornecer <code>null</code> dará lugar a analizar a data facendo o todo o posible.</li>\r\n   <li><code>Culture</code>: Cando <code>Format</code> non é nulo, <code>Culture</code> controla algúns especificadores de formato. Por exemplo, en <code>\"en-US\"</code> <code>\"MMM\"</code> é <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, mentres que en <code>\"ru-RU\"</code> <code>\"MMM\"</code> é <code>\"янв\", \"фев\", \"мар\", ...</code>. Cando <code>Format</code> é <code>null</code>, <code>Culture</code> controla o formato predefinido a utilizar. Cando <code>Culture</code> é <code>null</code> ou se omite, utilízase <code>Culture.Current</code>.</li>\r\n</ul>\r\nPara admitir fluxos de traballo herdados, <code>options</code> tamén pode ser un valor de texto. Ten o mesmo comportamento coma se <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>\"2010-12-31T01:30:00-08:00\"</code> nun valor <code>datetimezone</code>.",
            "Code": "DateTimeZone.FromText(\"2010-12-31T01:30:00-08:00\")",
            "Result": "#datetimezone(2010, 12, 31, 1, 30, 0, -8, 0)"
          },
          {
            "Description": "Converter usando un formato personalizado e a cultura alemá.",
            "Code": "DateTimeZone.FromText(\"30 Dez 2010 02:04:50.369730 +02:00\", [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "#datetimezone(2010, 12, 30, 2, 4, 50.36973, 2, 0)"
          },
          {
            "Description": "Converter usando ISO 8601.",
            "Code": "DateTimeZone.FromText(\"2009-06-15T13:45:30.0000000-07:00\", [Format=\"O\", Culture=\"en-US\"])",
            "Result": "#datetimezone(2009, 6, 15, 13, 45, 30, -7, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.RemoveZone",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.RemoveZone",
        "Documentation.Description": "Elimina a información de fuso horario a partir do valor de data, hora e fuso indicado.",
        "Documentation.LongDescription": "Devolve un valor #datetime de <code>dateTimeZone</code> coa información de fuso horario eliminada.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Elimine a información de fuso horario do valor #datetimezone(2011, 12, 31, 9, 15, 36, -7, 0).",
            "Code": "DateTimeZone.RemoveZone(#datetimezone(2011, 12, 31, 9, 15, 36, -7, 0))",
            "Result": "#datetime(2011, 12, 31, 9, 15, 36)"
          }
        ]
      },
      "ReturnType": "datetime",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToLocal",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToLocal",
        "Documentation.Description": "Converte o compoñente de fuso horario ao fuso horario local.",
        "Documentation.LongDescription": "Modifica a información de fuso horario do valor de data e fuso horario <code>dateTimeZone</code> á nova información de fuso horario local.\r\n    Se <code>dateTimeZone</code> non ten un compoñente de fuso horario, engádese a información de fuso horario local.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Modificar a información de fuso horario de #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) ao fuso horario local (utilizando PST).",
            "Code": "DateTimeZone.ToLocal(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 12, 26, 2, -8, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToRecord",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToRecord",
        "Documentation.Description": "Devolve un rexistro que contén partes do valor de data, hora e fuso.",
        "Documentation.LongDescription": "Devolve un rexistro que contén as partes do valor datetimezone indicado, <code>dateTimeZone</code>.\r\n <ul>\r\n        <li><code>dateTimeZone</code>: un valor <code>datetimezone</code> a partir do que se debe calcular o rexistro das súas partes.</li>\r\n      </ul>",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Converter o valor <code>#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0)</code> nun rexistro que contén os valores de data, hora e fuso.",
            "Code": "DateTimeZone.ToRecord(#datetimezone(2011, 12, 31, 11, 56, 2, 8, 0))",
            "Result": "[\r\n      Year = 2011,\r\n      Month = 12,\r\n      Day = 31,\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2,\r\n      ZoneHours = 8,\r\n      ZoneMinutes = 0\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToText",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToText",
        "Documentation.Description": "Devolve unha representación textual do valor de data, hora e fuso.",
        "Documentation.LongDescription": "Devolve unha representación textual de <code>dateTimeZone</code>. Pódese fornecer un parámetro <code>record</code> opcional, <code>options</code>, para especificar propiedades adicionais. <code>culture</code> utilízase só para fluxos de traballo herdados. O <code>record</code> pode conter os seguintes campos:\r\n<ul>\r\n   <li><code>Format</code>: Un valor de <code>text</code> que indica o formato a utilizar. Para obter máis información, visita https://go.microsoft.com/fwlink/?linkid=2180104 e https://go.microsoft.com/fwlink/?linkid=2180105. Omitir este campo ou fornecer <code>null</code> dará lugar a formatar a data usando o valor predeterminado definido por <code>Culture</code></li>.\r\n   <li><code>Culture</code>: Cando <code>Format</code> non é nulo, <code>Culture</code> controla algúns especificadores de formato. Por exemplo, en <code>\"en-US\"</code> <code>\"MMM\"</code> é <code>\"Jan\", \"Feb\", \"Mar\", ...</code>, mentres que en <code>\"ru-RU\"</code> <code>\"MMM\"</code> é <code>\"янв\", \"фев\", \"мар\", ...</code>. Cando <code>Format</code> é <code>null</code>, <code>Culture</code> controla o formato predefinido a utilizar. Cando <code>Culture</code> é <code>null</code> ou se omite, utilízase <code>Culture.Current</code>.</li>\r\n</ul>\r\nPara admitir fluxos de traballo herdados, <code>options</code> e <code>culture</code> tamén poden ser valores de texto. Ten o mesmo comportamento coma se <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0)</code> nun valor de <code>text</code>. <i>O resultado pode variar dependendo da cultura actual.</i>",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 31, 01, 30, 25, 2, 0))",
            "Result": "\"12/31/2010 1:30:25 AM +02:00\""
          },
          {
            "Description": "Converter usando un formato personalizado e a cultura alemá.",
            "Code": "DateTimeZone.ToText(#datetimezone(2010, 12, 30, 2, 4, 50.36973, -8,0), [Format=\"dd MMM yyyy HH:mm:ss.ffffff zzz\", Culture=\"de-DE\"])",
            "Result": "\"30 Dez 2010 02:04:50.369730 -08:00\""
          },
          {
            "Description": "Converter usando o padrón ISO 8601.",
            "Code": "DateTimeZone.ToText(#datetimezone(2000, 2, 8, 3, 45, 12, 2, 0),[Format=\"O\", Culture=\"en-US\"])",
            "Result": "\"2000-02-08T03:45:12.0000000+02:00\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "dateTimeZone": "datetimezone",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ToUtc",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ToUtc",
        "Documentation.Description": "Converte o compoñente de fuso horario ao fuso horario UTC.",
        "Documentation.LongDescription": "Modifica a información de fuso horario do valor de data e hora <code>dateTimeZone</code> á nova información de fuso horario UTC ou Hora Universal.\r\n    Se <code>dateTimeZone</code> non ten un compoñente de fuso horario, engádese a información de fuso horario UTC.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": [
          {
            "Description": "Modificar a información de fuso horario de #datetimezone(2010, 12, 31, 11, 56, 02, 7, 30) ao fuso horario UTC.",
            "Code": "DateTimeZone.ToUtc(#datetimezone(2010, 12, 31, 11, 56, 02, 7, 30))",
            "Result": "#datetimezone(2010, 12, 31, 4, 26, 2, 0, 0)"
          }
        ]
      },
      "ReturnType": "datetimezone",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneHours",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneHours",
        "Documentation.Description": "Modifica o fuso horario do valor.",
        "Documentation.LongDescription": "Modifica o fuso horario do valor.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DateTimeZone.ZoneMinutes",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.ZoneMinutes",
        "Documentation.Description": "Modifica o fuso horario do valor.",
        "Documentation.LongDescription": "Modifica o fuso horario do valor.",
        "Documentation.Category": "DateTimeZone",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTimeZone": "datetimezone"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Decimal.From",
      "Documentation": {
        "Documentation.Name": "Decimal.From",
        "Documentation.Description": "Crea un decimal a partir do valor fornecido.",
        "Documentation.LongDescription": "Devolve un valor <code>number</code> decimal a partir do <code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Decimal.From</code> devolve <code>null</code>. Se o <code>value</code> indicado é <code>number</code> dentro do intervalo de Decimal, <code>value</code> devólvese, se non, devólvese un erro. Se <code>value</code> é doutro tipo, primeiro converterase nun <code>number</code> usando <code>Number.FromText</code>. Tamén se pode fornecer un <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obteña o valor <code>number</code> decimal de <code>\"4.5\"</code>.",
            "Code": "Decimal.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "DeltaLake.Table",
      "Documentation": {
        "Documentation.Name": "DeltaLake.Table",
        "Documentation.Description": "Devolve o contido da táboa Delta Lake.",
        "Documentation.LongDescription": "Devolve o contido da táboa Delta Lake.",
        "Documentation.Category": "Accedendo ao datos",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "directory": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Double.From",
      "Documentation": {
        "Documentation.Name": "Double.From",
        "Documentation.Description": "Crea un real a partir do valor facilitado.",
        "Documentation.LongDescription": "Devolve un valor <code>number</code> Double a partir do <code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Double.From</code> devolve <code>null</code>. Se o <code>value</code> indicado é <code>number</code> dentro do intervalo Double, <code>value</code> devólvese, se non, devólvese un erro. Se <code>value</code> é doutro tipo, primeiro converterase nun <code>number</code> usando <code>Number.FromText</code>. Tamén se pode fornecer unha <code>culture</code>opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obteña o valor <code>number</code> real de <code>\"4\"</code>.",
            "Code": "Double.From(\"4.5\")",
            "Result": "4.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Days",
      "Documentation": {
        "Documentation.Name": "Duration.Days",
        "Documentation.Description": "Devolve a parte dos días dunha duración.",
        "Documentation.LongDescription": "Devolve a parte dos días de <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extrae o número de días entre dúas datas.",
            "Code": "Duration.Days(#date(2022, 3, 4) - #date(2022, 2, 25))",
            "Result": "7"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.From",
      "Documentation": {
        "Documentation.Name": "Duration.From",
        "Documentation.Description": "Crea unha duración a partir do valor indicado.",
        "Documentation.LongDescription": "Devolve un valor <code>duration</code> a partir do <code>value</code> indicado. Se o valor <code>value</code> é <code>null</code>, <code>Duration.From</code> devolve <code>null</code>.  Se o valor <code>value</code> é <code>duration</code>, devólvese <code>value</code>. Pódense converter a un valor <code>duration</code> os valores dos seguintes tipos:\r\n      <ul>\r\n        <li><code>text</code>: un valor <code>duration</code> das formas textuais de tempo transcorrido (d.h:m:s). Consulte <code>Duration.FromText</code> para obter máis información.</li>\r\n        <li><code>number</code>: un <code>duration</code> equivalente ao número de días enteiros e fraccionarios expresado por <code>value</code>.</li>\r\n      </ul>\r\nSe <code>value</code> é de calquera outro tipo, devólvese un erro.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>2.525</code> nun valor <code>duration</code>.",
            "Code": "Duration.From(2.525)",
            "Result": "#duration(2, 12, 36, 0)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.FromText",
      "Documentation": {
        "Documentation.Name": "Duration.FromText",
        "Documentation.Description": "Devolve un valor de duración das formas textuais de tempo transcorrido (d.h: m: s).",
        "Documentation.LongDescription": "Devolve un valor de duración a partir do texto especificado, <code>text</code>. Esta función pode analizar os seguintes formatos:\r\n <ul>\r\n        <li>(-)hh:mm(:ss(.ff)) </li>\r\n        <li>(-)ddd(.hh:mm(:ss(.ff))) </li>\r\n </ul>\r\n        <br>\r\n        (Todos os intervalos son inclusivos)<br>\r\n        ddd: número de días.<br>\r\n        hh: número de horas, entre 0 e 23.<br>\r\n        mm: número de minutos, entre 0 e 59.<br>\r\n        ss: número de segundos, entre 0 e 59.<br>\r\n        ff: fracción de segundos, entre 0 e 9999999.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>\"2.05:55:20\"</code> nun valor <code>duration</code>.",
            "Code": "Duration.FromText(\"2.05:55:20\")",
            "Result": "#duration(2, 5, 55, 20)"
          }
        ]
      },
      "ReturnType": "duration",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Hours",
      "Documentation": {
        "Documentation.Name": "Duration.Hours",
        "Documentation.Description": "Devolve a parte das horas dunha duración.",
        "Documentation.LongDescription": "Devolve a parte das horas de <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extrae as horas dun valor de duración.",
            "Code": "Duration.Hours(#duration(5, 4, 3, 2))",
            "Result": "4"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Minutes",
      "Documentation": {
        "Documentation.Name": "Duration.Minutes",
        "Documentation.Description": "Devolve a parte dos minutos dunha duración.",
        "Documentation.LongDescription": "Devolve a parte dos minutos de <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extrae os minutos dun valor de duración.",
            "Code": "Duration.Minutes(#duration(5, 4, 3, 2))",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.Seconds",
      "Documentation": {
        "Documentation.Name": "Duration.Seconds",
        "Documentation.Description": "Devolve a parte dos segundos dunha duración.",
        "Documentation.LongDescription": "Devolve a parte dos segundos de <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Extrae os segundos dun valor de duración.",
            "Code": "Duration.Seconds(#duration(5, 4, 3, 2))",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToRecord",
      "Documentation": {
        "Documentation.Name": "Duration.ToRecord",
        "Documentation.Description": "Devolve un rexistro que contén as partes da duración.",
        "Documentation.LongDescription": "Devolve un rexistro que contén as partes do valor duration, <code>duration</code>.\r\n  <ul>\r\n        <li><code>duration</code>: un valor <code>duration</code> desde o que se crea o rexistro.</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>#duration(2, 5, 55, 20)</code> nun rexistro das súas partes, incluíndo días, horas, minutos e segundos, se é aplicable.",
            "Code": "Duration.ToRecord(#duration(2, 5, 55, 20))",
            "Result": "[\r\n    Days = 2,\r\n    Hours = 5,\r\n    Minutes = 55,\r\n    Seconds = 20\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.ToText",
      "Documentation": {
        "Documentation.Name": "Duration.ToText",
        "Documentation.Description": "Devolve o texto no formato \"d.h:m:s\".",
        "Documentation.LongDescription": "Devolve unha representación textual en forma de \"day.hour:mins:sec\" do valor de duración fornecido, <code>duration</code>.\r\n <ul>\r\n        <li><code>duration</code>: Un valor de <code>duration</code> do que se calcula a representación textual.</li>\r\n  <li><code>format</code>: <i>[Opcional]</i> En desuso, producirá un erro se non é nulo</li>\r\n      </ul>",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>#duration(2, 5, 55, 20)</code> nun valor de texto.",
            "Code": "Duration.ToText(#duration(2, 5, 55, 20))",
            "Result": "\"2.05:55:20\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "duration": "duration",
        "format": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalDays",
      "Documentation": {
        "Documentation.Name": "Duration.TotalDays",
        "Documentation.Description": "Devolve o total de días que ocupa esta duración.",
        "Documentation.LongDescription": "Devolve o total de días abarcados por <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Busca o total de días abarcados por un valor de duración.",
            "Code": "Duration.TotalDays(#duration(5, 4, 3, 2))",
            "Result": "5.1687731481481478"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalHours",
      "Documentation": {
        "Documentation.Name": "Duration.TotalHours",
        "Documentation.Description": "Devolve o total de horas que ocupa esta duración.",
        "Documentation.LongDescription": "Devolve o total de horas abarcadas por <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Busca o total de horas abarcadas por un valor de duración.",
            "Code": "Duration.TotalHours(#duration(5, 4, 3, 2))",
            "Result": "124.05055555555555"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalMinutes",
      "Documentation": {
        "Documentation.Name": "Duration.TotalMinutes",
        "Documentation.Description": "Devolve o total de minutos que ocupa esta duración.",
        "Documentation.LongDescription": "Devolve o total de minutos abarcados por <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Busca o total de minutos abarcados por un valor de duración.",
            "Code": "Duration.TotalMinutes(#duration(5, 4, 3, 2))",
            "Result": "7443.0333333333338"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Duration.TotalSeconds",
      "Documentation": {
        "Documentation.Name": "Duration.TotalSeconds",
        "Documentation.Description": "Devolve o total de segundos que ocupa esta duración.",
        "Documentation.LongDescription": "Devolve o total de segundos abarcados por <code>duration</code>.",
        "Documentation.Category": "Duration",
        "Documentation.Examples": [
          {
            "Description": "Busca o total de segundos abarcados por un valor de duración.",
            "Code": "Duration.TotalSeconds(#duration(5, 4, 3, 2))",
            "Result": "446582"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "duration": "duration"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Emigo.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "EmigoDataSourceConnector.GetExtractFunction",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "ExtractName": "text",
        "DataRestrictionType": "text",
        "DataRestrictionValue": "text",
        "DataRestrictionMode": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Error.Record",
      "Documentation": {
        "Documentation.Name": "Error.Record",
        "Documentation.Description": "Devolve un rexistro de erros dos valores de texto fornecidos por motivo, mensaxe e detalles.",
        "Documentation.LongDescription": "Devolve un rexistro de erros dos valores de texto fornecidos por motivo, mensaxe e detalles.",
        "Documentation.Category": "Error",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "reason": "text",
        "message": "text",
        "detail": "any",
        "parameters": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Excel.ShapeTable",
      "Documentation": {
        "Documentation.Name": "Excel.ShapeTable",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Constant",
      "Documentation": {
        "Documentation.Name": "Expression.Constant",
        "Documentation.Description": "Devolve a representación de código fonte M dun valor constante.",
        "Documentation.LongDescription": "Devolve a representación de código fonte M dun valor constante.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Obter a representación de código fonte M dun valor de número.",
            "Code": "Expression.Constant(123)",
            "Result": "\"123\""
          },
          {
            "Description": "Obter a representación de código fonte M dun valor de data.",
            "Code": "Expression.Constant(#date(2035, 01, 02))",
            "Result": "\"#date(2035, 1, 2)\""
          },
          {
            "Description": "Obter a representación de código fonte M dun valor de texto.",
            "Code": "Expression.Constant(\"abc\")",
            "Result": "\"\"\"abc\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Evaluate",
      "Documentation": {
        "Documentation.Name": "Expression.Evaluate",
        "Documentation.Description": "Devolve o resultado de avaliar unha expresión M.",
        "Documentation.LongDescription": "Devolve o resultado de avaliar unha expresión M <code>document</code>, cos identificadores dispoñibles aos que se pode facer referencia definidos por <code>environment</code>.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Avaliar unha suma simple.",
            "Code": "Expression.Evaluate(\"1 + 1\")",
            "Result": "2"
          },
          {
            "Description": "Avaliar unha suma máis complexa.",
            "Code": "Expression.Evaluate(\"List.Sum({1, 2, 3})\", [List.Sum = List.Sum])",
            "Result": "6"
          },
          {
            "Description": "Avaliar a concatenación dun valor de texto cun identificador.",
            "Code": "Expression.Evaluate(Expression.Constant(\"\"\"abc\") & \" & \" & Expression.Identifier(\"x\"), [x = \"def\"\"\"])",
            "Result": "\"\"\"abcdef\"\"\""
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "document": "text",
        "environment": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Expression.Identifier",
      "Documentation": {
        "Documentation.Name": "Expression.Identifier",
        "Documentation.Description": "Devolve a representación de código fonte M dun identificador.",
        "Documentation.LongDescription": "Devolve a representación de código fonte M dun identificador <code>name</code>.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": [
          {
            "Description": "Obter a representación de código fonte M dun identificador.",
            "Code": "Expression.Identifier(\"MyIdentifier\")",
            "Result": "\"MyIdentifier\""
          },
          {
            "Description": "Obter a representación de código fonte M dun identificador que contén un espazo.",
            "Code": "Expression.Identifier(\"My Identifier\")",
            "Result": "\"#\"\"My Identifier\"\"\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "name": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "File.Contents",
      "Documentation": {
        "Documentation.Name": "File.Contents",
        "Documentation.Description": "Devolve o contido do ficheiro especificado como binario.",
        "Documentation.LongDescription": "Devolve o contido do ficheiro <code>path</code> como binario. Agora, o parámetro <code>options</code> só está pensado para uso interno.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "path": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Function.IsDataSource",
      "Documentation": {
        "Documentation.Name": "Function.IsDataSource",
        "Documentation.Description": "Devolve se unha determinada función considérase ou non unha orixe de datos.",
        "Documentation.LongDescription": "Devolve se <code>function</code> considérase ou non unha orixe de datos.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "logical",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.FromWellKnownText",
        "Documentation.Description": "Traduce texto que representa un valor xeográfico en formato Well-Known Text (WKT) nun rexistro estruturado.",
        "Documentation.LongDescription": "Traduce texto que representa un valor xeográfico en formato Well-Known Text (WKT) nun rexistro estruturado. WKT é un formato estándar definido por Open Geospatial Consortium (OGC) e é o formato de serialización típico que usan as bases de datos, incluído SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geography.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geography.ToWellKnownText",
        "Documentation.Description": "Traduce un valor de punto xeográfico estruturado na súa representación de Well-Known Text (WKT).",
        "Documentation.LongDescription": "Traduce un valor de punto xeográfico estruturado na súa representación de Well-Known Text (WKT) segundo o define Open Geospatial Consortium (OGC), así como o formato de serialización que usan a maioría das bases de datos, incluído SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.FromWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.FromWellKnownText",
        "Documentation.Description": "Traduce texto que representa un valor xeométrico en formato Well-Known Text (WKT) nun rexistro estruturado.",
        "Documentation.LongDescription": "Traduce texto que representa un valor xeométrico en formato Well-Known Text (WKT) nun rexistro estruturado. WKT é un formato estándar definido por Open Geospatial Consortium (OGC) e é o formato de serialización típico que usan as bases de datos, incluído SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "input": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Geometry.ToWellKnownText",
      "Documentation": {
        "Documentation.Name": "Geometry.ToWellKnownText",
        "Documentation.Description": "Traduce un valor de punto de xeométrico estruturado na súa representación de Well-Known Text (WKT).",
        "Documentation.LongDescription": "Traduce un valor de punto de xeométrico estruturado na súa representación de Well-Known Text (WKT) segundo o define Open Geospatial Consortium (OGC), así como o formato de serialización que usan a maioría das bases de datos, incluído SQL Server.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "input": "record",
        "omitSRID": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Github.PagedTable",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Graph.Nodes",
      "Documentation": {
        "Documentation.Name": "Graph.Nodes",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "graph": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Guid.From",
      "Documentation": {
        "Documentation.Name": "Guid.From",
        "Documentation.Description": "Devolve un valor de GUID do valor fornecido.",
        "Documentation.LongDescription": "Devolve un valor <code>Guid.Type</code> do valor <code>value</code> fornecido. Se o valor <code>value</code> fornecido é <code>null</code>, <code>Guid.From</code> devolve <code>null</code>. Realizarase unha comprobación para determinar se o valor <code>value</code> fornecido está nun formato aceptable. Os formatos aceptables fornécense nos exemplos.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "O GUID pode fornecerse como 32 díxitos hexadecimais contiguos.",
            "Code": "Guid.From(\"05FE1DADC8C24F3BA4C2D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "O GUID pode fornecerse como 32 díxitos hexadecimais separados por guións en bloques de 8-4-4-4-12.",
            "Code": "Guid.From(\"05FE1DAD-C8C2-4F3B-A4C2-D194116B4967\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "O GUID pode fornecerse como 32 díxitos hexadecimais separados por guións e entre chaves.",
            "Code": "Guid.From(\"{05FE1DAD-C8C2-4F3B-A4C2-D194116B4967}\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          },
          {
            "Description": "O GUID pode fornecerse como 32 díxitos hexadecimais separados por guións e entre parénteses.",
            "Code": "Guid.From(\"(05FE1DAD-C8C2-4F3B-A4C2-D194116B4967)\")",
            "Result": "\"05fe1dad-c8c2-4f3b-a4c2-d194116b4967\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "HexagonSmartApi.GetODataMetadata",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "Uri.Type",
        "includeAnnotations": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int16.From",
      "Documentation": {
        "Documentation.Name": "Int16.From",
        "Documentation.Description": "Crea un número enteiro de 16 bits a partir do valor facilitado.",
        "Documentation.LongDescription": "Devolve un valor <code>number</code> enteiro de 16 bits a partir do <code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Int16.From</code> devolve <code>null</code>. Se o <code>value</code> indicado é un <code>number</code> dentro do intervalo dun enteiro de 16 bits sen unha parte fraccionaria, <code>value</code> devólvese. Se ten parte fraccionaria, entón o número arredondarase co modo de redondeo especificado. O modo de redondeo predeterminado é <code>RoundingMode.ToEven</code>. Se <code>value</code> é doutro tipo, primeiro converterase nun <code>number</code> usando <code>Number.FromText</code>. Consulta <code>Number.Round</code> para coñecer os modos de redondeo dispoñibles. Tamén se pode fornecer un <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obteña o valor <code>number</code> enteiro de 16 bits de <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Obteña o valor <code>number</code> enteiro de 16 bits de <code>\"4.5\"</code> mediante <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int16.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int32.From",
      "Documentation": {
        "Documentation.Name": "Int32.From",
        "Documentation.Description": "Crea un número enteiro de 32 bits a partir do valor facilitado.",
        "Documentation.LongDescription": "Devolve un valor <code>number</code> enteiro de 32 bits a partir do <code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Int32.From</code> devolve <code>null</code>. Se o <code>value</code> indicado é un <code>number</code> dentro do intervalo dun enteiro de 32 bits sen unha parte fraccionaria, <code>value</code> devólvese. Se ten parte fraccionaria, entón o número arredondarase co modo de redondeo especificado. O modo de redondeo predeterminado é <code>RoundingMode.ToEven</code>. Se <code>value</code> é doutro tipo, primeiro converterase nun <code>number</code> usando <code>Number.FromText</code>. Consulta <code>Number.Round</code> para coñecer os modos de redondeo dispoñibles. Tamén se pode fornecer un <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obteña o valor <code>number</code> enteiro de 32 bits de <code>\"4\"</code>.",
            "Code": "Int32.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Obteña o valor <code>number</code> enteiro de 32 bits de <code>\"4.5\"</code> mediante <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int32.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int64.From",
      "Documentation": {
        "Documentation.Name": "Int64.From",
        "Documentation.Description": "Crea un número enteiro de 64 bits a partir do valor indicado.",
        "Documentation.LongDescription": "Devolve un valor <code>number</code> enteiro de 64 bits a partir do <code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Int64.From</code> devolve <code>null</code>. Se o <code>value</code> indicado é un <code>number</code> dentro do intervalo dun enteiro de 64 bits sen unha parte fraccionaria, <code>value</code> devólvese. Se ten parte fraccionaria, entón o número arredondarase co modo de redondeo especificado. O modo de redondeo predeterminado é <code>RoundingMode.ToEven</code>. Se <code>value</code> é doutro tipo, primeiro converterase nun <code>number</code> usando <code>Number.FromText</code>. Consulta <code>Number.Round</code> para coñecer os modos de redondeo dispoñibles. Tamén se pode fornecer un <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obter o valor <code>number</code> enteiro de 64 bits de <code>\"4\"</code>.",
            "Code": "Int64.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Obteña o valor <code>number</code> enteiro de 64 bits de <code>\"4.5\"</code> mediante <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int64.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Int8.From",
      "Documentation": {
        "Documentation.Name": "Int8.From",
        "Documentation.Description": "Crea un número enteiro de 8 bits asinado a partir do valor facilitado.",
        "Documentation.LongDescription": "Devolve un valor asinado <code>number</code> enteiro de 8 bits a partir do <code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Int8.From</code> devolve <code>null</code>. Se o <code>value</code> indicado é <code>number</code> dentro do intervalo dun enteiro asinado de 8 bits sen unha parte fraccionaria, <code>value</code> devólvese. Se ten parte fraccionaria, entón o número arredondarase co modo de redondeo especificado. O modo de redondeo predeterminado é <code>RoundingMode.ToEven</code>. Se <code>value</code> é doutro tipo, primeiro converterase nun <code>number</code> usando <code>Number.FromText</code>. Consulta <code>Number.Round</code> para coñecer os modos de redondeo dispoñibles. Tamén se pode fornecer un <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obteña o valor <code>number</code> enteiro de 8 bits asinado de <code>\"4\"</code>.",
            "Code": "Int8.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Obteña o valor <code>number</code> enteiro de 8 bits asinado de <code>\"4.5\"</code> mediante <code>RoundingMode.AwayFromZero</code>.",
            "Code": "Int8.From(\"4.5\", null, RoundingMode.AwayFromZero)",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ItemExpression.From",
      "Documentation": {
        "Documentation.Name": "ItemExpression.From",
        "Documentation.Description": "Devolve a árbore de sintaxe abstracta (AST) para o corpo dunha función.",
        "Documentation.LongDescription": "<p>Devolve a árbore de sintaxe abstracta (AST) para o corpo de <code>function</code>, normalizada nunha <i>expresión de elemento</i>:\r\n<ul>\r\n  <li>A función debe ser unha lambda de 1 argumento.</li>\r\n  <li>Todas as referencias ao parámetro da función substitúense por <code>ItemExpression.Item</code>.</li>\r\n  <li>A AST simplificarase para conter só nodos do tipo:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Prodúcese un erro se non se pode devolver unha expresión de elemento AST para o corpo de <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Devolve o AST do corpo da función <code>each _ <> null</code>",
            "Code": "ItemExpression.From(each _ <> null)",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"NotEquals\",\r\n    Left = ItemExpression.Item,\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = null\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "JamfPro.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "URL": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.Document",
      "Documentation": {
        "Documentation.Name": "Json.Document",
        "Documentation.Description": "Devolve o contido do documento JSON.",
        "Documentation.LongDescription": "Devolve o contido do documento JSON.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "jsonText": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Json.FromValue",
      "Documentation": {
        "Documentation.Name": "Json.FromValue",
        "Documentation.Description": "Produce unha representación JSON dun determinado valor.",
        "Documentation.LongDescription": "<p>Xera unha representación JSON para un determinado valor <code>value</code> cunha codificación de texto especificada por <code>encoding</code>. Se <code>encoding</code> se omite, úsase UTF8. Os valores represéntanse da maneira seguinte:</p>\r\n <ul>\r\n        <li>Os valores lóxicos, de texto e nulos represéntanse como os tipos JSON correspondentes</li>\r\n        <li>Os números represéntanse como números en JSON, excepto no caso de <code>#infinity</code>, <code>-#infinity</code> e <code>#nan</code> que se converten en nulos</li>\r\n        <li>As listas represéntanse como matrices JSON</li>\r\n        <li>Os rexistros represéntanse como obxectos JSON</li>\r\n        <li>As táboas represéntanse como unha matriz de obxectos</li>\r\n        <li>As datas, horas, dataHora, datetimezones e duracións represéntanse como texto ISO-8601</li>\r\n        <li>Os valores binarios represéntanse como texto codificado en base 64</li>\r\n        <li>Os tipos e funcións xeran un erro</li>\r\n </ul>\r\n    ",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Converter un valor complexo a JSON.",
            "Code": "Text.FromBinary(Json.FromValue([A = {1, true, \"3\"}, B = #date(2012, 3, 25)]))",
            "Result": "\"{\"\"A\"\":[1,true,\"\"3\"\"],\"\"B\"\":\"\"2012-03-25\"\"}\""
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "value": "any",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Kusto.Databases",
      "Documentation": {},
      "ReturnType": "list",
      "Parameters": {
        "cluster": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromBinary",
      "Documentation": {
        "Documentation.Name": "Lines.FromBinary",
        "Documentation.Description": "Converte un valor binario nunha lista de valores de texto dividida por quebras de liña. Se se especifica un estilo de comiñas, as quebras de liña poden aparecer entre comiñas. Se includeLineSeparators é verdadeiro, os caracteres de quebra de liña inclúense no texto.",
        "Documentation.LongDescription": "Converte un valor binario nunha lista de valores de texto dividida por quebras de liña. Se se especifica un estilo de comiñas, as quebras de liña poden aparecer entre comiñas. Se includeLineSeparators é verdadeiro, os caracteres de quebra de liña inclúense no texto.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "binary": "binary",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.FromText",
      "Documentation": {
        "Documentation.Name": "Lines.FromText",
        "Documentation.Description": "Converte un valor de texto nunha lista de valores de texto dividida por quebras de liña. Se includeLineSeparators é verdadeiro, os caracteres de quebra de liña inclúense no texto.",
        "Documentation.LongDescription": "Converte un valor de texto nunha lista de valores de texto dividida por quebras de liña. Se includeLineSeparators é verdadeiro, os caracteres de quebra de liña inclúense no texto.\r\n        <div>\r\n          <ul>\r\n            <li><code>QuoteStyle.None:</code> (valor predefinido) non é necesario un comportamento de comiñas.</li>\r\n            <li><code>QuoteStyle.Csv:</code> as comiñas as marca o CSV. Úsase un carácter de comiñas dobres para delimitar ditas rexións e un par de caracteres de comiñas dobres para indicar un único carácter de comiñas dobres nesta rexión. </li>\r\n          </ul>\r\n        </div>\r\n    ",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text",
        "quoteStyle": "QuoteStyle.Type",
        "includeLineSeparators": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToBinary",
      "Documentation": {
        "Documentation.Name": "Lines.ToBinary",
        "Documentation.Description": "Converte unha lista de texto nun valor binario utilizando a codificación e o lineSeparator especificados. O lineSeparator especificado anéxase a cada liña.  Se non se especifica, utilízanse os caracteres de retorno de carro e avance de liña.",
        "Documentation.LongDescription": "Converte unha lista de texto nun valor binario utilizando a codificación e o lineSeparator especificados. O lineSeparator especificado anéxase a cada liña.  Se non se especifica, utilízanse os caracteres de retorno de carro e avance de liña.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Lines.ToText",
      "Documentation": {
        "Documentation.Name": "Lines.ToText",
        "Documentation.Description": "Converte unha lista de texto nun texto único.  O lineSeparator especificado engádese a cada liña.  Se non se especifica, utilízanse os caracteres de retorno de carro e avance de liña.",
        "Documentation.LongDescription": "Converte unha lista de texto nun texto único.  O lineSeparator especificado engádese a cada liña.  Se non se especifica, utilízanse os caracteres de retorno de carro e avance de liña.",
        "Documentation.Category": "Lines",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "lines": "list",
        "lineSeparator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AllTrue",
      "Documentation": {
        "Documentation.Name": "List.AllTrue",
        "Documentation.Description": "Devolve verdadeiro se todas as expresións son verdadeiras.",
        "Documentation.LongDescription": "Devolve verdadeiro se todas as expresións da lista <code>list</code> son verdadeiras.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Determinar se todas as expresións da lista {true, true, 2 > 0} son verdadeiras.",
            "Code": "List.AllTrue({true, true, 2 > 0})",
            "Result": "true"
          },
          {
            "Description": "Determinar se todas as expresións da lista {true, true, 2 < 0} son verdadeiras.",
            "Code": "List.AllTrue({true, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.AnyTrue",
      "Documentation": {
        "Documentation.Name": "List.AnyTrue",
        "Documentation.Description": "Devolve verdadeiro se calquera expresión é verdadeira.",
        "Documentation.LongDescription": "Devolve verdadeiro se calquera expresión da lista <code>list</code> é verdadeira.",
        "Documentation.Category": "List.Membership functions",
        "Documentation.Examples": [
          {
            "Description": "Determinar se calquera das expresións da lista {true, false, 2 > 0} son verdadeiras.",
            "Code": "List.AnyTrue({true, false, 2>0})",
            "Result": "true"
          },
          {
            "Description": "Determinar se calquera das expresións da lista {2 = 0, false, 2 < 0} son verdadeiras.",
            "Code": "List.AnyTrue({2 = 0, false, 2 < 0})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Average",
      "Documentation": {
        "Documentation.Name": "List.Average",
        "Documentation.Description": "Devolve a media dos valores. Funciona con valores de número, data, data e hora, data, hora e fuso e duración.",
        "Documentation.LongDescription": "Devolve o valor da media dos elementos da lista, <code>list</code>. O resultado fornécese no mesmo tipo de datos que os valores da lista. Só funciona con valores de número, data, hora, data e hora, data, hora e fuso e duración.\r\n    Se a lista está baleira devólvese nulo.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Buscar a media da lista de números, <code>{3, 4, 6}</code>.",
            "Code": "List.Average({3, 4, 6})",
            "Result": "4.333333333333333"
          },
          {
            "Description": "Buscar a media dos valores de data 1 de xaneiro de 2011, 2 de xaneiro de 2011 e 3 de xaneiro de 2011.",
            "Code": "List.Average({#date(2011, 1, 1), #date(2011, 1, 2), #date(2011, 1, 3)})",
            "Result": "#date(2011, 1, 2)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Buffer",
      "Documentation": {
        "Documentation.Name": "List.Buffer",
        "Documentation.Description": "Almacena no búfer unha lista.",
        "Documentation.LongDescription": "Almacena no búfer a lista <code>list</code> na memoria. O resultado desta chamada é unha lista estable.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Crear unha copia estable da lista {1..10}.",
            "Code": "List.Buffer({1..10})",
            "Result": "{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Combine",
      "Documentation": {
        "Documentation.Name": "List.Combine",
        "Documentation.Description": "Devolve unha lista única combinando varias listas.",
        "Documentation.LongDescription": "Acepta unha lista de listas, <code>lists</code> e combínaas nunha nova lista única.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Combinar as dúas listas simples {1, 2} e {3, 4}.",
            "Code": "List.Combine({{1, 2}, {3, 4}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n}"
          },
          {
            "Description": "Combinar as dúas listas, {1, 2} e {3, {4, 5}}, onde unha delas contén unha lista aniñada.",
            "Code": "List.Combine({{1, 2}, {3, {4, 5}}})",
            "Result": "{\r\n    1,\r\n    2,\r\n    3,\r\n    {4, 5}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Count",
      "Documentation": {
        "Documentation.Name": "List.Count",
        "Documentation.Description": "Devolve o número de elementos na lista.",
        "Documentation.LongDescription": "Devolve o número de elementos na lista <code>list</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Buscar o número de valores na lista {1, 2, 3}.",
            "Code": "List.Count({1, 2, 3})",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Distinct",
      "Documentation": {
        "Documentation.Name": "List.Distinct",
        "Documentation.Description": "Devolve unha lista de valores con os duplicados eliminados.",
        "Documentation.LongDescription": "Devolve unha lista que contén todos os valores da lista <code>list</code> con os duplicados eliminados. Se a lista está baleira, o resultado é unha lista baleira.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Elimine os duplicados da lista {1, 1, 2, 3, 3, 3}.",
            "Code": "List.Distinct({1, 1, 2, 3, 3, 3})",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.First",
      "Documentation": {
        "Documentation.Name": "List.First",
        "Documentation.Description": "Devolve o primeiro valor da lista ou o valor predefinido especificado se está baleiro.",
        "Documentation.LongDescription": "Devolve o primeiro elemento da lista <code>list</code> ou o valor predefinido opcional, <code>defaultValue</code>, se a lista está baleira.\r\n    Se a lista está baleira e non se especifica ningún valor predefinido, a función devolve <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar o primeiro valor da lista {1, 2, 3}.",
            "Code": "List.First({1, 2, 3})",
            "Result": "1"
          },
          {
            "Description": "Buscar o primeiro valor da lista {}. Se a lista está baleira, devolve -1.",
            "Code": "List.First({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Intersect",
      "Documentation": {
        "Documentation.Name": "List.Intersect",
        "Documentation.Description": "Devolve a intersección dos valores da lista localizados na entrada.",
        "Documentation.LongDescription": "Devolve a intersección dos valores da lista localizados na lista de entrada <code>lists</code>. Pódese especificar un parámetro opcional, <code>equationCriteria</code>.",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar a intersección das listas {1..5}, {2..6}, {3..7}.",
            "Code": "List.Intersect({{1..5}, {2..6}, {3..7}})",
            "Result": "{3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsDistinct",
      "Documentation": {
        "Documentation.Name": "List.IsDistinct",
        "Documentation.Description": "Indica se hai duplicados na lista.",
        "Documentation.LongDescription": "Devolve un valor lóxico se hai duplicados na lista <code>list</code>; <code>true</code> se a lista é diferente, <code>false</code> se hai valores duplicados. ",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar se a lista {1, 2, 3} é diferente (é dicir, non ten duplicados).",
            "Code": "List.IsDistinct({1, 2, 3})",
            "Result": "true"
          },
          {
            "Description": "Buscar se a lista {1, 2, 3, 3} é diferente (é dicir, non ten duplicados).",
            "Code": "List.IsDistinct({1, 2, 3, 3})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.IsEmpty",
      "Documentation": {
        "Documentation.Name": "List.IsEmpty",
        "Documentation.Description": "Devolve verdadeiro se a lista está baleira.",
        "Documentation.LongDescription": "Devolve <code>true</code> se a lista, <code>list</code>, non contén valores (lonxitude 0). Se a lista contén valores (lonxitude > 0), devolve <code>false</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": [
          {
            "Description": "Buscar se a lista {} está baleira.",
            "Code": "List.IsEmpty({})",
            "Result": "true"
          },
          {
            "Description": "Buscar se a lista {1, 2} está baleira.",
            "Code": "List.IsEmpty({1, 2})",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Last",
      "Documentation": {
        "Documentation.Name": "List.Last",
        "Documentation.Description": "Devolve o último valor da lista ou o valor predefinido especificado se está baleiro.",
        "Documentation.LongDescription": "Devolve o último elemento da lista <code>list</code> ou o valor predefinido opcional, <code>defaultValue</code>, se a lista está baleira.\r\n    Se a lista está baleira e non se especifica ningún valor predefinido, a función devolve <code>null</code>.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar o último valor da lista {1, 2, 3}.",
            "Code": "List.Last({1, 2, 3})",
            "Result": "3"
          },
          {
            "Description": "Buscar o último valor da lista {} ou -1 se está baleira.",
            "Code": "List.Last({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "defaultValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.LastN",
      "Documentation": {
        "Documentation.Name": "List.LastN",
        "Documentation.Description": "Devolve o último valor da lista.  Opcionalmente pode especificar o número de valores que vai devolver ou unha condición de cualificación.",
        "Documentation.LongDescription": "Devolve o último elemento da lista <code>list</code>. Se a lista está baleira, xérase unha excepción.\r\n Esta función acepta un parámetro opcional, <code>countOrCondition</code>, para admitir recompilar varios elementos ou elementos de filtrado. <code>countOrCondition</code> pódese especificar de tres maneiras:\r\n <ul>\r\n  <li>Se se especifica un número, devólvense os elementos ata chegar a ese número. </li>\r\n  <li>Se se especifica unha condición, devólvense todos os elementos que inicialmente cumpren a condición, comezando ao final da lista. Cando un elemento non cumpre a condición, non se teñen en conta máis elementos. </li>\r\n  <li>Se este parámetro é nulo devólvese o último elemento da lista.</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar o último valor da lista {3, 4, 5, -1, 7, 8, 2}.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, 1)",
            "Result": "{2}"
          },
          {
            "Description": "Buscar os últimos valores da lista {3, 4, 5, -1, 7, 8, 2} que son maiores que 0.",
            "Code": "List.LastN({3, 4, 5, -1, 7, 8, 2}, each _ > 0)",
            "Result": "{7, 8, 2}"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Max",
      "Documentation": {
        "Documentation.Name": "List.Max",
        "Documentation.Description": "Devolve o valor máximo da lista ou o valor predefinido nunha lista baleira.",
        "Documentation.LongDescription": "Devolve o elemento máximo da lista <code>list</code> ou o valor predefinido opcional <code>default</code> se a lista está baleira.\r\n    Pódese especificar un valor comparisonCriteria opcional, <code>comparisonCriteria</code>, para determinar como comparar os elementos da lista. Se este parámetro é nulo, úsase o comparador predefinido.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Buscar o máximo da lista {1, 4, 7, 3, -2, 5}.",
            "Code": "List.Max({1, 4, 7, 3, -2, 5}, 1)",
            "Result": "7"
          },
          {
            "Description": "Buscar o máximo da lista {} ou devolver -1 se está baleira. ",
            "Code": "List.Max({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Median",
      "Documentation": {
        "Documentation.Name": "List.Median",
        "Documentation.Description": "Devolve o valor da mediana da lista.",
        "Documentation.LongDescription": "Devolve o elemento da mediana da lista <code>list</code>. Esta función devolve <code>null</code> se a lista non contén ningún valor que non sexa <code>null</code>.\r\n    Se hai un número par de elementos, a función escolle o menor dos dous elementos da mediana, a non ser que a lista se\r\n    compoña por completo de valores dataHora, duracións, números ou horas; neste caso, devolve a media dos dous elementos.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Buscar o elemento da mediana da lista <code>{5, 3, 1, 7, 9}</code>.",
            "Code": "List.Median({5, 3, 1, 7, 9})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Min",
      "Documentation": {
        "Documentation.Name": "List.Min",
        "Documentation.Description": "Devolve o valor mínimo da lista ou o valor predefinido nunha lista baleira.",
        "Documentation.LongDescription": "Devolve o elemento mínimo da lista <code>list</code> ou o valor predefinido opcional <code>default</code> se a lista está baleira.\r\n    Pódese especificar un valor comparisonCriteria opcional, <code>comparisonCriteria</code>, para determinar como comparar os elementos da lista. Se este parámetro é nulo, úsase o comparador predefinido.",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Buscar o mínimo da lista {1, 4, 7, 3, -2, 5}.",
            "Code": "List.Min({1, 4, 7, 3, -2, 5})",
            "Result": "-2"
          },
          {
            "Description": "Buscar o mínimo da lista {} ou devolver -1 se está baleira. ",
            "Code": "List.Min({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any",
        "comparisonCriteria": "any",
        "includeNulls": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Mode",
      "Documentation": {
        "Documentation.Name": "List.Mode",
        "Documentation.Description": "Devolve o valor máis frecuente da lista.",
        "Documentation.LongDescription": "Devolve o elemento que aparece con máis frecuencia na lista, <code>list</code>. Se a lista está baleira, xérase unha excepción. Se aparecen varios elementos coa mesma frecuencia máxima, escóllese o último.\r\n    Pódese indicar un valor <code>comparisonCriteria</code> opcional, <code>equationCriteria</code>, para controlar probas de igualdade. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Buscar o elemento que aparece con máis frecuencia na lista <code>{\"A\", 1, 2, 3, 3, 4, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5})",
            "Result": "3"
          },
          {
            "Description": "Buscar o elemento que aparece con máis frecuencia na lista <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Mode({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "5"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Modes",
      "Documentation": {
        "Documentation.Name": "List.Modes",
        "Documentation.Description": "Devolve unha lista dos valores máis frecuentes na lista.",
        "Documentation.LongDescription": "Devolve o elemento que aparece con máis frecuencia na lista, <code>list</code>. Se a lista está baleira, xérase unha excepción. Se aparecen varios elementos coa mesma frecuencia máxima, escóllese o último.\r\n    Pódese indicar un valor <code>comparisonCriteria</code> opcional, <code>equationCriteria</code>, para controlar probas de igualdade. ",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Buscar os elementos que aparecen con máis frecuencia na lista <code>{\"A\", 1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Modes({\"A\", 1, 2, 3, 3, 4, 5, 5})",
            "Result": "{3, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.NonNullCount",
      "Documentation": {
        "Documentation.Name": "List.NonNullCount",
        "Documentation.Description": "Devolve o número de elementos non nulos da lista.",
        "Documentation.LongDescription": "Devolve o número de elementos non nulos da lista <code>list</code>.",
        "Documentation.Category": "List.Information",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Positions",
      "Documentation": {
        "Documentation.Name": "List.Positions",
        "Documentation.Description": "Devolve unha lista de desprazamentos da entrada.",
        "Documentation.LongDescription": "Devolve unha lista de desprazamentos da lista de entradas <code>list</code>.\r\n    Ao usar List.Transform para modificar unha lista, a lista de posicións pódese usar para permitir o acceso da transformación á posición.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar os desprazamentos dos valores na lista {1, 2, 3, 4, null, 5}.",
            "Code": "List.Positions({1, 2, 3, 4, null, 5})",
            "Result": "{0, 1, 2, 3, 4, 5}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Product",
      "Documentation": {
        "Documentation.Name": "List.Product",
        "Documentation.Description": "Devolve o produto dos números da lista.",
        "Documentation.LongDescription": "Devolve o produto dos números non nulos da lista, <code>numbersList</code>. Devolve nulo se non hai valores non nulos na lista.",
        "Documentation.Category": "List.Numerics",
        "Documentation.Examples": [
          {
            "Description": "Buscar o produto dos números da lista <code>{1, 2, 3, 3, 4, 5, 5}</code>.",
            "Code": "List.Product({1, 2, 3, 3, 4, 5, 5})",
            "Result": "1800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Random",
      "Documentation": {
        "Documentation.Name": "List.Random",
        "Documentation.Description": "Devolve unha lista de números aleatorios.",
        "Documentation.LongDescription": "Devolve unha lista de números aleatorios entre 0 e 1, co número de valores que se van xerar e un valor de propagación opcional indicados.\r\n<ul>\r\n   <li><code>count</code>: o número de valores aleatorios que se van xerar.</li>\r\n   <li><code>seed</code>: <i>[Optional]</i> un valor numérico usado para propagar o xerador de números aleatorios. Se se omite, xérase unha lista única de números aleatorios cada vez que chame á función. Se especifica o valor de propagación cun número, cada chamada á función xera a mesma lista de números aleatorios.</li>\r\n</ul>",
        "Documentation.Category": "List.Generators",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de 3 números aleatorios.",
            "Code": "List.Random(3)",
            "Result": "{0.992332, 0.132334, 0.023592}"
          },
          {
            "Description": "Crear unha lista de 3 números aleatorios, especificando o valor de propagación.",
            "Code": "List.Random(3, 2)",
            "Result": "{0.883002, 0.245344, 0.723212}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "count": "number",
        "seed": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveFirstN",
      "Documentation": {
        "Documentation.Name": "List.RemoveFirstN",
        "Documentation.Description": "Devolve unha lista que ignora o número de elementos especificado no inicio da lista.",
        "Documentation.LongDescription": "Devolve unha lista que elimina o primeiro elemento da lista <code>list</code>. Se <code>list</code> é unha lista baleira devólvese unha lista baleira.\r\nEsta función toma un parámetro opcional, <code>countOrCondition</code>, para admitir a eliminación de varios valores como se indica a continuación.\r\n <ul>\r\n <li>Se se especifica un número, elimínanse ata ese número. </li>\r\n <li>Se se especifica unha condición, eliminaranse todos os elementos coincidentes consecutivos ao comezo de <code>list</code>.</li>\r\n <li>Se este parámetro é nulo, obsérvase o comportamento predeterminado.</li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Cree unha lista de {1, 2, 3, 4, 5} sen os 3 primeiros números.",
            "Code": "List.RemoveFirstN({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Cree unha lista de {5, 4, 2, 6, 1} que comece cun número menor que 3.",
            "Code": "List.RemoveFirstN({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveLastN",
      "Documentation": {
        "Documentation.Name": "List.RemoveLastN",
        "Documentation.Description": "Devolve unha lista que elimina o número de elementos especificado do final da lista.",
        "Documentation.LongDescription": "Devolve unha lista que elimina os últimos <code>countOrCondition</code> elementos do final da lista <code>list</code>. Se <code>list</code> ten menos de <code>countOrCondition</code> elementos, devólvese unha lista baleira.\r\n <ul>\r\n <li>Se se especifica un número, elimínanse ata ese número. </li>\r\n <li>Se se especifica unha condición, eliminaranse todos os elementos coincidentes consecutivos ao final de <code>list</code>.</li>\r\n <li>Se este parámetro é nulo, só se elimina un elemento. </li>\r\n </ul>",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Crea unha lista a partir de {1, 2, 3, 4, 5} sen os 3 últimos números.",
            "Code": "List.RemoveLastN({1, 2, 3, 4, 5}, 3)",
            "Result": "{1, 2}"
          },
          {
            "Description": "Crea unha lista de {5, 4, 2, 6, 4} que termina cun número menor que 3.",
            "Code": "List.RemoveLastN({5, 4, 2, 6, 4}, each _ > 3)",
            "Result": "{5, 4, 2}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.RemoveNulls",
      "Documentation": {
        "Documentation.Name": "List.RemoveNulls",
        "Documentation.Description": "Elimina todos os valores \"nulo\" da lista especifica.",
        "Documentation.LongDescription": "Elimina todas as ocorrencias de valores \"nulo\" en <code>list</code>. Se non hai valores \"nulo\" na lista, devólvese a lista orixinal.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Eliminar os valores \"nulo\" da lista {1, 2, 3, null, 4, 5, null, 6}.",
            "Code": "List.RemoveNulls({1, 2, 3, null, 4, 5, null, 6})",
            "Result": "{1, 2, 3, 4, 5, 6}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Reverse",
      "Documentation": {
        "Documentation.Name": "List.Reverse",
        "Documentation.Description": "Inverte a orde dos valores da lista.",
        "Documentation.LongDescription": "Devolve unha lista cos valores da lista <code>list</code> en orde inversa.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de {1..10} en orde inversa.",
            "Code": "List.Reverse({1..10})",
            "Result": "{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Single",
      "Documentation": {
        "Documentation.Name": "List.Single",
        "Documentation.Description": "Devolve o elemento un da lista para unha lista de lonxitude un, se non, xera unha excepción.",
        "Documentation.LongDescription": "Se só hai un elemento na lista <code>list</code>, devolve ese elemento.\r\n    Se hai máis dun elemento ou a lista está baleira, a función xera unha excepción.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar o valor único da lista {1}.",
            "Code": "List.Single({1})",
            "Result": "1"
          },
          {
            "Description": "Buscar o valor único da lista {1, 2, 3}.",
            "Code": "List.Single({1, 2, 3})",
            "Result": "[Expression.Error] There were too many elements in the enumeration to complete the operation."
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.SingleOrDefault",
      "Documentation": {
        "Documentation.Name": "List.SingleOrDefault",
        "Documentation.Description": "Devolve o elemento un da lista para unha lista de lonxitude un e o valor predefinido para unha lista baleira.",
        "Documentation.LongDescription": "Se só hai un elemento na lista <code>list</code>, devolve ese elemento.\r\n    Se a lista está baleira, a función devolve nulo a non ser que se especifique un valor <code>default</code> opcional. Se hai máis dun elemento na lista, a función devolve un erro.",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar o valor único da lista {1}.",
            "Code": "List.SingleOrDefault({1})",
            "Result": "1"
          },
          {
            "Description": "Buscar o valor único da lista {}.",
            "Code": "List.SingleOrDefault({})",
            "Result": "null"
          },
          {
            "Description": "Buscar o valor único da lista {}. Se está baleira, devolve -1.",
            "Code": "List.SingleOrDefault({}, -1)",
            "Result": "-1"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Skip",
      "Documentation": {
        "Documentation.Name": "List.Skip",
        "Documentation.Description": "Devolve unha lista que ignora o número de elementos especificado no inicio da lista.",
        "Documentation.LongDescription": "Devolve unha lista que ignora o primeiro elemento da lista <code>list</code>. Se <code>list</code> é unha lista baleira devólvese unha lista baleira.\r\nEsta función toma un parámetro opcional, <code>countOrCondition</code>, para admitir omitir varios valores como se indica a continuación.\r\n <ul>\r\n <li>Se se especifica un número, omítense ata ese número de elementos. </li>\r\n <li>Se se especifica unha condición, omítese calquera elemento coincidente consecutivo ao comezo de <code>list</code>.</li>\r\n <li>Se este parámetro é nulo, obsérvase o comportamento predeterminado.</li>\r\n </ul>",
        "Documentation.Category": "List.Selection",
        "Documentation.Examples": [
          {
            "Description": "Cree unha lista de {1, 2, 3, 4, 5} sen os 3 primeiros números.",
            "Code": "List.Skip({1, 2, 3, 4, 5}, 3)",
            "Result": "{4, 5}"
          },
          {
            "Description": "Cree unha lista de {5, 4, 2, 6, 1} que comece cun número menor que 3.",
            "Code": "List.Skip({5, 4, 2, 6, 1}, each _ > 3)",
            "Result": "{2, 6, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "countOrCondition": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sort",
      "Documentation": {
        "Documentation.Name": "List.Sort",
        "Documentation.Description": "Ordena unha lista de datos segundo o criterio especificado.",
        "Documentation.LongDescription": "Ordena unha lista de datos, <code>list</code>, segundo o criterio opcional especificado.\r\n    Tamén se pode especificar un parámetro opcional, <code>comparisonCriteria</code>, como o criterio de comparación. Isto pode ter os seguintes valores:\r\n    <ul>\r\n    <li> Para controlar a orde, o criterio de comparación pode ser un valor de enumeración Order. (<code>Order.Descending</code>, <code>Order.Ascending</code>). </li> \r\n    <li> Para calcular unha clave que se vai utilizar na ordenación, pódese usar unha función de 1 argumento. </li>\r\n    <li> Para seleccionar unha clave e unha orde de control, o criterio de comparación pode ser unha lista que conteña a clave e a orde (<code>{each 1 / _, Order.Descending}</code>). </li>\r\n    <li> Para controlar por completo a comparación, pódese usar unha función de 2 argumentos. A esta función se lle pasarán dos elementos da lista (calquera dous elementos, en calquera orde). A función debería devolver un dos valores seguintes:\r\n        <ul>\r\n            <li> <code>-1</code>: O primeiro elemento é menos que o segundo.</li>\r\n            <li> <code>0</code>: Os elementos son iguais.</li>\r\n            <li> <code>1</code>: O primeiro elemento é maior có segundo.</li>\r\n        </ul>\r\n        Valor.A comparación é un método que se pode utilizar para delegar esta lóxica. </li>\r\n    </ul>",
        "Documentation.Category": "List.Ordering",
        "Documentation.Examples": [
          {
            "Description": "Ordenar a lista {2, 3, 1}.",
            "Code": "List.Sort({2, 3, 1})",
            "Result": "{1, 2, 3}"
          },
          {
            "Description": "Ordenar a lista {2, 3, 1} en orde descendente.",
            "Code": "List.Sort({2, 3, 1}, Order.Descending)",
            "Result": "{3, 2, 1}"
          },
          {
            "Description": "Ordenar a lista {2, 3, 1} en orde descendente utilizando o método Value.Compare.",
            "Code": "List.Sort({2, 3, 1}, (x, y) => Value.Compare(1/x, 1/y))",
            "Result": "{3, 2, 1}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "list": "list",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.StandardDeviation",
      "Documentation": {
        "Documentation.Name": "List.StandardDeviation",
        "Documentation.Description": "Devolve unha estimación baseada en exemplos da desviación estándar.",
        "Documentation.LongDescription": "Devolve unha estimación baseada en exemplos da desviación estándar dos valores da lista, <code>numbersList</code>.\r\n    Se <code>numbersList</code> é unha lista de números, devólvese un número.\r\n    Xérase unha excepción nunha lista baleira ou nunha lista de elementos que non son do tipo <code>number</code>.",
        "Documentation.Category": "List.Averages",
        "Documentation.Examples": [
          {
            "Description": "Buscar a desviación estándar dos números 1 a 5.",
            "Code": "List.StandardDeviation({1..5})",
            "Result": "1.5811388300841898"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "numbersList": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Sum",
      "Documentation": {
        "Documentation.Name": "List.Sum",
        "Documentation.Description": "Devolve a suma dos elementos da lista.",
        "Documentation.LongDescription": "Devolve a suma dos valores non nulos da lista, <code>list</code>.  Devolve nulo se non hai valores non nulos na lista.",
        "Documentation.Category": "List.Addition",
        "Documentation.Examples": [
          {
            "Description": "Buscar a suma dos números da lista <code>{1, 2, 3}</code>.",
            "Code": "List.Sum({1, 2, 3})",
            "Result": "6"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "list": "list",
        "precision": "Precision.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Union",
      "Documentation": {
        "Documentation.Name": "List.Union",
        "Documentation.Description": "Devolve a unión dos valores da lista localizados na entrada.",
        "Documentation.LongDescription": "Toma unha lista de listas <code>lists</code>, une os elementos das listas individuais e devólveos á lista de saída. Como consecuencia, a lista devolta contén todos os elementos de todas as listas de entrada.\r\n    Esta operación mantén a semántica de multiconxuntos tradicional, polo que os valores duplicados coinciden como parte da unión.\r\n    Pódese indicar un valor de criterio de ecuación opcional, <code>equationCriteria</code>, para controlar probas de igualdade. ",
        "Documentation.Category": "List.Set operations",
        "Documentation.Examples": [
          {
            "Description": "Crear unha unión da lista {1..5}, {2..6}, {3..7}.",
            "Code": "List.Union({{1..5}, {2..6}, {3..7}})",
            "Result": "{1, 2, 3, 4, 5, 6, 7}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list",
        "equationCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "List.Zip",
      "Documentation": {
        "Documentation.Name": "List.Zip",
        "Documentation.Description": "Obtén unha lista de listas ao combinar elementos na mesma posición en varias listas.",
        "Documentation.LongDescription": "Colle unha lista de listas, <code>lists</code>, e obtén unha lista de listas ao combinar elementos na mesma posición.",
        "Documentation.Category": "List.Transformation functions",
        "Documentation.Examples": [
          {
            "Description": "Comprime as dúas listas simples {1, 2} e {3, 4}.",
            "Code": "List.Zip({{1, 2}, {3, 4}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, 4}\r\n}"
          },
          {
            "Description": "Comprime as dúas listas simples de diferentes lonxitudes {1, 2} e {3}.",
            "Code": "List.Zip({{1, 2}, {3}})",
            "Result": "{\r\n    {1, 3},\r\n    {2, null}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "lists": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.From",
      "Documentation": {
        "Documentation.Name": "Logical.From",
        "Documentation.Description": "Crea unha lóxica a partir do valor indicado.",
        "Documentation.LongDescription": "Devolve un valor <code>logical</code> a partir do <code>value</code> indicado. Se o valor <code>value</code> é <code>null</code>, <code>Logical.From</code> devolve <code>null</code>. Se o valor <code>value</code> é <code>logical</code>, devólvese <code>value</code>. Pódense converter a un valor <code>logical</code> os valores dos seguintes tipos:\r\n      <ul>\r\n        <li><code>text</code>: un valor <code>logical</code> a partir do valor de texto, xa sexa <code>\"true\"</code> ou <code>\"false\"</code>. Consulte <code>Logical.FromText</code> para obter máis información.</li>\r\n        <li><code>number</code>: <code>false</code> se <code>value</code> é igual que <code>0</code>, se non, <code>true</code>.</li>\r\n      </ul>\r\nSe <code>value</code> é de calquera outro tipo, devólvese un erro.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>2</code> nun valor <code>logical</code>.",
            "Code": "Logical.From(2)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.FromText",
      "Documentation": {
        "Documentation.Name": "Logical.FromText",
        "Documentation.Description": "Crea un valor lóxico a partir dos valores de texto \"verdadeiro\" e \"falso\".",
        "Documentation.LongDescription": "Crea un valor lóxico a partir dos valores de texto <code>text</code>, ou \"verdadeiro\" ou \"falso\". Se <code>text</code> contén outra cadea, xérase unha excepción. O valor de texto <code>text</code> non diferencia maiúsculas de minúsculas.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Crea un valor lóxico a partir da cadea de texto \"verdadeiro\".",
            "Code": "Logical.FromText(\"true\")",
            "Result": "true"
          },
          {
            "Description": "Crear un valor lóxico a partir da cadea de texto \"a\".",
            "Code": "Logical.FromText(\"a\")",
            "Result": "[Expression.Error] Could not convert to a logical."
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Logical.ToText",
      "Documentation": {
        "Documentation.Name": "Logical.ToText",
        "Documentation.Description": "Devolve o texto \"verdadeiro\" ou \"falso\" indicado un valor lóxico.",
        "Documentation.LongDescription": "Crea un valor de texto a partir do valor lóxico <code>logicalValue</code>, ou <code>true</code> ou <code>false</code>. Se <code>logicalValue</code> non é un valor lóxico, xérase unha excepción.",
        "Documentation.Category": "Logical",
        "Documentation.Examples": [
          {
            "Description": "Crear un valor de texto a partir de <code>true</code> lóxico.",
            "Code": "Logical.ToText(true)",
            "Result": "\"true\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "logicalValue": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicroStrategyDataset.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "libraryUrl": "Uri.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "MicrosoftAzureConsumptionInsights.Test",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "enrollmentNumber": "any",
        "parameters": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelById",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelId": "number",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Mixpanel.FunnelByName",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "funnelName": "text",
        "fromDate": "text",
        "toDate": "text",
        "length": "number",
        "interval": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Abs",
      "Documentation": {
        "Documentation.Name": "Number.Abs",
        "Documentation.Description": "Devolve o valor absoluto do número.",
        "Documentation.LongDescription": "Devolve o valor absoluto de <code>number</code>. Se <code>number</code> é nulo, <code>Number.Abs</code> devolve nulo.\r\n    <ul>\r\n        <li><code>number</code>: un <code>number</code> a partir do cal se debe calcular o valor absoluto.</li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Valor absoluto de -3.",
            "Code": "Number.Abs(-3)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Acos",
      "Documentation": {
        "Documentation.Name": "Number.Acos",
        "Documentation.Description": "Devolve o arcocoseno do número.",
        "Documentation.LongDescription": "Devolve o arcocoseno de <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Asin",
      "Documentation": {
        "Documentation.Name": "Number.Asin",
        "Documentation.Description": "Devolve o arcoseno do número.",
        "Documentation.LongDescription": "Devolve o arcoseno de <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Atan",
      "Documentation": {
        "Documentation.Name": "Number.Atan",
        "Documentation.Description": "Devolve a arcotanxente do número.",
        "Documentation.LongDescription": "Devolve a arcotanxente de <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.BitwiseNot",
      "Documentation": {
        "Documentation.Name": "Number.BitwiseNot",
        "Documentation.Description": "Devolve un byte no que cada bit é o oposto da entrada.",
        "Documentation.LongDescription": "Devolve o resultado de realizar unha operación \"Not\" bit a bit en <code>number</code>.",
        "Documentation.Category": "Number.Bytes",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "number": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cos",
      "Documentation": {
        "Documentation.Name": "Number.Cos",
        "Documentation.Description": "Devolve o coseno do número.",
        "Documentation.LongDescription": "Devolve o coseno de <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Buscar o coseno do ángulo 0.",
            "Code": "Number.Cos(0)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Cosh",
      "Documentation": {
        "Documentation.Name": "Number.Cosh",
        "Documentation.Description": "Devolve o coseno hiperbólico do número.",
        "Documentation.LongDescription": "Devolve o coseno hiperbólico de <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Exp",
      "Documentation": {
        "Documentation.Name": "Number.Exp",
        "Documentation.Description": "Eleva e á potencia indicada.",
        "Documentation.LongDescription": "Devolve o resultado de elevar e á potencia de <code>number</code> (función exponencial).\r\n      <ul>\r\n        <li><code>number</code>: un <code>number</code> a partir do que se debe calcular a función exponencial. Se <code>number</code> é nulo, <code>Number.Exp</code> devolve nulo. </li>\r\n      </ul>",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Eleva e á potencia 3.",
            "Code": "Number.Exp(3)",
            "Result": "20.085536923187668"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Factorial",
      "Documentation": {
        "Documentation.Name": "Number.Factorial",
        "Documentation.Description": "Devolve o factorial do número.",
        "Documentation.LongDescription": "Devolve o factorial do número <code>number</code>.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar o factorial de 10.",
            "Code": "Number.Factorial(10)",
            "Result": "3628800"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.From",
      "Documentation": {
        "Documentation.Name": "Number.From",
        "Documentation.Description": "Crea un número a partir do valor indicado.",
        "Documentation.LongDescription": "Devolve un valor <code>number</code> a partir do <code>value</code> indicado. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").\r\nSe o valor <code>value</code> é <code>null</code>, <code>Number.From</code> devolve <code>null</code>. Se o valor <code>value</code> é <code>number</code>, devólvese <code>value</code>. Pódense converter a un valor <code>number</code> os valores dos seguintes tipos:\r\n      <ul>\r\n        <li><code>text</code>: valor <code>number</code> a partir da representación textual. Contrólanse os formatos de número comúns (\"15\", \"3.423,10\", \"5,0E-10\"). Consulte <code>Number.FromText</code> para obter máis información.</li>\r\n        <li><code>logical</code>: 1 para <code>true</code>, 0 para <code>false</code>.</li>\r\n        <li><code>datetime</code>: número de punto flotante de dobre precisión que contén un equivalente da data de OLE Automation.</li>\r\n        <li><code>datetimezone</code>: número de punto flotante de dobre precisión que contén un equivalente da data de OLE Automation da data e hora locais de <code>value</code>.</li>\r\n        <li><code>date</code>: número de punto flotante de dobre precisión que contén un equivalente da data de OLE Automation.</li>\r\n        <li><code>time</code>: expresado en fraccións de días.</li>\r\n        <li><code>duration</code>: expresado en fraccións de días e días completos.</li>\r\n      </ul>\r\nSe <code>value</code> é de calquera outro tipo, devólvese un erro.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obter o valor <code>number</code> de <code>\"4\"</code>.",
            "Code": "Number.From(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Obter o valor <code>number</code> de <code>#datetime(2020, 3, 20, 6, 0, 0)</code>.",
            "Code": "Number.From(#datetime(2020, 3, 20, 6, 0, 0))",
            "Result": "43910.25"
          },
          {
            "Description": "Obtén o valor de <code>número</code> de <code>\"12,3 %\"</code>.",
            "Code": "Number.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.FromText",
      "Documentation": {
        "Documentation.Name": "Number.FromText",
        "Documentation.Description": "Crea números a partir de formatos de texto comúns (\"15\", \"3.423,10\", \"5,0E-10\").",
        "Documentation.LongDescription": "Devolve un valor <code>number</code> a partir do valor de texto indicado, <code>text</code>.\r\n <ul>\r\n  <li><code>text</code>: representación textual dun valor numérico. A representación debe estar nun formato de número común: \"15\", \"3423,10\", \"5,0E-10\".</li>\r\n  <li><code>culture</code>: cultura opcional que controla como se interpreta <code>text</code> (por exemplo, \"gl-ES\").</li>\r\n </ul>",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obter o valor de número de <code>\"4\"</code>.",
            "Code": "Number.FromText(\"4\")",
            "Result": "4"
          },
          {
            "Description": "Obter o valor de número de <code>\"5.0e-10\"</code>.",
            "Code": "Number.FromText(\"5.0e-10\")",
            "Result": "5E-10"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsEven",
      "Documentation": {
        "Documentation.Name": "Number.IsEven",
        "Documentation.Description": "Indica se o valor é par.",
        "Documentation.LongDescription": "Indica se o valor, <code>number</code>, é par devolvendo <code>true</code> se é par, se non, <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Comprobar se 625 é un número par.",
            "Code": "Number.IsEven(625)",
            "Result": "false"
          },
          {
            "Description": "Comprobar se 82 é un número par.",
            "Code": "Number.IsEven(82)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsNaN",
      "Documentation": {
        "Documentation.Name": "Number.IsNaN",
        "Documentation.Description": "Indica se o valor é NaN (non numérico).",
        "Documentation.LongDescription": "Indica se o valor é NaN (non numérico). Devolve <code>true</code> se <code>number</code> é equivalente a <code>Number.IsNaN</code>, se non, <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Comprobar se 0 dividido entre 0 é NaN.",
            "Code": "Number.IsNaN(0/0)",
            "Result": "true"
          },
          {
            "Description": "Comprobar se 1 dividido entre 0 é NaN.",
            "Code": "Number.IsNaN(1/0)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.IsOdd",
      "Documentation": {
        "Documentation.Name": "Number.IsOdd",
        "Documentation.Description": "Indica se o valor é impar.",
        "Documentation.LongDescription": "Indica se o valor é impar. Devolve <code>true</code> se <code>number</code> é un número impar, se non, <code>false</code>.",
        "Documentation.Category": "Number.Information",
        "Documentation.Examples": [
          {
            "Description": "Comprobar se 625 é un número impar.",
            "Code": "Number.IsOdd(625)",
            "Result": "true"
          },
          {
            "Description": "Comprobar se 82 é un número impar.",
            "Code": "Number.IsOdd(82)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Ln",
      "Documentation": {
        "Documentation.Name": "Number.Ln",
        "Documentation.Description": "Devolve o logaritmo natural do número.",
        "Documentation.LongDescription": "Devolve o logaritmo natural dun número, <code>number</code>. Se <code>number</code> é nulo, <code>Number.Ln</code> devolve nulo.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Obter o logaritmo natural de 15.",
            "Code": "Number.Ln(15)",
            "Result": "2.70805020110221"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log",
      "Documentation": {
        "Documentation.Name": "Number.Log",
        "Documentation.Description": "Devolve o logaritmo do número na base especificada (o valor predefinido é e).",
        "Documentation.LongDescription": "Devolve o logaritmo dun número, <code>number</code>, na base <code>base</code> especificada. Se non se especifica <code>base</code>, o valor predefinido é Number.E.\r\n    Se <code>number</code> é nulo, <code>Number.Log</code> devolve nulo.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Obtén o logaritmo en base 10 de 2.",
            "Code": "Number.Log(2, 10)",
            "Result": "0.3010299956639812"
          },
          {
            "Description": "Obtén o logaritmo en base e de 2.",
            "Code": "Number.Log(2)",
            "Result": "0.69314718055994529"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "base": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Log10",
      "Documentation": {
        "Documentation.Name": "Number.Log10",
        "Documentation.Description": "Devolve o logaritmo en base 10 do número.",
        "Documentation.LongDescription": "Devolve o logaritmo en base 10 dun número, <code>number</code>. Se <code>number</code> é nulo, <code>Number.Log10</code> devolve nulo.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Obtén o logaritmo en base 10 de 2.",
            "Code": "Number.Log10(2)",
            "Result": "0.3010299956639812"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Round",
      "Documentation": {
        "Documentation.Name": "Number.Round",
        "Documentation.Description": "Devolve o número arredondado. O número de díxitos e o modo de arredondamento pódese especificar.",
        "Documentation.LongDescription": "Devolve o resultado de arredondar <code>number</code> ao número máis próximo. Se <code>number</code> é nulo, <code>Number.Round</code> devolve nulo. <br>\r\n      <br>\r\n      Por defecto, <code>number</code> arredóndase ao enteiro máis próximo, e os valores equivalentes québranse arredondando ao número par máis próximo (mediante <code>RoundingMode.ToEven</code>, tamén coñecido como \"arredondamento do banqueiro\"). <br>\r\n      <br>\r\n      Non obstante, se pode invalidar estes valores predefinidos mediante os seguintes parámetros opcionais. \r\n      <ul>\r\n        <li><code>digits</code>: causa que <code>number</code> se arredondase ao número especificado de díxitos decimais. </li>\r\n        <li><code>roundingMode</code>: anula o comportamento de valor equivalente predefinido cando <code>number</code> é do punto medio entre dous valores potencialmente arredondados\r\n      (consulte <code>RoundingMode.Type</code> para posibles valores). </li>\r\n      </ul>",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Arredondar 1,234 ao enteiro máis próximo.",
            "Code": "Number.Round(1.234)",
            "Result": "1"
          },
          {
            "Description": "Arredondar 1,56 ao enteiro máis próximo.",
            "Code": "Number.Round(1.56)",
            "Result": "2"
          },
          {
            "Description": "Arredondar 1,2345 a dúas posicións decimais.",
            "Code": "Number.Round(1.2345, 2)",
            "Result": "1.23"
          },
          {
            "Description": "Arredondar 1,2345 a tres posicións decimais (arredondamento para arriba).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Up)",
            "Result": "1.235"
          },
          {
            "Description": "Arredondar 1,2345 a tres posicións decimais (arredondamento para abaixo).",
            "Code": "Number.Round(1.2345, 3, RoundingMode.Down)",
            "Result": "1.234"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number",
        "roundingMode": "RoundingMode.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundAwayFromZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundAwayFromZero",
        "Documentation.Description": "Devolve o resultado de arredondar os números positivos para arriba e os números negativos para abaixo. O número de díxitos pode especificarse.",
        "Documentation.LongDescription": "Devolve o resultado de arredondar <code>number</code> baseándose no signo do número. Esta función arredondará os números positivos para arriba e os números negativos para abaixo.\r\n    Se se especifica <code>digits</code>, <code>number</code> arredóndase ao número <code>digits</code> de díxitos decimais.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Arredondar o número -1,2 lonxe de cero.",
            "Code": "Number.RoundAwayFromZero(-1.2)",
            "Result": "-2"
          },
          {
            "Description": "Arredondar o número 1,2 lonxe de cero.",
            "Code": "Number.RoundAwayFromZero(1.2)",
            "Result": "2"
          },
          {
            "Description": "Arredondar o número -1,234 a dous decimais lonxe de cero.",
            "Code": "Number.RoundAwayFromZero(-1.234, 2)",
            "Result": "-1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundDown",
      "Documentation": {
        "Documentation.Name": "Number.RoundDown",
        "Documentation.Description": "Devolve o número maior anterior. Pode especificarse o número de díxitos.",
        "Documentation.LongDescription": "Devolve o resultado de arredondar <code>number</code> para abaixo ata o enteiro maior anterior. Se <code>number</code> é nulo, esta función devolve nulo.\r\n\r\n    Se se especifica <code>digits</code>, <code>number</code>arredóndase ao número de díxitos decimais especificado.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Arredondar 1,234 para abaixo ao enteiro.",
            "Code": "Number.RoundDown(1.234)",
            "Result": "1"
          },
          {
            "Description": "Arredondar 1,999 para abaixo ao enteiro.",
            "Code": "Number.RoundDown(1.999)",
            "Result": "1"
          },
          {
            "Description": "Arredondar 1,999 para abaixo a dous decimais.",
            "Code": "Number.RoundDown(1.999, 2)",
            "Result": "1.99"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundTowardZero",
      "Documentation": {
        "Documentation.Name": "Number.RoundTowardZero",
        "Documentation.Description": "Devolve o resultado de arredondar os números positivos para abaixo e os números negativos para arriba. Pode especificarse o número de díxitos.",
        "Documentation.LongDescription": "Devolve o resultado de arredondar <code>number</code> baseándose no signo do número. Esta función arredondará os números positivos para abaixo e os números negativos para arriba.\r\n    Se se especifica <code>digits</code>, <code>number</code> arredóndase ao número <code>digits</code> de díxitos decimais.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Arredondar o número -1,2 cara a cero.",
            "Code": "Number.RoundTowardZero(-1.2)",
            "Result": "-1"
          },
          {
            "Description": "Arredondar o número -1,2 cara a cero.",
            "Code": "Number.RoundTowardZero(1.2)",
            "Result": "1"
          },
          {
            "Description": "Arredondar o número -1,234 a dous decimais cara cero.",
            "Code": "Number.RoundTowardZero(-1.234, 2)",
            "Result": "-1.23"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.RoundUp",
      "Documentation": {
        "Documentation.Name": "Number.RoundUp",
        "Documentation.Description": "Devolve o enteiro maior seguinte. Pode especificarse o número de díxitos.",
        "Documentation.LongDescription": "Devolve o resultado de arredondar <code>number</code> para arriba ata o seguinte enteiro maior. Se <code>number</code> é nulo, esta función devolve nulo.\r\n    Se se especifica <code>digits</code>, <code>number</code> arredóndase ao número de díxitos decimais especificados.\r\n  ",
        "Documentation.Category": "Number.Rounding",
        "Documentation.Examples": [
          {
            "Description": "Arredondar 1,234 para arriba ao enteiro.",
            "Code": "Number.RoundUp(1.234)",
            "Result": "2"
          },
          {
            "Description": "Arredondar 1,999 para arriba ao enteiro.",
            "Code": "Number.RoundUp(1.999)",
            "Result": "2"
          },
          {
            "Description": "Arredondar 1,234 para arriba a dous decimais.",
            "Code": "Number.RoundUp(1.234, 2)",
            "Result": "1.24"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number",
        "digits": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sign",
      "Documentation": {
        "Documentation.Name": "Number.Sign",
        "Documentation.Description": "Devolve 1 se o número é positivo, -1 se é negativo e 0 se é cero.",
        "Documentation.LongDescription": "Devolve 1 se <code>number</code> é un número positivo, -1 se é un número negativo e 0 se é cero.\r\n    Se <code>number</code> é nulo, <code>Number.Sign</code> devolve nulo.",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Determinar o signo de 182.",
            "Code": "Number.Sign(182)",
            "Result": "1"
          },
          {
            "Description": "Determinar o signo de -182.",
            "Code": "Number.Sign(-182)",
            "Result": "-1"
          },
          {
            "Description": "Determinar o signo de 0.",
            "Code": "Number.Sign(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sin",
      "Documentation": {
        "Documentation.Name": "Number.Sin",
        "Documentation.Description": "Devolve o seno do número.",
        "Documentation.LongDescription": "Devolve o seno de <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Buscar o seno do ángulo 0.",
            "Code": "Number.Sin(0)",
            "Result": "0"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sinh",
      "Documentation": {
        "Documentation.Name": "Number.Sinh",
        "Documentation.Description": "Devolve o seno hiperbólico do número.",
        "Documentation.LongDescription": "Devolve o seno hiperbólico de <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Sqrt",
      "Documentation": {
        "Documentation.Name": "Number.Sqrt",
        "Documentation.Description": "Devolve a raíz cadrada do número.",
        "Documentation.LongDescription": "Devolve a raíz cadrada de <code>number</code>.\r\n    Se <code>number</code> é nulo, <code>Number.Sqrt</code> devolve nulo. Se é un valor negativo, devólvese <code>Number.NaN</code> (non numérico).",
        "Documentation.Category": "Number.Operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar a raíz cadrada de 625.",
            "Code": "Number.Sqrt(625)",
            "Result": "25"
          },
          {
            "Description": "Buscar a raíz cadrada de 85.",
            "Code": "Number.Sqrt(85)",
            "Result": "9.2195444572928871"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tan",
      "Documentation": {
        "Documentation.Name": "Number.Tan",
        "Documentation.Description": "Devolve a tanxente do número.",
        "Documentation.LongDescription": "Devolve a tanxente de <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": [
          {
            "Description": "Buscar a tanxente do ángulo 1.",
            "Code": "Number.Tan(1)",
            "Result": "1.5574077246549023"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.Tanh",
      "Documentation": {
        "Documentation.Name": "Number.Tanh",
        "Documentation.Description": "Devolve a tanxente hiperbólica do número.",
        "Documentation.LongDescription": "Devolve a tanxente hiperbólica de <code>number</code>.",
        "Documentation.Category": "Number.Trigonometry",
        "Documentation.Examples": []
      },
      "ReturnType": "number",
      "Parameters": {
        "number": "number"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Number.ToText",
      "Documentation": {
        "Documentation.Name": "Number.ToText",
        "Documentation.Description": "Converte o número dado en texto.",
        "Documentation.LongDescription": "Converte o valor numérico <code>number</code> a un valor de texto en función do formato especificado por <code>format</code>.<br>\r\n    <br>\r\n    O formato é un valor de texto que indica como debe converterse o número. Para obter máis información sobre os valores de formato compatibles, vaia a https://go.microsoft.com/fwlink/?linkid=2241210 e https://go.microsoft.com/fwlink/?linkid=2240884.<br>\r\n    <br>\r\n    Tamén se pode fornecer un <code>culture</code> opcional (por exemplo, \"en-US\") para controlar o comportamento dependente da referencia cultural de <code>format</code>.",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Converter un número a texto sen especificar un formato.",
            "Code": "Number.ToText(4)",
            "Result": "\"4\""
          },
          {
            "Description": "Converter un número en formato exponencial.",
            "Code": "Number.ToText(4, \"e\")",
            "Result": "\"4.000000e+000\""
          },
          {
            "Description": "Converter un número en formato porcentual cun só decimal.",
            "Code": "Number.ToText(-0.1234, \"P1\")",
            "Result": "\"-12.3 %\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "number": "number",
        "format": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "OData.Feed",
      "Documentation": {
        "Documentation.Name": "OData.Feed",
        "Documentation.Description": "Devolve unha táboa de fontes OData proporcionada por un servizo OData.",
        "Documentation.LongDescription": "Devolve unha táboa de fontes OData ofrecidas por un servizo OData a partir dun URI <code>serviceUri</code> e cabeceiras <code>headers</code>. Pode especificarse un valor booleano que indique se se deben usar conexións simultáneas ou un parámetro de rexistro opcional, <code>options</code>, para controlar as seguintes opcións:\r\n    <ul>\r\n   <li><code>Query</code>: engade parámetros de consulta mediante programación ao URL sen preocuparse polos caracteres de escape. </li>\r\n    <li> <code>Headers</code>: a especificación deste valor como rexistro fornecerá cabeceiras adicionais a unha solicitude HTTP.</li>\r\n    <li> <code>ExcludedFromCacheKey</code>: se este valor se especifica como lista, as claves de cabeceira HTTP excluiranse do cálculo para o almacenamento de datos na caché.</li>\r\n    <li> <code>ApiKeyName</code>: se o sitio de destino ten algunha noción dunha clave da API, este parámetro poderá usarse para especificar o nome (non o valor) do parámetro clave que se debe usar no URL. O valor de clave real fornécese na credencial.</li>\r\n    <li> <code>Timeout</code>: a especificación deste valor como duración modificará o tempo de espera dunha solicitude HTTP. O valor predefinido é de 600 segundos.</li>\r\n    <li> <code>EnableBatch</code>: valor lóxico (true/false) que establece se se debe permitir a xeración dunha solicitude OData $batch cando se supera o valor de MaxUriLength (o valor predefinido é false).</li>\r\n    <li> <code>MaxUriLength</code>: número que indica a lonxitude máxima dun URI permitido enviado a un servizo OData. Se se supera e EnableBatch é true, a solicitude efectuarase a un extremo OData $batch; do contrario, producirase un erro (o valor predefinido é 2048).</li>\r\n    <li> <code>Concurrent</code>: valor lóxico (true/false); se se establece en true, as solicitudes ao servizo son simultáneas. Se se establece en false, as solicitudes son secuenciais. Se non se especifica, a anotación AsynchronousRequestsSupported do servizo determinará o valor. Se o servizo non especifica se se admite AsynchronousRequestsSupported, as solicitudes serán secuenciais.</li>\r\n    <li> <code>ODataVersion</code>: número (3 ou 4) que especifica a versión do protocolo OData que se usará para este servizo OData. Cando non se especifique, solicitaranse todas as versión compatibles. A cabeceira OData-Version que devolve o servizo determinará a versión do servizo.</li>\r\n    <li> <code>FunctionOverloads</code>: valor lóxico (true/false); se se establece en true, as sobrecargas de importación da función enuméranse no explorador como entradas separadas; se se establece en false, as sobrecargas de importación da función enuméranse como unha función de unión no explorador. No caso da versión 3, o valor predefinido é false; no da versión 4, é true.</li>\r\n    <li> <code>MoreColumns</code>: valor lóxico (true/false); se se establece en true, engade unha columna \"Máis columnas\" ás fontes de entidades que conteñen tipos abertos e polimórficos. Isto conterá os campos non declarados no tipo base. Se se establece en false, este campo non está presente. O valor predefinido é false.</li>\r\n    <li> <code>IncludeAnnotations</code>: lista separada por comas de padróns ou termos cualificados de espazo de nomes que se incluirán cun carácter comodín \"*\". Por defecto, non se inclúe ningunha anotación.</li>\r\n    <li> <code>IncludeMetadataAnnotations</code>: lista separada por comas de padróns ou nomes de termos cualificados de espazo de nomes que se incluirán en solicitudes de documentos de metadatos con \"*\" como carácter comodín. Por defecto, inclúe as mesmas anotacións que IncludeAnnotations.</li>\r\n    <li> <code>OmitValues</code>: permite que o servizo OData evite a escritura de certos valores nas respostas. Se se aproba, os valores inferiranse a partir dos campos omitidos. As opcións son as seguintes:\r\n      <ul>\r\n        <li><code>ODataOmitValues.Nulls</code>: permite que o servizo OData omita valores nulos.</li>\r\n      </ul>\r\n    </li>\r\n    <li> <code>Implementation</code>: especifica a implantación do conector OData que se usará. Os valores válidos son \"2.0\" ou nulo.</li>\r\n    </ul>",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Conectar co servizo TripPin OData.",
            "Code": "OData.Feed(\"https://services.odata.org/V4/TripPinService\")",
            "Result": "table"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "serviceUri": "text",
        "headers": "record",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Odbc.InferOptions",
      "Documentation": {
        "Documentation.Name": "Odbc.InferOptions",
        "Documentation.Description": "Devolve o resultado de tentar deducir funcionalidades SQL dun controlador ODBC.",
        "Documentation.LongDescription": "Devolve o resultado de tentar deducir funcionalidades SQL coa cadea de conexión <code>connectionString</code> mediante ODBC. <code>connectionString</code> pode ser texto ou un rexistro de pares de valor de propiedade. Os valores de propiedade poden ser texto ou número.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Devolve as funcionalidades SQL inferidas para unha cadea de conexión.",
            "Code": "Odbc.InferOptions(\"dsn=your_dsn\")",
            "Result": "record"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "connectionString": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Document",
      "Documentation": {
        "Documentation.Name": "Parquet.Document",
        "Documentation.Description": "Devolve o contido do documento de Parquet como unha táboa.",
        "Documentation.LongDescription": "Devolve o contido do documento de Parquet en forma de táboa. Nas opcións inclúese:\n    <ul>\n    <li> <code>TypeMapping</code> : Valor de texto que controla a asignación do tipo predefinido ao ler e escribir ficheiros. O valor predefinido é nulo e tenta manter a máxima fidelidade posible co tipo orixinal. O valor \"Sql\" xerará os resultados máis compatibles con SQL Server.</li>\n    </ul>",
        "Documentation.Category": "Accedendo ao datos",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Parquet.Metadata",
      "Documentation": {
        "Documentation.Name": "Parquet.Metadata",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Accedendo ao datos",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "binary": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Percentage.From",
      "Documentation": {
        "Documentation.Name": "Percentage.From",
        "Documentation.Description": "Devolve un valor de porcentaxe do valor fornecido.",
        "Documentation.LongDescription": "Devolve un valor <code>percentage</code> do <code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Percentage.From</code> devolve <code>null</code>.  Se o <code>value</code> indicado é <code>text</code> cun símbolo de porcentaxe ao final, devolverase o número decimal convertido. Se non, o valor converterase nun <code>number</code> usando <code>Number.From</code>. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obtén o valor de <code>porcentaxe</code> de <code>\"12,3 %\"</code>.",
            "Code": "Percentage.From(\"12.3%\")",
            "Result": "0.123"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "ProductInsights.QueryMetric",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "urlAndQuery": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "QubolePresto.Contents",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "dsn": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RData.FromBinary",
      "Documentation": {
        "Documentation.Name": "RData.FromBinary",
        "Documentation.Description": "Devolve un rexistro de marcos de datos a partir do ficheiro RData.",
        "Documentation.LongDescription": "Devolve un rexistro de marcos de datos a partir do ficheiro RData.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "stream": "binary"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.Combine",
      "Documentation": {
        "Documentation.Name": "Record.Combine",
        "Documentation.Description": "Combina os rexistros na lista indicada.",
        "Documentation.LongDescription": "Combina os rexistros na <code>records</code> indicada. Se <code>records</code> contén valores que non son rexistros, devólvese un erro.",
        "Documentation.Category": "Record.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Crear un rexistro combinado a partir dos rexistros.",
            "Code": "Record.Combine({\r\n    [CustomerID = 1, Name = \"Bob\"],\r\n    [Phone = \"123-4567\"]\r\n})",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "records": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldCount",
      "Documentation": {
        "Documentation.Name": "Record.FieldCount",
        "Documentation.Description": "Devolve o número de campos do rexistro.",
        "Documentation.LongDescription": "Devolve o número de campos do rexistro <code>record</code>.",
        "Documentation.Category": "Record.Information",
        "Documentation.Examples": [
          {
            "Description": "Buscar o número de campos do rexistro.",
            "Code": "Record.FieldCount([CustomerID = 1, Name = \"Bob\"])",
            "Result": "2"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldNames",
      "Documentation": {
        "Documentation.Name": "Record.FieldNames",
        "Documentation.Description": "Devolve os nomes dos campos.",
        "Documentation.LongDescription": "Devolve os nomes dos campos do rexistro <code>record</code> como texto.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar os nomes dos campos do rexistro.",
            "Code": "Record.FieldNames([OrderID = 1, CustomerID = 1, Item = \"Fishing rod\", Price = 100.0])",
            "Result": "{\"OrderID\", \"CustomerID\", \"Item\", \"Price\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FieldValues",
      "Documentation": {
        "Documentation.Name": "Record.FieldValues",
        "Documentation.Description": "Devolve unha lista de valores de campo.",
        "Documentation.LongDescription": "Devolve unha lista de valores de campo no rexistro <code>record</code>.",
        "Documentation.Category": "Record.Selection",
        "Documentation.Examples": [
          {
            "Description": "Buscar os valores de campo no rexistro.",
            "Code": "Record.FieldValues([CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"])",
            "Result": "{1, \"Bob\", \"123-4567\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.FromTable",
      "Documentation": {
        "Documentation.Name": "Record.FromTable",
        "Documentation.Description": "Crea un rexistro dunha táboa do formato {[Name = name, Value = value]}.",
        "Documentation.LongDescription": "Devolve un rexistro dunha táboa de rexistros <code>table</code> que contén nomes de campo e nomes de valores <code>{[Name = name, Value = value]}</code>. Se os nomes de campo non son únicos, xérase unha excepción.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Crear un rexistro dunha táboa do formato Table.FromRecords({[Name = \"CustomerID\", Value = 1], [Name = \"Name\", Value = \"Bob\"], [Name = \"Phone\", Value = \"123-4567\"]}).",
            "Code": "Record.FromTable(\r\n    Table.FromRecords({\r\n        [Name = \"CustomerID\", Value = 1],\r\n        [Name = \"Name\", Value = \"Bob\"],\r\n        [Name = \"Phone\", Value = \"123-4567\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Record.ToList",
      "Documentation": {
        "Documentation.Name": "Record.ToList",
        "Documentation.Description": "Devolve unha lista de valores que contén os valores de campo do rexistro de entrada.",
        "Documentation.LongDescription": "Devolve unha lista de valores que contén os valores de campo da entrada <code>record</code>.",
        "Documentation.Category": "Record.Serialization",
        "Documentation.Examples": [
          {
            "Description": "Extraer os valores de campo dun rexistro.",
            "Code": "Record.ToList([A = 1, B = 2, C = 3])",
            "Result": "{1, 2, 3}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "record": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Resource.Access",
      "Documentation": {
        "Documentation.Name": "Resource.Access",
        "Documentation.Description": "Resource.Access",
        "Documentation.LongDescription": "Resource.Access",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "resource": "any",
        "nativeQuery": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.Column",
      "Documentation": {
        "Documentation.Name": "RowExpression.Column",
        "Documentation.Description": "Devolve unha árbore de sintaxe abstracta (AST) que representa o acceso a unha columna dentro dunha expresión de fila.",
        "Documentation.LongDescription": "Devolve unha árbore de sintaxe abstracta (AST) que representa o acceso á columna <code>columnName</code> da fila dentro dunha expresión de fila.",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Crea un AST que representa o acceso da columna \"CustomerName\".",
            "Code": "RowExpression.Column(\"CustomerName\")",
            "Result": "[\r\n    Kind = \"FieldAccess\",\r\n    Expression = RowExpression.Row,\r\n    MemberName = \"CustomerName\"\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "columnName": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "RowExpression.From",
      "Documentation": {
        "Documentation.Name": "RowExpression.From",
        "Documentation.Description": "Devolve a árbore de sintaxe abstracta (AST) para o corpo dunha función.",
        "Documentation.LongDescription": "<p>Devolve a árbore de sintaxe abstracta (AST) para o corpo de <code>function</code>, normalizada nunha <i>expresión de fila</i>:\r\n<ul>\r\n  <li>A función debe ser unha lambda de 1 argumento.</li>\r\n  <li>Todas as referencias ao parámetro de función substitúense por <code>RowExpression.Row</code>.</li>\r\n  <li>Todas as referencias ás columnas substitúense por <code>RowExpression.Column(<i>columnName</i>)</code>.</li>\r\n  <li>A AST simplificarase para conter só nodos deste tipo:\r\n    <ul>\r\n      <li><code>Constant</code></li>\r\n      <li><code>Invocation</code></li>\r\n      <li><code>Unary</code></li>\r\n      <li><code>Binary</code></li>\r\n      <li><code>If</code></li>\r\n      <li><code>FieldAccess</code></li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n</p>\r\n</p>Prodúcese un erro se non se pode devolver unha expresión de fila AST para o corpo de <code>function</code>.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": [
          {
            "Description": "Devolve o AST do corpo da función <code>each [CustomerID] = \"ALFKI\"</code>",
            "Code": "RowExpression.From(each [CustomerName] = \"ALFKI\")",
            "Result": "[\r\n    Kind = \"Binary\",\r\n    Operator = \"Equals\",\r\n    Left = RowExpression.Column(\"CustomerName\"),\r\n    Right =\r\n    [\r\n        Kind = \"Constant\",\r\n        Value = \"ALFKI\"\r\n    ]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Single.From",
      "Documentation": {
        "Documentation.Name": "Single.From",
        "Documentation.Description": "Crea un Single a partir do valor facilitado.",
        "Documentation.LongDescription": "Devolve un valor <code>number</code> Single a partir do <code>value</code> indicado. Se o <code>value</code> indicado é <code>null</code>, <code>Single.From</code> devolve <code>null</code>. Se o <code>value</code> indicado é <code>number</code> dentro do intervalo Single, <code>value</code> devólvese, se non, devólvese un erro. Se <code>value</code> é doutro tipo, primeiro converterase nun <code>number</code> usando <code>Number.FromText</code>. Tamén se pode fornecer unha <code>culture</code>opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Number.Conversion and formatting",
        "Documentation.Examples": [
          {
            "Description": "Obteña o valor <code>number</code> Single de <code>\"1.5\"</code>.",
            "Code": "Single.From(\"1.5\")",
            "Result": "1.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Smartsheet.Content",
      "Documentation": {
        "Documentation.Description": "Devolve unha táboa de datos dun extremo de índice de Smartsheet.",
        "Documentation.DisplayName": "Smartsheet.Content",
        "Documentation.Caption": "Smartsheet.Content",
        "Documentation.Name": "Smartsheet.Content",
        "Documentation.LongDescription": "Realiza unha chamada á API de REST de Smartsheet 2.0 no extremo especificado e transforma o elemento de datos devolto nunha táboa.",
        "Documentation.Examples": [
          {
            "Description": "Extrae unha táboa da información dos usuarios desde a API de Smartsheet",
            "Code": "Smartsheet.Content(\"users\")",
            "Result": "Unha táboa coa información dos usuarios como a devolveu a API de Smartsheet"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "endpoint": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByAnyDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByAnyDelimiter",
        "Documentation.Description": "Devolve unha función que divide texto nunha lista de texto en calquera dos delimitadores especificados.",
        "Documentation.LongDescription": "Devolve unha función que divide texto nunha lista de texto en calquera dos delimitadores especificados.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Divide a entrada por coma ou punto e coma, ignorando as comiñas e os delimitadores entre comiñas e comezando dende o inicio da entrada.",
            "Code": "Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv)(\"a,b;\"\"c,d;e\"\",f\")",
            "Result": "{\"a\", \"b\", \"c,d;e\", \"f\"}"
          },
          {
            "Description": "Divide a entrada por coma ou punto e coma, ignorando as comiñas e os delimitadores entre comiñas e comezando desde o final da entrada.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByAnyDelimiter({\",\", \";\"}, QuoteStyle.Csv, startAtEnd)(\"a,\"\"b;c,d\")",
            "Result": "{\"a,b\", \"c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByDelimiter",
        "Documentation.Description": "Devolve unha función que divide texto nunha lista de texto segundo o delimitador especificado.",
        "Documentation.LongDescription": "Devolve unha función que divide texto nunha lista de texto segundo o delimitador especificado.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Divide a entrada por coma, ignorando as comas.",
            "Code": "Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv)(\"a,\"\"b,c\"\",d\")",
            "Result": "{\"a\", \"b,c\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiter": "text",
        "quoteStyle": "QuoteStyle.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByEachDelimiter",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByEachDelimiter",
        "Documentation.Description": "Devolve unha función que divide texto nunha lista de texto en cada delimitador especificado en secuencia.",
        "Documentation.LongDescription": "Devolve unha función que divide texto nunha lista de texto en cada delimitador especificado en secuencia.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Divide a entrada por coma, despois punto e coma, comezando dende o principio da entrada.",
            "Code": "Splitter.SplitTextByEachDelimiter({\",\", \";\"})(\"a,b;c,d\")",
            "Result": "{\"a\", \"b\", \"c,d\"}"
          },
          {
            "Description": "Divide a entrada por coma, despois punto e coma, tratando as comiñas como calquera outro carácter e comezando desde o final da entrada.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByEachDelimiter({\",\", \";\"}, QuoteStyle.None, startAtEnd)(\"a,\"\"b;c\"\",d\")",
            "Result": "{\"a,\"\"b\", \"c\"\"\", \"d\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "delimiters": "list",
        "quoteStyle": "QuoteStyle.Type",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByLengths",
        "Documentation.Description": "Devolve unha función que divide texto nunha lista de texto por cada lonxitude especificada.",
        "Documentation.LongDescription": "Devolve unha función que divide texto nunha lista de texto por cada lonxitude especificada.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Divide a entrada nos dous primeiros caracteres seguidos dos tres seguintes, comezando dende o principio da entrada.",
            "Code": "Splitter.SplitTextByLengths({2, 3})(\"AB123\")",
            "Result": "{\"AB\", \"123\"}"
          },
          {
            "Description": "Divide a entrada nos tres primeiros caracteres seguidos dos dous seguintes, comezando desde o final da entrada.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByLengths({5, 2}, startAtEnd)(\"RedmondWA98052\")",
            "Result": "{\"WA\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "lengths": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByPositions",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByPositions",
        "Documentation.Description": "Devolve unha función que divide texto nunha lista de texto en cada posición especificada.",
        "Documentation.LongDescription": "Devolve unha función que divide texto nunha lista de texto en cada posición especificada.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Divide a entrada nas posicións especificadas, comezando dende o principio da entrada.",
            "Code": "Splitter.SplitTextByPositions({0, 3, 4})(\"ABC|12345\")",
            "Result": "{\"ABC\", \"|\", \"12345\"}"
          },
          {
            "Description": "Divide a entrada nas posicións especificadas, comezando desde o final da entrada.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByPositions({0, 5}, startAtEnd)(\"Redmond98052\")",
            "Result": "{\"Redmond\", \"98052\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "positions": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRanges",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRanges",
        "Documentation.Description": "Devolve unha función que divide texto nunha lista de texto segundo as lonxitudes e os desprazamentos especificados.",
        "Documentation.LongDescription": "Devolve unha función que divide o texto nunha lista de texto segundo os desprazamentos e lonxitudes especificados. Unha lonxitude nula indica que se deben incluír todas as entradas restantes.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Divide a entrada polos pares de posición e lonxitude especificados, comezando desde o principio da entrada. Ten en conta que os intervalos deste exemplo se solapan.",
            "Code": "Splitter.SplitTextByRanges({{0, 4}, {2, 10}})(\"codelimiter\")",
            "Result": "{\"code\", \"delimiter\"}"
          },
          {
            "Description": "Divide a entrada polos pares de posición e lonxitude especificados, comezando dende o final da entrada.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRanges({{0, 5}, {6, 2}}, startAtEnd)(\"RedmondWA?98052\")",
            "Result": "{\"WA\", \"98052\"}"
          },
          {
            "Description": "Divide a entrada nun código postal de lonxitude fixa seguido dun nome de cidade de lonxitude variable.",
            "Code": "Splitter.SplitTextByRanges({{0, 5}, {5, null}})(\"98052Redmond\")",
            "Result": "{\"98052\", \"Redmond\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "ranges": "list",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Splitter.SplitTextByRepeatedLengths",
      "Documentation": {
        "Documentation.Name": "Splitter.SplitTextByRepeatedLengths",
        "Documentation.Description": "Devolve unha función que divide texto nunha lista de texto despois da lonxitude especificada de maneira repetida.",
        "Documentation.LongDescription": "Devolve unha función que divide texto nunha lista de texto despois da lonxitude especificada de maneira repetida.",
        "Documentation.Category": "Splitter",
        "Documentation.Examples": [
          {
            "Description": "Divide repetidamente a entrada en anacos de tres caracteres, comezando dende o principio da entrada.",
            "Code": "Splitter.SplitTextByRepeatedLengths(3)(\"12345678\")",
            "Result": "{\"123\", \"456\", \"78\"}"
          },
          {
            "Description": "Divide repetidamente a entrada en anacos de tres caracteres, comezando dende o final da entrada.",
            "Code": "let\r\n    startAtEnd = true\r\nin\r\n    Splitter.SplitTextByRepeatedLengths(3, startAtEnd)(\"87654321\")",
            "Result": "{\"87\", \"654\", \"321\"}"
          }
        ]
      },
      "ReturnType": "function",
      "Parameters": {
        "length": "number",
        "startAtEnd": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "SqlExpression.SchemaFrom",
      "Documentation": {
        "Documentation.Name": "SqlExpression.SchemaFrom",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "schema": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ApproximateRowCount",
      "Documentation": {
        "Documentation.Name": "Table.ApproximateRowCount",
        "Documentation.Description": "Devolve o número aproximado de filas da táboa.",
        "Documentation.LongDescription": "Devolve o número aproximado de filas no <code>table</code>, ou un erro se a orixe de datos non admite a aproximación.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Estima o número de combinacións distintas de cidade e estado nunha táboa grande, que se pode usar como estimación de cardinalidade para as columnas. As estimacións de cardinalidade son o suficientemente importantes como para que varias orixes de datos (como SQL Server) admitan esta aproximación particular, a miúdo usando un algoritmo que se chama HyperLogLog.",
            "Code": "Table.ApproximateRowCount(Table.Distinct(Table.SelectColumns(sqlTable, {\"city\", \"state\"})))",
            "Result": "number"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnCount",
      "Documentation": {
        "Documentation.Name": "Table.ColumnCount",
        "Documentation.Description": "Devolve o número de columnas da táboa.",
        "Documentation.LongDescription": "Devolve o número de columnas da táboa <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Buscar o número de columnas na táboa.",
            "Code": "Table.ColumnCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ColumnNames",
      "Documentation": {
        "Documentation.Name": "Table.ColumnNames",
        "Documentation.Description": "Devolve os nomes de columna como unha lista.",
        "Documentation.LongDescription": "Devolve os nomes de columna da táboa <code>table</code> como unha lista de texto.",
        "Documentation.Category": "Table.Column operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar os nomes de columna da táboa.",
            "Code": "Table.ColumnNames(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "{\"CustomerID\", \"Name\", \"Phone\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.First",
      "Documentation": {
        "Documentation.Name": "Table.First",
        "Documentation.Description": "Devolve a primeira fila ou un valor predefinido especificado.",
        "Documentation.LongDescription": "Devolve a primeira fila da <code>table</code> ou un valor predefinido opcional, <code>default</code>, se a táboa está baleira.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar a primeira fila da táboa.",
            "Code": "Table.First(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          },
          {
            "Description": "Buscar a primeira fila da táboa <code>({})</code> ou devolver [a = 0, b = 0] se está baleira.",
            "Code": "Table.First(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.FirstValue",
      "Documentation": {
        "Documentation.Name": "Table.FirstValue",
        "Documentation.Description": "Devolve a primeira columna da primeira fila da táboa ou un valor predefinido especificado.",
        "Documentation.LongDescription": "Devolve a primeira columna da primeira fila da táboa <code>table</code> ou un valor predefinido especificado.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsDistinct",
      "Documentation": {
        "Documentation.Name": "Table.IsDistinct",
        "Documentation.Description": "Indica se a táboa contén só filas diferentes (non duplicadas).",
        "Documentation.LongDescription": "Indica se <code>table</code> contén só filas diferentes (non duplicadas). Devolve <code>true</code> se as filas son diferentes, se non, <code>false</code>.\r\n    Un parámetro opcional, <code>comparisonCriteria</code>, especifica en que columnas da táboa se proba a duplicación. Se non se especifica <code>comparisonCriteria</code>, próbanse todas as columnas.",
        "Documentation.Category": "Table.Membership",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a táboa é diferente.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 4, Name = \"Ringo\", Phone = \"232-1550\"]\r\n    })\r\n)",
            "Result": "true"
          },
          {
            "Description": "Determinar se a táboa é diferente na columna.",
            "Code": "Table.IsDistinct(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"],\r\n        [CustomerID = 5, Name = \"Bob\", Phone = \"232-1550\"]\r\n    }),\r\n    \"Name\"\r\n)",
            "Result": "false"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table",
        "comparisonCriteria": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.IsEmpty",
      "Documentation": {
        "Documentation.Name": "Table.IsEmpty",
        "Documentation.Description": "Indica se a táboa contén filas.",
        "Documentation.LongDescription": "Indica se a <code>table</code> contén filas. Devolve <code>true</code> se non hai filas (p. ex., a táboa está baleira), se non, <code>false</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Determinar se a táboa está baleira.",
            "Code": "Table.IsEmpty(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "false"
          },
          {
            "Description": "Determinar se a táboa <code>({})</code> está baleira.",
            "Code": "Table.IsEmpty(Table.FromRecords({}))",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Keys",
      "Documentation": {
        "Documentation.Name": "Table.Keys",
        "Documentation.Description": "Devolve as claves da táboa especificada.",
        "Documentation.LongDescription": "Devolve as claves da táboa especificada.",
        "Documentation.Category": "Table.Transformation",
        "Documentation.Examples": [
          {
            "Description": "Obter a lista de claves dunha táboa.",
            "Code": "let\r\n    table = Table.FromRecords({\r\n        [Id = 1, Name = \"Hello There\"],\r\n        [Id = 2, Name = \"Good Bye\"]\r\n    }),\r\n    tableWithKeys = Table.AddKey(table, {\"Id\"}, true),\r\n    keys = Table.Keys(tableWithKeys)\r\nin\r\n    keys",
            "Result": "{[Columns = {\"Id\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.Last",
      "Documentation": {
        "Documentation.Name": "Table.Last",
        "Documentation.Description": "Devolve a última fila ou un valor predefinido especificado.",
        "Documentation.LongDescription": "Devolve a última fila da <code>table</code> ou un valor predefinido opcional, <code>default</code>, se a táboa está baleira.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar a última fila da táboa.",
            "Code": "Table.Last(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "[CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]"
          },
          {
            "Description": "Buscar a última fila da táboa <code>({})</code> ou devolver [a = 0, b = 0] se está baleira.",
            "Code": "Table.Last(Table.FromRecords({}), [a = 0, b = 0])",
            "Result": "[a = 0, b = 0]"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "table": "table",
        "default": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.RowCount",
      "Documentation": {
        "Documentation.Name": "Table.RowCount",
        "Documentation.Description": "Devolve o número de filas da táboa.",
        "Documentation.LongDescription": "Devolve o número de filas da táboa <code>table</code>.",
        "Documentation.Category": "Table.Information",
        "Documentation.Examples": [
          {
            "Description": "Buscar o número de filas na táboa.",
            "Code": "Table.RowCount(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "3"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.SingleRow",
      "Documentation": {
        "Documentation.Name": "Table.SingleRow",
        "Documentation.Description": "Devolve a única fila na táboa.",
        "Documentation.LongDescription": "Devolve a única fila na fila <code>table</code>. Se a <code>table</code> ten máis dunha fila, xérase unha excepción.",
        "Documentation.Category": "Table.Row operations",
        "Documentation.Examples": [
          {
            "Description": "Buscar unha fila determinada na táboa.",
            "Code": "Table.SingleRow(Table.FromRecords({[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]}))",
            "Result": "[CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToColumns",
      "Documentation": {
        "Documentation.Name": "Table.ToColumns",
        "Documentation.Description": "Crea unha lista de listas aniñadas de valores de columnas dunha táboa.",
        "Documentation.LongDescription": "Crea unha lista de listas aniñadas da táboa, <code>table</code>.  Cada elemento da lista é unha lista interna que contén os valores de columna.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de valores de columna da táboa.",
            "Code": "Table.ToColumns(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"]\r\n    })\r\n)",
            "Result": "{{1, 2}, {\"Bob\", \"Jim\"}, {\"123-4567\", \"987-6543\"}}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToList",
      "Documentation": {
        "Documentation.Name": "Table.ToList",
        "Documentation.Description": "Converte unha táboa nunha lista aplicando a función de combinación especificada para cada fila de valores na táboa.",
        "Documentation.LongDescription": "Converte unha táboa nunha lista aplicando a función de combinación especificada para cada fila de valores na táboa.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Combine o texto de cada fila cunha coma.",
            "Code": "Table.ToList(\r\n    Table.FromRows({\r\n        {Number.ToText(1), \"Bob\", \"123-4567\"},\r\n        {Number.ToText(2), \"Jim\", \"987-6543\"},\r\n        {Number.ToText(3), \"Paul\", \"543-7890\"}\r\n    }),\r\n    Combiner.CombineTextByDelimiter(\",\")\r\n)",
            "Result": "{\"1,Bob,123-4567\", \"2,Jim,987-6543\", \"3,Paul,543-7890\"}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table",
        "combiner": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRecords",
      "Documentation": {
        "Documentation.Name": "Table.ToRecords",
        "Documentation.Description": "Converte unha táboa nunha lista de rexistros.",
        "Documentation.LongDescription": "Converte unha táboa, <code>table</code>, nunha lista de rexistros.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Converter a táboa nunha lista de rexistros.",
            "Code": "Table.ToRecords(\r\n    Table.FromRows(\r\n        {\r\n            {1, \"Bob\", \"123-4567\"},\r\n            {2, \"Jim\", \"987-6543\"},\r\n            {3, \"Paul\", \"543-7890\"}\r\n        },\r\n        {\"CustomerID\", \"Name\", \"Phone\"}\r\n    )\r\n)",
            "Result": "{\r\n    [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n    [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n    [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ToRows",
      "Documentation": {
        "Documentation.Name": "Table.ToRows",
        "Documentation.Description": "Crea unha lista de listas aniñadas de valores de fila dunha táboa.",
        "Documentation.LongDescription": "Crea unha lista de listas aniñadas da táboa, <code>table</code>.  Cada elemento da lista é unha lista interna que contén os valores de fila.",
        "Documentation.Category": "Table.Conversions",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de valores de fila da táboa.",
            "Code": "Table.ToRows(\r\n    Table.FromRecords({\r\n        [CustomerID = 1, Name = \"Bob\", Phone = \"123-4567\"],\r\n        [CustomerID = 2, Name = \"Jim\", Phone = \"987-6543\"],\r\n        [CustomerID = 3, Name = \"Paul\", Phone = \"543-7890\"]\r\n    })\r\n)",
            "Result": "{\r\n    {1, \"Bob\", \"123-4567\"},\r\n    {2, \"Jim\", \"987-6543\"},\r\n    {3, \"Paul\", \"543-7890\"}\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "table": "table"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewError",
      "Documentation": {
        "Documentation.Name": "Table.ViewError",
        "Documentation.Description": "Crea un rexistro de erro modificado que non activará unha alternativa cando o lance un controlador definido nunha visualización (a través de Table.View).",
        "Documentation.LongDescription": "Crea un rexistro de erro modificado desde <code>errorRecord</code> que non activará unha alternativa cando o lance un controlador definido nunha visualización (a través de Table.View).",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Table.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Table.ViewFunction",
        "Documentation.Description": "Crea unha función que pode interceptar un controlador definido nunha visualización (mediante Table.View).",
        "Documentation.LongDescription": "<p>Crea unha función de visualización baseada en <code>function</code> que se pode controlar nunha visualización creada por <code>Table.View</code>.</p>\r\n<p>O controlador <code>OnInvoke</code> de <code>Table.View</code> pode empregarse para definir un controlador para a función de visualización.</p>\r\n<p>Do mesmo modo que cos controladores para operacións integradas, se non se especifica ningún controlador <code>OnInvoke</code> ou se este non controla a función de visualización, ou se se se produce un erro no controlador, aplícase <code>function</code> sobre a visualización.</p>\r\n<p>Consulta a documentación publicada para ler una descrición máis completa de <code>Table.View</code> e as funcións de visualización personalizadas.</p>",
        "Documentation.Category": "Table.Table construction",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Clean",
      "Documentation": {
        "Documentation.Name": "Text.Clean",
        "Documentation.Description": "Devolve o valor de texto con todos os caracteres de control eliminados.",
        "Documentation.LongDescription": "Devolve un valor de texto con todos os caracteres de control de <code>text</code> eliminados.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Elimine os avances de liña e outros caracteres de control dun valor de texto.",
            "Code": "Text.Clean(\"ABC#(lf)D\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Combine",
      "Documentation": {
        "Documentation.Name": "Text.Combine",
        "Documentation.Description": "Concatena unha lista de valores de texto nun valor de texto.",
        "Documentation.LongDescription": "Devolve o resultado de combinar a lista de valores de texto, <code>texts</code>, nun único valor de texto. Ignóranse os valores <code>null</code> presentes en <code>texts</code>.\r\n     Pódese especificar un <code>separator</code> opcional usado no texto combinado final.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Combinar os valores de texto \"Ourense\" e \"OU\".",
            "Code": "Text.Combine({\"Seattle\", \"WA\"})",
            "Result": "\"SeattleWA\""
          },
          {
            "Description": "Combinar os valores de texto \"Ourense\" e \"OU\" separados por unha coma e un espazo.",
            "Code": "Text.Combine({\"Seattle\", \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          },
          {
            "Description": "Combina os valores \"Ourense\", <code>null</code> e \"OU\", separados por unha coma e un espazo. (Ten en conta que se ignora o <code>null</code>).",
            "Code": "Text.Combine({\"Seattle\", null, \"WA\"}, \", \")",
            "Result": "\"Seattle, WA\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "texts": "list",
        "separator": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.From",
      "Documentation": {
        "Documentation.Name": "Text.From",
        "Documentation.Description": "Crea un valor de texto a partir do valor indicado.",
        "Documentation.LongDescription": "Devolve a representación de texto de <code>value</code>. <code>value</code> pode ser un valor <code>number</code>, <code>date</code>, <code>time</code>, <code>datetime</code>, <code>datetimezone</code>, <code>logical</code>, <code>duration</code> ou <code>binary</code>.\r\n    Se o valor indicado é null, <code>Text.From</code> devolve null. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Crear un valor de texto a partir do número 3.",
            "Code": "Text.From(3)",
            "Result": "\"3\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.FromBinary",
      "Documentation": {
        "Documentation.Name": "Text.FromBinary",
        "Documentation.Description": "Descodifica datos a partir dun formato binario en texto.",
        "Documentation.LongDescription": "Descodifica os datos, <code>binary</code>, a partir dun formato binario en texto usando o tipo <code>encoding</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "text",
      "Parameters": {
        "binary": "binary",
        "encoding": "TextEncoding.Type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.InferNumberType",
      "Documentation": {
        "Documentation.Name": "Text.InferNumberType",
        "Documentation.Description": "Infire un tipo de número granular (Int64.Type, Double.Type etc.) dun número codificado en texto.",
        "Documentation.LongDescription": "Infire o tipo de número detallado (Int64.Type, Double.Type etc.) de <code>text</code>. Se <code>text</code> non é un número, prodúcese un erro. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"en-US\").",
        "Documentation.Category": "Text",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Length",
      "Documentation": {
        "Documentation.Name": "Text.Length",
        "Documentation.Description": "Devolve o número de caracteres.",
        "Documentation.LongDescription": "Devolve o número de caracteres no texto <code>text</code>.",
        "Documentation.Category": "Text.Information",
        "Documentation.Examples": [
          {
            "Description": "Buscar o número de caracteres que hai no texto \"Ola, Mundo\".",
            "Code": "Text.Length(\"Hello World\")",
            "Result": "11"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Lower",
      "Documentation": {
        "Documentation.Name": "Text.Lower",
        "Documentation.Description": "Converte todos os caracteres en minúsculas.",
        "Documentation.LongDescription": "Devolve o resultado de converter todos os caracteres de <code>text</code> en minúsculas. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Obter a versión en minúsculas de \"AbCd\".",
            "Code": "Text.Lower(\"AbCd\")",
            "Result": "\"abcd\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Proper",
      "Documentation": {
        "Documentation.Name": "Text.Proper",
        "Documentation.Description": "Pon en maiúscula a primeira letra de cada palabra.",
        "Documentation.LongDescription": "Devolve o resultado de pasar a maiúsculas só a primeira letra de cada palabra no valor de texto <code>text</code>. Todas as outras letras devólvense en minúsculas. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Utilizar <code>Text.Proper</code> nunha frase simple.",
            "Code": "Text.Proper(\"the QUICK BrOWn fOx jUmPs oVER tHe LAzy DoG\")",
            "Result": "\"The Quick Brown Fox Jumps Over The Lazy Dog\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Reverse",
      "Documentation": {
        "Documentation.Name": "Text.Reverse",
        "Documentation.Description": "Text.Reverse",
        "Documentation.LongDescription": "Invértese o valor <code>text</code> fornecido.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Inverta o texto \"123\".",
            "Code": "Text.Reverse(\"123\")",
            "Result": "\"321\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToBinary",
      "Documentation": {
        "Documentation.Name": "Text.ToBinary",
        "Documentation.Description": "Codifica texto nun formato binario.",
        "Documentation.LongDescription": "Codifica o valor de texto indicado, <code>text</code>, nun formato binario usando o <code>encoding</code> especificado.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "binary",
      "Parameters": {
        "text": "text",
        "encoding": "TextEncoding.Type",
        "includeByteOrderMark": "logical"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.ToList",
      "Documentation": {
        "Documentation.Name": "Text.ToList",
        "Documentation.Description": "Devolve unha lista de valores de caracteres do valor de texto indicado.",
        "Documentation.LongDescription": "Devolve unha lista de valores de caracteres do valor de texto indicado <code>text</code>.",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": [
          {
            "Description": "Crear unha lista de valores de caracteres do texto \"Ola, Mundo!\".",
            "Code": "Text.ToList(\"Hello World\")",
            "Result": "{\r\n    \"H\",\r\n    \"e\",\r\n    \"l\",\r\n    \"l\",\r\n    \"o\",\r\n    \" \",\r\n    \"W\",\r\n    \"o\",\r\n    \"r\",\r\n    \"l\",\r\n    \"d\"\r\n}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "text": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Trim",
      "Documentation": {
        "Documentation.Name": "Text.Trim",
        "Documentation.Description": "Elimina todos espazos en branco á esquerda e á dereita.",
        "Documentation.LongDescription": "Devolve o resultado de eliminar todos os espazos en branco á esquerda e á dereita do valor de texto <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Elimine os espazos en branco á esquerda e á dereita de \"     a b c d    \".",
            "Code": "Text.Trim(\"     a b c d    \")",
            "Result": "\"a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimEnd",
      "Documentation": {
        "Documentation.Name": "Text.TrimEnd",
        "Documentation.Description": "Elimina todos espazos en branco á dereita.",
        "Documentation.LongDescription": "Devolve o resultado de eliminar todos os espazos en branco á dereita do valor de texto <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Eliminar os espazos en branco á dereita de \"     a b c d    \".",
            "Code": "Text.TrimEnd(\"     a b c d    \")",
            "Result": "\"     a b c d\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.TrimStart",
      "Documentation": {
        "Documentation.Name": "Text.TrimStart",
        "Documentation.Description": "Eliminar todos espazos en branco á esquerda.",
        "Documentation.LongDescription": "Devolve o resultado de eliminar todos os espazos en branco á esquerda do valor de texto <code>text</code>.",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Eliminar os espazos en branco á esquerda de \"     a b c d    \".",
            "Code": "Text.TrimStart(\"   a b c d    \")",
            "Result": "\"a b c d    \""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "trim": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Text.Upper",
      "Documentation": {
        "Documentation.Name": "Text.Upper",
        "Documentation.Description": "Converte todos os caracteres en maiúsculas.",
        "Documentation.LongDescription": "Devolve o resultado de converter todos os caracteres de <code>text</code> en maiúsculas. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Text.Transformations",
        "Documentation.Examples": [
          {
            "Description": "Obter a versión en maiúsculas de \"aBcD\".",
            "Code": "Text.Upper(\"aBcD\")",
            "Result": "\"ABCD\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "text": "text",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.EndOfHour",
      "Documentation": {
        "Documentation.Name": "Time.EndOfHour",
        "Documentation.Description": "Devolve o final da hora.",
        "Documentation.LongDescription": "Devolve o final da hora representada por <code>dateTime</code>, incluíndo fraccións de segundo. Consérvase a información do fuso horario.\r\n      <ul>\r\n        <li><code>dateTime</code>: Un valor <code>time</code>, <code>datetime</code> ou <code>datetimezone</code> a partir do cal se calcula o final da hora.</li>\r\n      </ul>",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Obter o final da hora para o 14/05/2011 05:00:00 p.m.",
            "Code": "Time.EndOfHour(#datetime(2011, 5, 14, 17, 0, 0))",
            "Result": "#datetime(2011, 5, 14, 17, 59, 59.9999999)"
          },
          {
            "Description": "Obter o final da hora para o 17/05/2011 05:00:00 p.m -7:00.",
            "Code": "Time.EndOfHour(#datetimezone(2011, 5, 17, 5, 0, 0, -7, 0))",
            "Result": "#datetimezone(2011, 5, 17, 5, 59, 59.9999999, -7, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.From",
      "Documentation": {
        "Documentation.Name": "Time.From",
        "Documentation.Description": "Crea unha hora a partir do valor indicado.",
        "Documentation.LongDescription": "Devolve un valor <code>time</code> a partir do <code>value</code> indicado. Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").\r\nSe o valor <code>value</code> indicado é <code>null</code>, <code>Time.From</code> devolve <code>null</code>. Se o valor <code>value</code> indicado é <code>time</code>, devólvese <code>value</code>. Pódense converter a un valor <code>time</code> os valores dos seguintes tipos:\r\n      <ul>\r\n        <li><code>text</code>: valor <code>time</code> a partir da representación textual. Consulte <code>Time.FromText</code> para obter máis información.</li>\r\n        <li><code>datetime</code>: compoñente de hora de <code>value</code>.</li>\r\n        <li><code>datetimezone</code>: compoñente de hora da data e hora locais equivalente de <code>value</code>.</li>\r\n        <li><code>number</code>: valor <code>time</code> equivalente ao número de fraccións de días expresado por <code>value</code>. Se <code>value</code> é negativo ou maior ou igual que 1, devólvese un erro.</li>\r\n      </ul>\r\nSe <code>value</code> é de calquera outro tipo, devólvese un erro.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>0.7575</code> nun valor <code>time</code>.",
            "Code": "Time.From(0.7575)",
            "Result": "#time(18, 10, 48)"
          },
          {
            "Description": "Converter <code>#datetime(1899, 12, 30, 06, 45, 12)</code> nun valor <code>time</code>.",
            "Code": "Time.From(#datetime(1899, 12, 30, 06, 45, 12))",
            "Result": "#time(06, 45, 12)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "value": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.FromText",
      "Documentation": {
        "Documentation.Name": "Time.FromText",
        "Documentation.Description": "Crea unha hora a partir de formatos de hora locais e universais e personalizados.",
        "Documentation.LongDescription": "Crea un valor <code>time</code> a partir dunha representación textual, <code>text</code>. Pódese fornecer un parámetro <code>record</code> opcional, <code>options</code> para especificar propiedades adicionais. <code>record</code> pode conter os seguintes campos:\r\n<ul>\r\n   <li><code>Format</code>: Un valor de <code>text</code> que indica o formato a utilizar. Para obter máis información, visita https://go.microsoft.com/fwlink/?linkid=2180104 e https://go.microsoft.com/fwlink/?linkid=2180105. Omitir este campo ou fornecer <code>null</code> dará lugar a analizar a hora facendo o todo o posible.</li>\r\n   <li><code>Culture</code>: Cando <code>Format</code> non é nulo, <code>Culture</code> controla algúns especificadores de formato. Por exemplo, en <code>\"en-US\"</code> <code>\"tt\"</code> é <code>\"AM\" ou \"PM\"</code>, mentres que en <code>\"ar-EG\"</code> <code>\"tt\"</code> is <code>\"ص\" ou \"م\"</code>. Cando <code>Format</code> é <code>null</code>, <code>Culture</code> controla o formato predefinido a utilizar. Cando <code>Culture</code> é <code>null</code> ou se omite, utilízase <code>Culture.Current</code>.</li>\r\n</ul>\r\nPara admitir fluxos de traballo herdados, <code>options</code> tamén pode ser un valor de texto. Ten o mesmo comportamento coma se <code>options</code><code> = [Format = null, Culture = <code>options</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>\"10:12:31am\"</code> nun valor de hora.",
            "Code": "Time.FromText(\"10:12:31am\")",
            "Result": "#time(10, 12, 31)"
          },
          {
            "Description": "Converte <code>\"1012\"</code> nun valor de Hora.",
            "Code": "Time.FromText(\"1012\")",
            "Result": "#time(10, 12, 00)"
          },
          {
            "Description": "Converte <code>\"10\"</code> nun valor de Hora.",
            "Code": "Time.FromText(\"10\")",
            "Result": "#time(10, 00, 00)"
          }
        ]
      },
      "ReturnType": "time",
      "Parameters": {
        "text": "text",
        "options": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Hour",
      "Documentation": {
        "Documentation.Name": "Time.Hour",
        "Documentation.Description": "Devolve o compoñente de hora.",
        "Documentation.LongDescription": "Devolve o compoñente de hora do valor <code>time</code>, <code>datetime</code> ou <code>datetimezone</code> fornecido, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Buscar a hora en #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Hour(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "9"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Minute",
      "Documentation": {
        "Documentation.Name": "Time.Minute",
        "Documentation.Description": "Devolve o compoñente de minuto.",
        "Documentation.LongDescription": "Devolve o compoñente de minuto do valor <code>time</code>, <code>datetime</code> ou <code>datetimezone</code> fornecido, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Buscar o minuto en #datetime(2011, 12, 31, 9, 15, 36).",
            "Code": "Time.Minute(#datetime(2011, 12, 31, 9, 15, 36))",
            "Result": "15"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.Second",
      "Documentation": {
        "Documentation.Name": "Time.Second",
        "Documentation.Description": "Devolve o compoñente de segundo.",
        "Documentation.LongDescription": "Devolve o compoñente de segundo do valor <code>time</code>, <code>datetime</code> ou <code>datetimezone</code> fornecido, <code>dateTime</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Busca o segundo valor dun valor de dataHora.",
            "Code": "Time.Second(#datetime(2011, 12, 31, 9, 15, 36.5))",
            "Result": "36.5"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.StartOfHour",
      "Documentation": {
        "Documentation.Name": "Time.StartOfHour",
        "Documentation.Description": "Devolve o inicio da hora.",
        "Documentation.LongDescription": "Devolve o inicio da hora representado por <code>dateTime</code>.\r\n    <code>dateTime</code> debe ser un valor de <code>time</code>, <code>datetime</code> ou <code>datetimezone</code>.",
        "Documentation.Category": "Date",
        "Documentation.Examples": [
          {
            "Description": "Busca o inicio da hora do 10 de outubro de 2011 ás 08:10:32.",
            "Code": "Time.StartOfHour(#datetime(2011, 10, 10, 8, 10, 32))",
            "Result": "#datetime(2011, 10, 10, 8, 0, 0)"
          }
        ]
      },
      "ReturnType": "any",
      "Parameters": {
        "dateTime": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToRecord",
      "Documentation": {
        "Documentation.Name": "Time.ToRecord",
        "Documentation.Description": "Devolve un rexistro que contén partes do valor de hora.",
        "Documentation.LongDescription": "Devolve un rexistro que contén as partes do valor Time indicado, <code>time</code>.\r\n <ul>\r\n        <li><code>time</code>: un valor <code>time</code> a partir do que se debe calcular o rexistro das súas partes.</li>\r\n      </ul>",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Converter o valor <code>#time(11, 56, 2)</code> nun rexistro que contén os valores de hora.",
            "Code": "Time.ToRecord(#time(11, 56, 2))",
            "Result": "[\r\n      Hour = 11,\r\n      Minute = 56,\r\n      Second = 2\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "time": "time"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Time.ToText",
      "Documentation": {
        "Documentation.Name": "Time.ToText",
        "Documentation.Description": "Devolve unha representación textual do valor de hora.",
        "Documentation.LongDescription": "Devolve unha representación textual de <code>time</code>. Pódese fornecer un parámetro <code>record</code> opcional, <code>options</code>, para especificar propiedades adicionais. <code>culture</code> utilízase só para fluxos de traballo herdados. O <code>record</code> pode conter os seguintes campos:\r\n<ul>\r\n   <li><code>Format</code>: Un valor de <code>text</code> que indica o formato a utilizar. Para obter máis información, visita https://go.microsoft.com/fwlink/?linkid=2180104 e https://go.microsoft.com/fwlink/?linkid=2180105. Omitir este campo ou fornecer <code>null</code> dará lugar a formatar a data usando o valor predeterminado definido por <code>Culture</code>.</li>\r\n   <li><code>Culture</code>: Cando <code>Format</code> non é nulo, <code>Culture</code> controla algúns especificadores de formato. Por exemplo, en <code>\"en-US\"</code> <code>\"tt\"</code> é <code>\"AM\" ou \"PM\"</code>, mentres que en <code>\"ar-EG\"</code> <code>\"tt\"</code> is <code>\"ص\" ou \"م\"</code>. Cando <code>Format</code> é <code>null</code>, <code>Culture</code> controla o formato predefinida que se usa. Cando <code>Culture</code> é <code>null</code> ou se omite, úsase <code>Culture.Current</code>.</li>\r\n</ul>\r\nPara admitir fluxos de traballo herdados, <code>options</code> e <code>culture</code> tamén poden ser valores de texto. Ten o mesmo comportamento coma se <code>options</code><code> = [Format = <code>options</code>, Culture = <code>culture</code>]</code>.",
        "Documentation.Category": "Time",
        "Documentation.Examples": [
          {
            "Description": "Converter <code>#time(01, 30, 25)</code> nun valor de <code>text</code>. <i>O resultado pode variar dependendo da cultura actual.</i>",
            "Code": "Time.ToText(#time(11, 56, 2))",
            "Result": "\"11:56 AM\""
          },
          {
            "Description": "Converter usando un formato personalizado e a cultura alemá.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"hh:mm\", Culture=\"de-DE\"])",
            "Result": "\"11:56\""
          },
          {
            "Description": "Converter usando o formato de hora estándar.",
            "Code": "Time.ToText(#time(11, 56, 2), [Format=\"T\", Culture=\"de-DE\"])",
            "Result": "\"11:56:02\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "time": "time",
        "options": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Troux.TestConnection",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Twilio.URL",
      "Documentation": {},
      "ReturnType": "any",
      "Parameters": {
        "url": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ClosedRecord",
      "Documentation": {
        "Documentation.Name": "Type.ClosedRecord",
        "Documentation.Description": "Devolve unha versión pechada do tipo de rexistro fornecido (ou o mesmo tipo se xa está pechado).",
        "Documentation.LongDescription": "Devolve unha versión pechada do <code>rexistro</code> <code>type</code> facilitado (ou o mesmo tipo se xa está pechado).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Crear unha versión pechada de <code>tipo [ A = number,…]</code>.",
            "Code": "Type.ClosedRecord(type [A = number, ...])",
            "Result": "type [A = number]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Facets",
      "Documentation": {
        "Documentation.Name": "Type.Facets",
        "Documentation.Description": "Devolve as facetas dun tipo.",
        "Documentation.LongDescription": "Devolve un rexistro que contén as facetas de <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionParameters",
        "Documentation.Description": "Devolve un rexistro con valores de campo establecidos no nome dos parámetros dun tipo de función e os seus valores establecidos nos seus tipos correspondentes.",
        "Documentation.LongDescription": "Devolve un rexistro con valores de campo establecidos no nome dos parámetros <code>type</code>, e os seus valores establecidos nos seus tipos correspondentes.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Atope os tipos de parámetros para a función <code>(x como número, y como texto)</code>.",
            "Code": "Type.FunctionParameters(type function (x as number, y as text) as any)",
            "Result": "[x = type number, y = type text]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionRequiredParameters",
      "Documentation": {
        "Documentation.Name": "Type.FunctionRequiredParameters",
        "Documentation.Description": "Devolve un número que indica o número mínimo de parámetros requiridos para invocar o tipo de función.",
        "Documentation.LongDescription": "Devolve un número que indica o número mínimo de parámetros requiridos para invocar a entrada <code>type</code> da función.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Busque o número de parámetros requiridos para a función <code>(x como número, y opcional como texto)</code>.",
            "Code": "Type.FunctionRequiredParameters(type function (x as number, optional y as text) as any)",
            "Result": "1"
          }
        ]
      },
      "ReturnType": "number",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.FunctionReturn",
      "Documentation": {
        "Documentation.Name": "Type.FunctionReturn",
        "Documentation.Description": "Devolve un tipo devolto por un tipo de función.",
        "Documentation.LongDescription": "Devolve un tipo devolto por unha función <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Busque o tipo de retorno de <code>() como calquera)</code>.",
            "Code": "Type.FunctionReturn(type function () as any)",
            "Result": "type any"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsNullable",
      "Documentation": {
        "Documentation.Name": "Type.IsNullable",
        "Documentation.Description": "Devolve o valor true se un tipo é anulable, do contrario, é falso.",
        "Documentation.LongDescription": "Devolve <code>verdadeiro</code> se un tipo é <code>anulable</code>; do contrario, devolve <code>falso</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Determine se <code>número</code> é anulable.",
            "Code": "Type.IsNullable(type number)",
            "Result": "false"
          },
          {
            "Description": "Determine se <code>número de tipo anulable</code> é anulable.",
            "Code": "Type.IsNullable(type nullable number)",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.IsOpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.IsOpenRecord",
        "Documentation.Description": "Devolve se un tipo de rexistro é aberto.",
        "Documentation.LongDescription": "Devolve unha <code>lóxica</code> que indica se un rexistro <code>type</code> é aberto.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Determine se o rexistro <code>tipo [ A = number, ...]</code> está aberto.",
            "Code": "Type.IsOpenRecord(type [A = number, ...])",
            "Result": "true"
          }
        ]
      },
      "ReturnType": "logical",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.ListItem",
      "Documentation": {
        "Documentation.Name": "Type.ListItem",
        "Documentation.Description": "Devolve un tipo de elemento dun tipo de lista.",
        "Documentation.LongDescription": "Devolve un tipo de elemento dunha lista <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Busque o tipo de elemento da lista <code>{number}</code>.",
            "Code": "Type.ListItem(type {number})",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.NonNullable",
      "Documentation": {
        "Documentation.Name": "Type.NonNullable",
        "Documentation.Description": "Devolve o tipo non anulable dun tipo.",
        "Documentation.LongDescription": "Devolve o tipo non <code>anulable</code> de <code>type</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Devolver o tipo non anulable do <code>número de tipo anulable</code>.",
            "Code": "Type.NonNullable(type nullable number)",
            "Result": "type number"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.OpenRecord",
      "Documentation": {
        "Documentation.Name": "Type.OpenRecord",
        "Documentation.Description": "Devolve unha versión aberta do tipo de rexistro dado (ou o mesmo tipo, se xa está aberto).",
        "Documentation.LongDescription": "Devolve unha versión aberta do <code>rexistro</code> <code>type</code> dado (ou o mesmo tipo, se xa está aberto).",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Crear unha versión aberta de <code>tipo [ A = number]</code>.",
            "Code": "Type.OpenRecord(type [A = number])",
            "Result": "type [A = number, ...]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.RecordFields",
      "Documentation": {
        "Documentation.Name": "Type.RecordFields",
        "Documentation.Description": "Devolve un rexistro no que se describen os campos dun tipo de rexistro con cada campo do tipo de rexistro devolto que ten un nome e un valor correspondentes.",
        "Documentation.LongDescription": "Devolve un rexistro no que se describen os campos dun rexistro <code>type</code>. Cada campo do tipo de rexistro devolto ten un nome correspondente e un valor en forma de rexistro <code>[ Type = type, Optional = logical ]</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Busque o nome e valor do rexistro <code>[ A = number, optional B = any]</code>.",
            "Code": "Type.RecordFields(type [A = number, optional B = any])",
            "Result": "[\r\n    A = [Type = type number, Optional = false],\r\n    B = [Type = type any, Optional = true]\r\n]"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "type": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableKeys",
      "Documentation": {
        "Documentation.Name": "Type.TableKeys",
        "Documentation.Description": "Devolve a lista posiblemente baleira de claves para o tipo de táboa indicado.",
        "Documentation.LongDescription": "Devolve a lista posiblemente baleira de claves para o tipo de táboa indicado.<br>\r\n    <br>\r\n    Cada clave defínese mediante un rexistro no seguinte formulario:\r\n    <ul>\r\n      <li>\r\n        <code>Columnas</code>: lista dos nomes de columnas que definen a clave\r\n      </li>\r\n      <li>\r\n        <code>Primaria</code>: <code>true</code> se é a clave principal da táboa, se non, <code>false</code>\r\n      </li>\r\n    </ul>\r\n    ",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Devolve a información de clave para un tipo de táboa.",
            "Code": "let\r\n    BaseType = type table [ID = number, Name = text],\r\n    AddKey = Type.AddTableKey(BaseType, {\"ID\"}, true),\r\n    DetailsOfKeys = Type.TableKeys(AddKey)\r\nin\r\n    DetailsOfKeys",
            "Result": "{[Columns = {\"ID\"}, Primary = true]}"
          }
        ]
      },
      "ReturnType": "list",
      "Parameters": {
        "tableType": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.TableRow",
      "Documentation": {
        "Documentation.Name": "Type.TableRow",
        "Documentation.Description": "Devolve o tipo de fila do tipo de táboa.",
        "Documentation.LongDescription": "Devolve o tipo de fila do tipo de táboa especificado. O resultado sempre vai ser un tipo de rexistro.",
        "Documentation.Category": "Type",
        "Documentation.Examples": [
          {
            "Description": "Devolve a información do tipo de fila dunha táboa simple.",
            "Code": "let\r\n    tableRowType = Type.TableRow(Value.Type(#table({\"Column1\"}, {})))\r\nin\r\n    Type.RecordFields(tableRowType)",
            "Result": "[Column1 = [Type = type any, Optional = false]]"
          }
        ]
      },
      "ReturnType": "type",
      "Parameters": {
        "table": "type"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Type.Union",
      "Documentation": {
        "Documentation.Name": "Type.Union",
        "Documentation.Description": "Devolve a unión dunha lista de tipos.",
        "Documentation.LongDescription": "Devolve a unión dos tipos en <code>types</code>.",
        "Documentation.Category": "Type",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "types": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.BuildQueryString",
      "Documentation": {
        "Documentation.Name": "Uri.BuildQueryString",
        "Documentation.Description": "Ensamble un rexistro nunha cadea de consulta de URI.",
        "Documentation.LongDescription": "Ensamble o rexistro <code>query</code> nunha cadea de consulta de URI, evitando caracteres segundo resulte necesario.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Codifique unha cadea de consulta que conteña varios caracteres especiais.",
            "Code": "Uri.BuildQueryString([a = \"1\", b = \"+$\"])",
            "Result": "\"a=1&b=%2B%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "query": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.EscapeDataString",
      "Documentation": {
        "Documentation.Name": "Uri.EscapeDataString",
        "Documentation.Description": "Codifica caracteres especiais de acordo con RFC 3986.",
        "Documentation.LongDescription": "Codifica caracteres especiais na entrada <code>data</code> de acordo coas regras de RFC 3986.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Codifique os caracteres especiais en \"+money$\".",
            "Code": "Uri.EscapeDataString(\"+money$\")",
            "Result": "\"%2Bmoney%24\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "data": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Uri.Parts",
      "Documentation": {
        "Documentation.Name": "Uri.Parts",
        "Documentation.Description": "Devolve as partes do URI de entrada absoluto como un rexistro.",
        "Documentation.LongDescription": "Devolve as partes do <code>absoluteUri</code> de entrada como un rexistro, que conteñen valores como Esquema, Computador servidor, Porto, Camiño, Consulta, Fragmento, Nome de usuario e Contrasinal.",
        "Documentation.Category": "Uri",
        "Documentation.Examples": [
          {
            "Description": "Buscar as partes do URI absoluto \"www.adventure-works.com\".",
            "Code": "Uri.Parts(\"www.adventure-works.com\")",
            "Result": "[\r\n    Scheme = \"http\",\r\n    Host = \"www.adventure-works.com\",\r\n    Port = 80,\r\n    Path = \"/\",\r\n    Query = [],\r\n    Fragment = \"\",\r\n    UserName = \"\",\r\n    Password = \"\"\r\n]"
          },
          {
            "Description": "Descodifica unha cadea parcialmente codificada.",
            "Code": "let\r\n    UriUnescapeDataString = (data as text) as text => Uri.Parts(\"http://contoso?a=\" & data)[Query][a]\r\nin\r\n    UriUnescapeDataString(\"%2Bmoney%24\")",
            "Result": "\"+money$\""
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "absoluteUri": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.AccountContents",
      "Documentation": {
        "Documentation.Description": "Introduza o URL do seu servizo de Azure DevOps Analytics.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.AccountContents",
        "Documentation.Name": "VSTS.AccountContents",
        "Documentation.LongDescription": "Devolve o contido descargado do URL do servizo de Azure DevOps Analytics como un valor binario. A función usa credenciais distintas para organizacións diferentes."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "VSTS.Contents",
      "Documentation": {
        "Documentation.Description": "Introduza o URL do seu servizo de Azure DevOps Analytics.",
        "Documentation.DisplayName": "VSTS",
        "Documentation.Caption": "VSTS.Contents",
        "Documentation.Name": "VSTS.Contents",
        "Documentation.LongDescription": "Devolve o contido descargado do URL do servizo de Azure DevOps Analytics como un valor binario. Esta función usa credenciais globais para todas as organizacións accesibles."
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Alternates",
      "Documentation": {
        "Documentation.Name": "Value.Alternates",
        "Documentation.Description": "Expresa plans de consulta alternativos.",
        "Documentation.LongDescription": "Expresa plans de consulta alternativos cunha expresión do plan de consulta obtida a través de Value.Expression(Value.Optimize(...)). Non está concibido para outros usos.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "alternates": "list"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Expression",
      "Documentation": {
        "Documentation.Name": "Value.Expression",
        "Documentation.Description": "Devolve unha árbore de sintaxe abstracta (AST) que representa a expresión do valor.",
        "Documentation.LongDescription": "Devolve unha árbore de sintaxe abstracta (AST) que representa a expresión do valor",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Firewall",
      "Documentation": {
        "Documentation.Name": "Value.Firewall",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "key": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.FromText",
      "Documentation": {
        "Documentation.Name": "Value.FromText",
        "Documentation.Description": "Crea un valor fortemente escrito a partir dunha representación textual.",
        "Documentation.LongDescription": "Descodifica un valor a partir dunha representación textual, <code>text</code> e interprétao como un valor cun tipo apropiado.\r\n    <code>Value.FromText</code> toma un valor de texto e devolve un número, un valor lóxico, un valor nulo, un valor de data e hora, un valor de duración ou un valor de texto. O valor de texto baleiro interprétase como un valor nulo.\r\n    Tamén se pode fornecer unha <code>culture</code> opcional (por exemplo, \"gl-ES\").",
        "Documentation.Category": "Text.Conversions from and to text",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "text": "any",
        "culture": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Lineage",
      "Documentation": {
        "Documentation.Name": "Value.Lineage",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Metadata",
      "Documentation": {
        "Documentation.Name": "Value.Metadata",
        "Documentation.Description": "Devolve un rexistro que contén metadatos da entrada.",
        "Documentation.LongDescription": "Devolve un rexistro que contén metadatos da entrada.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Optimize",
      "Documentation": {
        "Documentation.Name": "Value.Optimize",
        "Documentation.Description": "Sinala Value.Expression que vai devolver a expresión optimizada dun valor.",
        "Documentation.LongDescription": "Cando se usa en Value.Expression, se <code>value</code> representa unha consulta que se pode optimizar, esta función indica que se debe devolver a expresión optimizada. No caso contrario, <code>value</code> pasará sen ningún efecto.",
        "Documentation.Category": "Expression",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.RemoveMetadata",
      "Documentation": {
        "Documentation.Name": "Value.RemoveMetadata",
        "Documentation.Description": "Descobre a entrada de metadatos.",
        "Documentation.LongDescription": "Descobre a entrada de metadatos.",
        "Documentation.Category": "Metadata",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any",
        "metaValue": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ResourceExpression",
      "Documentation": {
        "Documentation.Name": "Value.ResourceExpression",
        "Documentation.Description": "Value.ResourceExpression",
        "Documentation.LongDescription": "Value.ResourceExpression",
        "Documentation.Category": "",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.Type",
      "Documentation": {
        "Documentation.Name": "Value.Type",
        "Documentation.Description": "Devolve o tipo do valor indicado.",
        "Documentation.LongDescription": "Devolve o tipo do valor indicado.",
        "Documentation.Category": "Values",
        "Documentation.Examples": []
      },
      "ReturnType": "type",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.VersionIdentity",
      "Documentation": {
        "Documentation.Name": "Value.VersionIdentity",
        "Documentation.Description": "Value.VersionIdentity",
        "Documentation.LongDescription": "Value.VersionIdentity",
        "Documentation.Category": "Action",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "value": "any"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewError",
      "Documentation": {
        "Documentation.Name": "Value.ViewError",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "record",
      "Parameters": {
        "errorRecord": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Value.ViewFunction",
      "Documentation": {
        "Documentation.Name": "Value.ViewFunction",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "function",
      "Parameters": {
        "function": "function"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Variable.Value",
      "Documentation": {
        "Documentation.Name": "Variable.Value",
        "Documentation.Description": "Esta función está pensada só para uso interno.",
        "Documentation.LongDescription": "Esta función está pensada só para uso interno.",
        "Documentation.Category": "Values.Implementation",
        "Documentation.Examples": []
      },
      "ReturnType": "any",
      "Parameters": {
        "identifier": "text"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.BrowserContents",
      "Documentation": {
        "Documentation.Name": "Web.BrowserContents",
        "Documentation.Description": "Devolve o HTML do URL especificado, tal e como se vería nun explorador web.",
        "Documentation.LongDescription": "Devolve o HTML para o <code>url</code> que se especificou, tal e como o visualiza un explorador web. Pódese fornecer un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos: \r\n     <ul>\r\n        <li><code>ApiKeyName</code>: Se o sitio de destino ten unha noción de clave API, este parámetro pódese usar para especificar o nome (non o valor) do parámetro clave que se debe usar no URL. O valor real da chave proporciónase na credencial.</li>\r\n        <li><code>WaitFor</code>: especifica unha condición para esperar antes de descargar o HTML, ademais de esperar a que se cargue a páxina (o que sempre se fai). Pode ser un rexistro que contén campos Tempo de espera e/ou Selector. Se só se especifica un tempo de espera, a función agardará o tempo especificado antes de descargar o HTML. Se se especifican tanto un selector como o tempo de espera, e o tempo de espera transcorre antes de que o selector exista na páxina, xerarase un erro. Se se especifica un selector sen tempo de espera, aplícase un tempo de espera predeterminado de 30 segundos.</li>\r\n      </ul>\r\n    ",
        "Documentation.Category": "Acceso ao datos",
        "Documentation.Examples": [
          {
            "Description": "Devolve o código HTML de https://microsoft.com.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\")",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Devolve o código HTML de https://microsoft.com despois de agardar a que exista un selector de CSS.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\"]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Devolve o código HTML de https://microsoft.com despois de agardar dez segundos.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          },
          {
            "Description": "Devolve o código HTML de https://microsoft.com despois de agardar ata dez segundos a que exista un selector de CSS.",
            "Code": "Web.BrowserContents(\"https://microsoft.com\", [WaitFor = [Selector = \"div.ready\", Timeout = #duration(0,0,0,10)]])",
            "Result": "\"<!DOCTYPE html><html xmlns=...\""
          }
        ]
      },
      "ReturnType": "text",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Contents",
      "Documentation": {
        "Documentation.Name": "Web.Contents",
        "Documentation.Description": "Devolve o contido descargado do enderezo URL como binario.",
        "Documentation.LongDescription": "Devolve o contido descargado do <code>url</code> como binario. Pódese fornecer un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>Query</code> : Engada par&#225;metros de consulta mediante programaci&#243;n ao URL sen ter que preocuparse dos caracteres de escape.</li>\r\n<li><code>ApiKeyName</code> : Se o sitio de destino ten unha noci&#243;n dunha clave da API, este par&#225;metro p&#243;dese utilizar para especificar o nome (non o valor) do par&#225;metro clave que se debe usar no enderezo URL. O valor da clave real proporci&#243;nase na credencial.</li>\r\n<li><code>Headers</code> : Ao especificar este valor como un rexistro, forneceranse cabeceiras adicionais para unha solicitude HTTP.</li>\r\n<li><code>Timeout</code> : Ao especificar este valor como unha duraci&#243;n, modificarase o tempo de espera da solicitude HTTP. O valor predefinido &#233; 100&#160;segundos.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Ao especificar este valor como unha lista, exclu&#237;ranse estas claves de cabeceira HTTP do c&#225;lculo para o almacenamento en cach&#233; de datos.</li>\r\n<li><code>IsRetry</code> : Ao especificar este valor l&#243;xico como verdadeiro, ignoraranse as respostas existentes na cach&#233; ao obter datos.</li>\r\n<li><code>ManualStatusHandling</code> : Ao especificar este valor como unha lista, evitar&#225; o tratamento integrado de solicitudes HTTP cuxa resposta conte&#241;a un destes c&#243;digos de estado.</li>\r\n<li><code>RelativePath</code> : Ao especificar este valor como texto, an&#233;xase ao URL base antes de realizar a solicitude.</li>\r\n<li><code>Content</code> : Ao especificar este valor, modif&#237;case a solicitude web de GET a POST, usando o valor da opci&#243;n como contido de POST.</li>\r\n</ul>\r\n\r\n    A solicitude HTTP realízase como GET (cando non se especifica contido) ou POST (cando hai contido). As solicitudes de POST só poden realizarse de forma anónima.\r\n    <br>\r\n    As cabeceiras da contestación HTTP están dispoñibles como metadatos no resultado binario. Fóra dun contexto de conector de datos personalizado, só está dispoñible un subconxunto de cabeceiras de resposta (por motivos de seguranza).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Recuperar os contidos de <code>\"https://bing.com/search?q=Power+Query\"</code> usando as opcións de RelativePath e consulta. Estas opcións poden utilizarse para consultar dinamicamente un URL de base estática.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Contents(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "binary"
          },
          {
            "Description": "Facer un POST en contra dun URL, pasando unha carga JSON binaria e analizando a resposta como JSON.",
            "Code": "let\r\n    url = ...,\r\n    headers = [#\"Content-Type\" = \"application/json\"],\r\n    postData = Json.FromValue([x = 235.7, y = 41.53]),\r\n    response = Web.Contents(\r\n        url,\r\n        [\r\n            Headers = headers,\r\n            Content = postData\r\n        ]\r\n    ),\r\n    jsonResponse = Json.Document(response)\r\nin\r\n    jsonResponse",
            "Result": "table"
          },
          {
            "Description": "Conéctate a un URL seguro que acepte unha clave de autenticación como parte da súa cadea de consulta. En lugar de inserir directamente a clave secreta en M (que podería supoñer un risco de seguranza), \r\n    pode fornecerse a clave de forma segura especificando o seu nome (non o seu valor) en M, escollendo a autenticación mediante a API web e indicando o valor da clave como a credencial da API web.\r\n    Cando se usa este método, o exemplo seguinte xerará unha solicitude para <code>\"https://contoso.com/api/customers/get?api_key=******\"</code>.",
            "Code": "Web.Contents(\"https://contoso.com/api/customers/get\", [ApiKeyName=\"api_key\"])",
            "Result": "binary"
          }
        ]
      },
      "ReturnType": "binary",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    },
    {
      "Name": "Web.Headers",
      "Documentation": {
        "Documentation.Name": "Web.Headers",
        "Documentation.Description": "Devolve as cabeceiras HTTP descargadas do URL como un valor de rexistro.",
        "Documentation.LongDescription": "Devolve as cabeceiras descargadas de <code>url</code> como rexistro. Pódese fornecer un parámetro de rexistro opcional, <code>options</code>, para especificar propiedades adicionais. O rexistro pode conter os seguintes campos:\r\n    <ul>\r\n<li><code>Query</code> : Engada par&#225;metros de consulta mediante programaci&#243;n ao URL sen ter que preocuparse dos caracteres de escape.</li>\r\n<li><code>ApiKeyName</code> : Se o sitio de destino ten unha noci&#243;n dunha clave da API, este par&#225;metro p&#243;dese utilizar para especificar o nome (non o valor) do par&#225;metro clave que se debe usar no enderezo URL. O valor da clave real proporci&#243;nase na credencial.</li>\r\n<li><code>Headers</code> : Ao especificar este valor como un rexistro, forneceranse cabeceiras adicionais para unha solicitude HTTP.</li>\r\n<li><code>Timeout</code> : Ao especificar este valor como unha duraci&#243;n, modificarase o tempo de espera da solicitude HTTP. O valor predefinido &#233; 100&#160;segundos.</li>\r\n<li><code>ExcludedFromCacheKey</code> : Ao especificar este valor como unha lista, exclu&#237;ranse estas claves de cabeceira HTTP do c&#225;lculo para o almacenamento en cach&#233; de datos.</li>\r\n<li><code>IsRetry</code> : Ao especificar este valor l&#243;xico como verdadeiro, ignoraranse as respostas existentes na cach&#233; ao obter datos.</li>\r\n<li><code>ManualStatusHandling</code> : Ao especificar este valor como unha lista, evitar&#225; o tratamento integrado de solicitudes HTTP cuxa resposta conte&#241;a un destes c&#243;digos de estado.</li>\r\n<li><code>RelativePath</code> : Ao especificar este valor como texto, an&#233;xase ao URL base antes de realizar a solicitude.</li>\r\n</ul>\r\n\r\n    A solicitude HTTP realízase co método HEAD. Fóra dun contexto de conector de datos personalizado, só está dispoñible un subconxunto de cabeceiras de contestación (por motivos de seguranza).\r\n    ",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": [
          {
            "Description": "Recupera as cabeceiras HTTP para <code>\"https://bing.com/search?q=Power+Query\"</code> mediante as opcións RelativePath e Consulta.",
            "Code": "let\r\n    searchText = \"Power Query\"\r\nin\r\n    Web.Headers(\r\n        \"https://www.bing.com\",\r\n        [\r\n            RelativePath = \"search\",\r\n            Query = [q = searchText]\r\n        ]\r\n    )",
            "Result": "([\r\n    #\"Cache-Control\" = \"private, max-age=0\",\r\n    #\"Content-Encoding\" = \"gzip\",\r\n    #\"Content-Length\" = \"0\",\r\n    #\"Content-Type\" = \"text/html; charset=utf-8\",\r\n    Date = \"Tue, 14 Dec 2021 16:57:25 GMT\",\r\n    Expires = \"Tue, 14 Dec 2021 16:56:25 GMT\",\r\n    Vary = \"Accept-Encoding\"\r\n]\r\nmeta [\r\n    Response.Status = 200\r\n])"
          }
        ]
      },
      "ReturnType": "record",
      "Parameters": {
        "url": "text",
        "options": "record"
      },
      "RequiredParameters": "1"
    }
  ],
  "enumerations": [
    {
      "Name": "AccessControlEntry.ConditionContextType",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.ConditionContextType",
        "Documentation.Description": "O contexto de autorización no que se avalía unha condición de entrada de control de acceso (ACE).",
        "Documentation.LongDescription": "O contexto de autorización no que se avalía unha condición de entrada de control de acceso (ACE).",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlEntry.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlEntry.Type",
        "Documentation.Description": "Unha táboa de entradas de control de acceso (ACE).",
        "Documentation.LongDescription": "Unha táboa ordenada de entradas de control de acceso (ACE) que representa regras de autorización. Cada fila avalíase no contexto de autorización actual (en orde) e a primeira fila para a que a expresión <code>Condition</code> devolve true determina que regra se aplica. A columna <code>Action</code> representa o tipo de acción ao que se aplica a regra. A columna <code>AccessControlKind</code> determina se o acceso debería estar permitido ou non para a acción.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "AccessControlKind.Type",
      "Documentation": {
        "Documentation.Name": "AccessControlKind.Type",
        "Documentation.Description": "Especifica o tipo de control de acceso.",
        "Documentation.LongDescription": "Especifica o tipo de control de acceso.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Any.Type",
      "Documentation": {
        "Documentation.Name": "Any.Type",
        "Documentation.Description": "O tipo que representa todos os valores.",
        "Documentation.LongDescription": "O tipo que representa todos os valores.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Binary.Type",
      "Documentation": {
        "Documentation.Name": "Binary.Type",
        "Documentation.Description": "O tipo que representa todos os valores binarios.",
        "Documentation.LongDescription": "O tipo que representa todos os valores binarios.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "BinaryEncoding.Type",
      "Documentation": {
        "Documentation.Name": "BinaryEncoding.Type",
        "Documentation.Description": "Especifica o tipo de codificación binaria.",
        "Documentation.LongDescription": "Especifica o tipo de codificación binaria.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "BinaryOccurrence.Type",
      "Documentation": {
        "Documentation.Name": "BinaryOccurrence.Type",
        "Documentation.Description": "Especifica cantas veces se espera que apareza o elemento no grupo.",
        "Documentation.LongDescription": "Especifica cantas veces se espera que apareza o elemento no grupo.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "BufferMode.Type",
      "Documentation": {
        "Documentation.Name": "BufferMode.Type",
        "Documentation.Description": "Describe o tipo de almacenamento en búfer que se vai realizar.",
        "Documentation.LongDescription": "Describe o tipo de almacenamento en búfer que se vai realizar.",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Byte.Type",
      "Documentation": {
        "Documentation.Name": "Byte.Type",
        "Documentation.Description": "O tipo que representa todos os bytes.",
        "Documentation.LongDescription": "O tipo que representa todos os bytes.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ByteOrder.Type",
      "Documentation": {
        "Documentation.Name": "ByteOrder.Type",
        "Documentation.Description": "Especifica a orde de bytes.",
        "Documentation.LongDescription": "Especifica a orde de bytes.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Character.Type",
      "Documentation": {
        "Documentation.Name": "Character.Type",
        "Documentation.Description": "O tipo que representa todos os caracteres.",
        "Documentation.LongDescription": "O tipo que representa todos os caracteres.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Compression.Type",
      "Documentation": {
        "Documentation.Name": "Compression.Type",
        "Documentation.Description": "Especifica o tipo de compresión.",
        "Documentation.LongDescription": "Especifica o tipo de compresión.",
        "Documentation.AllowedValues": [
          -1,
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "CsvStyle.Type",
      "Documentation": {
        "Documentation.Name": "CsvStyle.Type",
        "Documentation.Description": "Especifica a significancia das comiñas en documentos CSV.",
        "Documentation.LongDescription": "Especifica a significancia das comiñas en documentos CSV.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Currency.Type",
      "Documentation": {
        "Documentation.Name": "Currency.Type",
        "Documentation.Description": "O tipo que representa un valor moeda.",
        "Documentation.LongDescription": "O tipo que representa un valor moeda.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Date.Type",
      "Documentation": {
        "Documentation.Name": "Date.Type",
        "Documentation.Description": "O tipo que representa todos os valores de data.",
        "Documentation.LongDescription": "O tipo que representa todos os valores de data.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTime.Type",
      "Documentation": {
        "Documentation.Name": "DateTime.Type",
        "Documentation.Description": "O tipo que representa todos os valores de data e hora sen un fuso horario asociado.",
        "Documentation.LongDescription": "O tipo que representa todos os valores de data e hora sen un fuso horario asociado.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "DateTimeZone.Type",
      "Documentation": {
        "Documentation.Name": "DateTimeZone.Type",
        "Documentation.Description": "O tipo que representa todos os valores de data e hora con respecto a un fuso horario.",
        "Documentation.LongDescription": "O tipo que representa todos os valores de data e hora con respecto a un fuso horario.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Day.Type",
      "Documentation": {
        "Documentation.Name": "Day.Type",
        "Documentation.Description": "Especifica un día da semana.",
        "Documentation.LongDescription": "Especifica un día da semana.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Decimal.Type",
      "Documentation": {
        "Documentation.Name": "Decimal.Type",
        "Documentation.Description": "O tipo que representa o número decimal de coma fixa.",
        "Documentation.LongDescription": "O tipo que representa o número decimal de coma fixa.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Double.Type",
      "Documentation": {
        "Documentation.Name": "Double.Type",
        "Documentation.Description": "O tipo que representa o número de coma flutuante de dobre precisión.",
        "Documentation.LongDescription": "O tipo que representa o número de coma flutuante de dobre precisión.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Duration.Type",
      "Documentation": {
        "Documentation.Name": "Duration.Type",
        "Documentation.Description": "O tipo que representa todos os valores de duración",
        "Documentation.LongDescription": "O tipo que representa todos os valores de duración",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ExtraValues.Type",
      "Documentation": {
        "Documentation.Name": "ExtraValues.Type",
        "Documentation.Description": "Especifica a acción esperada para os valores adicionais nunha fila que contén máis columnas das esperadas.",
        "Documentation.LongDescription": "Especifica a acción esperada para os valores adicionais nunha fila que contén máis columnas das esperadas.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Function.Type",
      "Documentation": {
        "Documentation.Name": "Function.Type",
        "Documentation.Description": "O tipo que representa todas as funcións.",
        "Documentation.LongDescription": "O tipo que representa todas as funcións.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "GroupKind.Type",
      "Documentation": {
        "Documentation.Name": "GroupKind.Type",
        "Documentation.Description": "Especifica o tipo de agrupamento.",
        "Documentation.LongDescription": "Poden producirse varios grupos locais co mesmo valor clave, pero só se produce un único grupo global para un valor clave determinado.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Guid.Type",
      "Documentation": {
        "Documentation.Name": "Guid.Type",
        "Documentation.Description": "O tipo que representa un valor de GUID.",
        "Documentation.LongDescription": "O tipo que representa un valor de GUID.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "HiveProtocol.Type",
      "Documentation": {
        "Documentation.Name": "HiveProtocol.Type",
        "Documentation.Description": "HiveProtocolEnum",
        "Documentation.AllowedValues": [
          1,
          2
        ]
      }
    },
    {
      "Name": "Identity.Type",
      "Documentation": {
        "Documentation.Name": "Identity.Type",
        "Documentation.Description": "Unha identidade representa a un usuario, un grupo, un dispositivo ou a outro elemento identificable.",
        "Documentation.LongDescription": "Unha identidade representa a un usuario, un grupo, un dispositivo ou a outro elemento identificable.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "IdentityProvider.Type",
      "Documentation": {
        "Documentation.Name": "IdentityProvider.Type",
        "Documentation.Description": "Define un ámbito no que se crean e comparan identidades.",
        "Documentation.LongDescription": "Define un ámbito no que se crean e comparan identidades.",
        "Documentation.Category": "Accessing data",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int16.Type",
      "Documentation": {
        "Documentation.Name": "Int16.Type",
        "Documentation.Description": "O tipo que representa un número enteiro de 16 bits asinado.",
        "Documentation.LongDescription": "O tipo que representa un número enteiro de 16 bits asinado.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int32.Type",
      "Documentation": {
        "Documentation.Name": "Int32.Type",
        "Documentation.Description": "O tipo que representa un número enteiro de 32 bits asinado.",
        "Documentation.LongDescription": "O tipo que representa un número enteiro de 32 bits asinado.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int64.Type",
      "Documentation": {
        "Documentation.Name": "Int64.Type",
        "Documentation.Description": "O tipo que representa un número enteiro de 64 bits asinado.",
        "Documentation.LongDescription": "O tipo que representa un número enteiro de 64 bits asinado.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Int8.Type",
      "Documentation": {
        "Documentation.Name": "Int8.Type",
        "Documentation.Description": "O tipo que representa un número enteiro de 8 bits asinado.",
        "Documentation.LongDescription": "O tipo que representa un número enteiro de 8 bits asinado.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "JoinAlgorithm.Type",
      "Documentation": {
        "Documentation.Name": "JoinAlgorithm.Type",
        "Documentation.Description": "Especifica o algoritmo de unión que se vai usar na operación de unión.",
        "Documentation.LongDescription": "Especifica o algoritmo de unión que se vai usar na operación de unión.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "JoinKind.Type",
      "Documentation": {
        "Documentation.Name": "JoinKind.Type",
        "Documentation.Description": "Especifica o tipo de algoritmo de unión.",
        "Documentation.LongDescription": "Especifica o tipo de algoritmo de unión.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      }
    },
    {
      "Name": "JoinSide.Type",
      "Documentation": {
        "Documentation.Name": "JoinSide.Type",
        "Documentation.Description": "Especifica a táboa esquerda ou dereita dunha unión.",
        "Documentation.LongDescription": "Especifica a táboa esquerda ou dereita dunha unión.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "LimitClauseKind.Type",
      "Documentation": {
        "Documentation.Name": "LimitClauseKind.Type",
        "Documentation.Description": "Describe o tipo de cláusula LIMIT que admite o dialecto SQL que usa esta orixe de datos.",
        "Documentation.LongDescription": "Describe o tipo de cláusula LIMIT que admite o dialecto SQL que usa esta orixe de datos.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "List.Type",
      "Documentation": {
        "Documentation.Name": "List.Type",
        "Documentation.Description": "O tipo que representa todas as listas.",
        "Documentation.LongDescription": "O tipo que representa todas as listas.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Logical.Type",
      "Documentation": {
        "Documentation.Name": "Logical.Type",
        "Documentation.Description": "O tipo que representa todos os valores lóxicos.",
        "Documentation.LongDescription": "O tipo que representa todos os valores lóxicos.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "MissingField.Type",
      "Documentation": {
        "Documentation.Name": "MissingField.Type",
        "Documentation.Description": "Especifica a acción esperada para os valores que faltan nunha fila que contén menos columnas das esperadas.",
        "Documentation.LongDescription": "Especifica a acción esperada para os valores que faltan nunha fila que contén menos columnas das esperadas.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "None.Type",
      "Documentation": {
        "Documentation.Name": "None.Type",
        "Documentation.Description": "None.Type",
        "Documentation.LongDescription": "None.Type",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Null.Type",
      "Documentation": {
        "Documentation.Name": "Null.Type",
        "Documentation.Description": "O tipo que representa nulo.",
        "Documentation.LongDescription": "O tipo que representa nulo.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Number.Type",
      "Documentation": {
        "Documentation.Name": "Number.Type",
        "Documentation.Description": "O tipo que representa todos os números.",
        "Documentation.LongDescription": "O tipo que representa todos os números.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "ODataOmitValues.Type",
      "Documentation": {
        "Documentation.Name": "ODataOmitValues.Type",
        "Documentation.Description": "Especifica os tipos de valores que pode omitir un servizo OData.",
        "Documentation.LongDescription": "Especifica os tipos de valores que pode omitir un servizo OData.",
        "Documentation.AllowedValues": []
      }
    },
    {
      "Name": "Occurrence.Type",
      "Documentation": {
        "Documentation.Name": "Occurrence.Type",
        "Documentation.Description": "Especifica a ocorrencia dun elemento nunha secuencia.",
        "Documentation.LongDescription": "Especifica a ocorrencia dun elemento nunha secuencia.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Order.Type",
      "Documentation": {
        "Documentation.Name": "Order.Type",
        "Documentation.Description": "Especifica a dirección de ordenación.",
        "Documentation.LongDescription": "Especifica a dirección de ordenación.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "Password.Type",
      "Documentation": {
        "Documentation.Name": "Password.Type",
        "Documentation.Description": "O tipo que representa un contrasinal de texto.",
        "Documentation.LongDescription": "O tipo que representa un contrasinal de texto.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Percentage.Type",
      "Documentation": {
        "Documentation.Name": "Percentage.Type",
        "Documentation.Description": "O tipo que representa o valor de porcentaxe.",
        "Documentation.LongDescription": "O tipo que representa o valor de porcentaxe.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "PercentileMode.Type",
      "Documentation": {
        "Documentation.Name": "PercentileMode.Type",
        "Documentation.Description": "Especifica o tipo de modo de percentil.",
        "Documentation.LongDescription": "Especifica o tipo de modo de percentil.",
        "Documentation.AllowedValues": [
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "Precision.Type",
      "Documentation": {
        "Documentation.Name": "Precision.Type",
        "Documentation.Description": "Especifica a precisión da comparación.",
        "Documentation.LongDescription": "Especifica a precisión da comparación.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "QuoteStyle.Type",
      "Documentation": {
        "Documentation.Name": "QuoteStyle.Type",
        "Documentation.Description": "Especifica o estilo das comiñas.",
        "Documentation.LongDescription": "Especifica o estilo das comiñas.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RankKind.Type",
      "Documentation": {
        "Documentation.Name": "RankKind.Type",
        "Documentation.Description": "Especifica o tipo de clasificación.",
        "Documentation.LongDescription": "Especifica o tipo de clasificación.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Record.Type",
      "Documentation": {
        "Documentation.Name": "Record.Type",
        "Documentation.Description": "O tipo que representa todos os rexistros.",
        "Documentation.LongDescription": "O tipo que representa todos os rexistros.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "RelativePosition.Type",
      "Documentation": {
        "Documentation.Name": "RelativePosition.Type",
        "Documentation.Description": "Indica se a indexación debe facerse desde o principio ou desde o final da entrada.",
        "Documentation.AllowedValues": [
          0,
          1
        ]
      }
    },
    {
      "Name": "RoundingMode.Type",
      "Documentation": {
        "Documentation.Name": "RoundingMode.Type",
        "Documentation.Description": "Especifica a dirección de arredondamento cando hai un empate entre os números aos que é posible arredondar.",
        "Documentation.LongDescription": "Especifica a dirección de arredondamento cando hai un empate entre os números aos que é posible arredondar.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4
        ]
      }
    },
    {
      "Name": "SapBusinessWarehouseExecutionMode.Type",
      "Documentation": {
        "Documentation.Name": "SapBusinessWarehouseExecutionMode.Type",
        "Documentation.Description": "Opcións válidas para a opción do modo de execución de SAP Business Warehouse.",
        "Documentation.LongDescription": "Opcións válidas para a opción do modo de execución de SAP Business Warehouse.",
        "Documentation.AllowedValues": [
          64,
          65,
          66
        ]
      }
    },
    {
      "Name": "SapHanaDistribution.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaDistribution.Type",
        "Documentation.Description": "Opcións válidas para a opción de distribución de SAP HANA.",
        "Documentation.LongDescription": "Opcións válidas para a opción de distribución de SAP HANA.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3
        ]
      }
    },
    {
      "Name": "SapHanaRangeOperator.Type",
      "Documentation": {
        "Documentation.Name": "SapHanaRangeOperator.Type",
        "Documentation.Description": "Un operador de intervalo para os parámetros de entrada de intervalo SAP HANA.",
        "Documentation.LongDescription": "Un operador de intervalo para os parámetros de entrada de intervalo SAP HANA.",
        "Documentation.AllowedValues": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    },
    {
      "Name": "Single.Type",
      "Documentation": {
        "Documentation.Name": "Single.Type",
        "Documentation.Description": "Tipo que representa a coma flutuante de precisión única.",
        "Documentation.LongDescription": "Tipo que representa a coma flutuante de precisión única.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "SparkProtocol.Type",
      "Documentation": {
        "Documentation.Name": "SparkProtocol.Type",
        "Documentation.Description": "O protocolo para usar ao conectarse a unha instancia de Spark.",
        "Documentation.AllowedValues": [
          0,
          1,
          2
        ]
      }
    },
    {
      "Name": "Table.Type",
      "Documentation": {
        "Documentation.Name": "Table.Type",
        "Documentation.Description": "O tipo que representa todas as táboas.",
        "Documentation.LongDescription": "O tipo que representa todas as táboas.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Text.Type",
      "Documentation": {
        "Documentation.Name": "Text.Type",
        "Documentation.Description": "O tipo que representa todos os valores de texto.",
        "Documentation.LongDescription": "O tipo que representa todos os valores de texto.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TextEncoding.Type",
      "Documentation": {
        "Documentation.Name": "TextEncoding.Type",
        "Documentation.Description": "Especifica o tipo de codificación de texto.",
        "Documentation.LongDescription": "Especifica o tipo de codificación de texto.",
        "Documentation.AllowedValues": [
          1200,
          1200,
          1201,
          1252,
          20127,
          65001
        ]
      }
    },
    {
      "Name": "Time.Type",
      "Documentation": {
        "Documentation.Name": "Time.Type",
        "Documentation.Description": "O tipo que representa todos os valores de hora.",
        "Documentation.LongDescription": "O tipo que representa todos os valores de hora.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "TraceLevel.Type",
      "Documentation": {
        "Documentation.Name": "TraceLevel.Type",
        "Documentation.Description": "Especifica o nivel de rastrexo.",
        "Documentation.LongDescription": "Especifica o nivel de rastrexo.",
        "Documentation.AllowedValues": [
          1,
          2,
          4,
          8,
          16
        ]
      }
    },
    {
      "Name": "Type.Type",
      "Documentation": {
        "Documentation.Name": "Type.Type",
        "Documentation.Description": "O tipo que representa todos os tipos.",
        "Documentation.LongDescription": "O tipo que representa todos os tipos.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "Uri.Type",
      "Documentation": {
        "Documentation.Name": "Uri.Type",
        "Documentation.Description": "O tipo que representa un URI de texto.",
        "Documentation.LongDescription": "O tipo que representa un URI de texto.",
        "Documentation.Category": "",
        "Documentation.Examples": []
      }
    },
    {
      "Name": "WebMethod.Type",
      "Documentation": {
        "Documentation.Name": "WebMethod.Type",
        "Documentation.Description": "Especifica un método HTTP.",
        "Documentation.LongDescription": "Especifica un método HTTP.",
        "Documentation.AllowedValues": []
      }
    }
  ]
}
